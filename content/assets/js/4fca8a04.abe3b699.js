"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[3424],{40456:(e,d,s)=>{s.r(d),s.d(d,{assets:()=>l,contentTitle:()=>c,default:()=>x,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"io-redis","title":"redis Connector","description":"Sink","source":"@site/versioned_docs/version-2.4.1/io-redis.md","sourceDirName":".","slug":"/io-redis","permalink":"/docs/2.4.1/io-redis","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.4.1/io-redis.md","tags":[],"version":"2.4.1","frontMatter":{"id":"io-redis","title":"redis Connector","sidebar_label":"redis Connector","original_id":"io-redis"}}');var n=s(74848),t=s(28453);const r={id:"io-redis",title:"redis Connector",sidebar_label:"redis Connector",original_id:"io-redis"},c=void 0,l={},o=[{value:"Sink",id:"sink",level:2},{value:"Sink Configuration Options",id:"sink-configuration-options",level:2}];function h(e){const d={code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(d.h2,{id:"sink",children:"Sink"}),"\n",(0,n.jsx)(d.p,{children:"The redis Sink Connector is used to pull messages from Pulsar topics and persist the messages\nto a redis database."}),"\n",(0,n.jsx)(d.h2,{id:"sink-configuration-options",children:"Sink Configuration Options"}),"\n",(0,n.jsxs)(d.table,{children:[(0,n.jsx)(d.thead,{children:(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.th,{children:"Name"}),(0,n.jsx)(d.th,{children:"Default"}),(0,n.jsx)(d.th,{children:"Required"}),(0,n.jsx)(d.th,{children:"Description"})]})}),(0,n.jsxs)(d.tbody,{children:[(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"redisHosts"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"true"})}),(0,n.jsx)(d.td,{children:"A comma separated list of Redis hosts to connect to."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"redisPassword"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"null"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The password used to connect to Redis."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"redisDatabase"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"0"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"true"})}),(0,n.jsx)(d.td,{children:"The Redis database to connect to."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"clientMode"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"Standalone"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The client mode to use when interacting with the Redis cluster. Possible values [Standalone, Cluster]."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"autoReconnect"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"true"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"Flag to determine if the Redis client should automatically reconnect."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"requestQueue"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"2147483647"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The maximum number of queued requests to Redis."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"tcpNoDelay"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"Flag to enable TCP no delay should be used."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"keepAlive"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"Flag to enable a keepalive to Redis."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"connectTimeout"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"10000"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The amount of time in milliseconds to wait before timing out when connecting."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"operationTimeout"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"10000"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The amount of time in milliseconds before an operation is marked as timed out."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"batchTimeMs"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"1000"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The Redis operation time in milliseconds."})]}),(0,n.jsxs)(d.tr,{children:[(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"batchSize"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"1000"})}),(0,n.jsx)(d.td,{children:(0,n.jsx)(d.code,{children:"false"})}),(0,n.jsx)(d.td,{children:"The batch size of write to Redis database."})]})]})]})]})}function x(e={}){const{wrapper:d}={...(0,t.R)(),...e.components};return d?(0,n.jsx)(d,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,d,s)=>{s.d(d,{R:()=>r,x:()=>c});var i=s(96540);const n={},t=i.createContext(n);function r(e){const d=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(d):{...d,...e}}),[d,e])}function c(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(t.Provider,{value:d},e.children)}}}]);
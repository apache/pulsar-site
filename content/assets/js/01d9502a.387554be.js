"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[24083],{75498:(e,s,l)=>{l.r(s),l.d(s,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"client-libraries-cpp","title":"Pulsar C++ client","description":"You can use Pulsar C++ client to create Pulsar producers and consumers in C++.","source":"@site/versioned_docs/version-2.6.2/client-libraries-cpp.md","sourceDirName":".","slug":"/client-libraries-cpp","permalink":"/docs/2.6.2/client-libraries-cpp","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.6.2/client-libraries-cpp.md","tags":[],"version":"2.6.2","frontMatter":{"id":"client-libraries-cpp","title":"Pulsar C++ client","sidebar_label":"C++","original_id":"client-libraries-cpp"},"sidebar":"docsSidebar","previous":{"title":"Python","permalink":"/docs/2.6.2/client-libraries-python"},"next":{"title":"Node.js","permalink":"/docs/2.6.2/client-libraries-node"}}');var r=l(74848),a=l(28453);const i={id:"client-libraries-cpp",title:"Pulsar C++ client",sidebar_label:"C++",original_id:"client-libraries-cpp"},c=void 0,t={},d=[{value:"Supported platforms",id:"supported-platforms",level:2},{value:"Linux",id:"linux",level:2},{value:"Install RPM",id:"install-rpm",level:3},{value:"Install Debian",id:"install-debian",level:3},{value:"Build",id:"build",level:3},{value:"RPM",id:"rpm",level:4},{value:"Debian",id:"debian",level:4},{value:"MacOS",id:"macos",level:2},{value:"Connection URLs",id:"connection-urls",level:2},{value:"Create a consumer",id:"create-a-consumer",level:2},{value:"Create a producer",id:"create-a-producer",level:2},{value:"Enable authentication in connection URLs",id:"enable-authentication-in-connection-urls",level:2},{value:"Schema",id:"schema",level:2},{value:"Create producer with Avro schema",id:"create-producer-with-avro-schema",level:3},{value:"Create consumer with Avro schema",id:"create-consumer-with-avro-schema",level:3}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"You can use Pulsar C++ client to create Pulsar producers and consumers in C++."}),"\n",(0,r.jsx)(s.p,{children:"All the methods in producer, consumer, and reader of a C++ client are thread-safe."}),"\n",(0,r.jsx)(s.h2,{id:"supported-platforms",children:"Supported platforms"}),"\n",(0,r.jsxs)(s.p,{children:["Pulsar C++ client is supported on ",(0,r.jsx)(s.strong,{children:"Linux"})," and ",(0,r.jsx)(s.strong,{children:"MacOS"})," platforms."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"http://www.doxygen.nl/",children:"Doxygen"}),"-generated API docs for the C++ client are available ",(0,r.jsx)(s.a,{href:"https://pulsar.apache.org/api/cpp/2.6.2",children:"here"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"linux",children:"Linux"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:"Since 2.1.0 release, Pulsar ships pre-built RPM and Debian packages. You can download and install those packages directly."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Four kind of libraries ",(0,r.jsx)(s.code,{children:"libpulsar.so"})," / ",(0,r.jsx)(s.code,{children:"libpulsarnossl.so"})," / ",(0,r.jsx)(s.code,{children:"libpulsar.a"})," / ",(0,r.jsx)(s.code,{children:"libpulsarwithdeps.a"})," are included in your ",(0,r.jsx)(s.code,{children:"/usr/lib"})," after rpm/deb download and install.\nBy default, they are build under code path ",(0,r.jsx)(s.code,{children:"${PULSAR_HOME}/pulsar-client-cpp"}),", using command\n",(0,r.jsx)(s.code,{children:"cmake . -DBUILD_TESTS=OFF -DLINK_STATIC=ON && make pulsarShared pulsarSharedNossl pulsarStatic pulsarStaticWithDeps -j 3"}),"\nThese libraries rely on some other libraries, if you want to get detailed version of dependencies libraries, please reference ",(0,r.jsx)(s.a,{href:"https://github.com/apache/pulsar/blob/master/pulsar-client-cpp/pkg/rpm/Dockerfile",children:"these"})," ",(0,r.jsx)(s.a,{href:"https://github.com/apache/pulsar/blob/master/pulsar-client-cpp/pkg/deb/Dockerfile",children:"files"}),"."]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"libpulsar.so"})," is the Shared library, it contains statically linked ",(0,r.jsx)(s.code,{children:"boost"})," and ",(0,r.jsx)(s.code,{children:"openssl"}),", and will also dynamically link all other needed libraries.\nThe command the when use this pulsar library is like this:"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\n g++ --std=c++11  PulsarTest.cpp -o test /usr/lib/libpulsar.so -I/usr/local/ssl/include\n\n"})}),"\n",(0,r.jsxs)(s.ol,{start:"2",children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"libpulsarnossl.so"})," is the Shared library that similar to ",(0,r.jsx)(s.code,{children:"libpulsar.so"})," except that the library ",(0,r.jsx)(s.code,{children:"openssl"})," and ",(0,r.jsx)(s.code,{children:"crypto"})," are dynamically linked.\nThe command the when use this pulsar library is like this:"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\n g++ --std=c++11  PulsarTest.cpp -o test /usr/lib/libpulsarnossl.so -lssl -lcrypto -I/usr/local/ssl/include -L/usr/local/ssl/lib\n\n"})}),"\n",(0,r.jsxs)(s.ol,{start:"3",children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"libpulsar.a"})," is the Static library, it need to load some dependencies library when using it.\nThe command the when use this pulsar library is like this:"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\n g++ --std=c++11  PulsarTest.cpp -o test /usr/lib/libpulsar.a -lssl -lcrypto -ldl -lpthread  -I/usr/local/ssl/include -L/usr/local/ssl/lib -lboost_system -lboost_regex -lcurl -lprotobuf -lzstd -lz\n\n"})}),"\n",(0,r.jsxs)(s.ol,{start:"4",children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"libpulsarwithdeps.a"})," is the Static library, base on ",(0,r.jsx)(s.code,{children:"libpulsar.a"}),", and archived in the dependencies libraries of ",(0,r.jsx)(s.code,{children:"libboost_regex"}),",  ",(0,r.jsx)(s.code,{children:"libboost_system"}),", ",(0,r.jsx)(s.code,{children:"libcurl"}),", ",(0,r.jsx)(s.code,{children:"libprotobuf"}),", ",(0,r.jsx)(s.code,{children:"libzstd"})," and ",(0,r.jsx)(s.code,{children:"libz"}),",\nThe command the when use this pulsar library is like this:"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\n g++ --std=c++11  PulsarTest.cpp -o test /usr/lib/libpulsarwithdeps.a -lssl -lcrypto -ldl -lpthread  -I/usr/local/ssl/include -L/usr/local/ssl/lib\n\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"libpulsarwithdeps.a"})," does not include library openssl related libraries: ",(0,r.jsx)(s.code,{children:"libssl"})," and ",(0,r.jsx)(s.code,{children:"libcrypto"}),", because these 2 library is related to security,\nby using user local system provided version is more reasonable, and more easy for user to handling security issue and library upgrade."]}),"\n",(0,r.jsx)(s.h3,{id:"install-rpm",children:"Install RPM"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Download a RPM package from the links in the table."}),"\n"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Link"}),(0,r.jsx)(s.th,{children:"Crypto files"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-2.6.2-1.x86_64.rpm",children:"client"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-2.6.2-1.x86_64.rpm.asc",children:"asc"}),", ",(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-2.6.2-1.x86_64.rpm.sha512",children:"sha512"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-debuginfo-2.6.2-1.x86_64.rpm",children:"client-debuginfo"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-debuginfo-2.6.2-1.x86_64.rpm.asc",children:"asc"}),",  ",(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-debuginfo-2.6.2-1.x86_64.rpm.sha512",children:"sha512"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-devel-2.6.2-1.x86_64.rpm",children:"client-devel"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-devel-2.6.2-1.x86_64.rpm.asc",children:"asc"}),",  ",(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/RPMS/apache-pulsar-client-devel-2.6.2-1.x86_64.rpm.sha512",children:"sha512"})]})]})]})]}),"\n",(0,r.jsxs)(s.ol,{start:"2",children:["\n",(0,r.jsx)(s.li,{children:"Install the package using the following command."}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\n$ rpm -ivh apache-pulsar-client*.rpm\n\n"})}),"\n",(0,r.jsxs)(s.p,{children:["After install, Pulsar libraries will be placed under ",(0,r.jsx)(s.code,{children:"/usr/lib"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"install-debian",children:"Install Debian"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Download a Debian package from the links in the table."}),"\n"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Link"}),(0,r.jsx)(s.th,{children:"Crypto files"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/DEB/apache-pulsar-client.deb",children:"client"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/DEB/apache-pulsar-client.deb.asc",children:"asc"}),", ",(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/DEB/apache-pulsar-client.deb.sha512",children:"sha512"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/DEB/apache-pulsar-client-dev.deb",children:"client-devel"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/DEB/apache-pulsar-client-dev.deb.asc",children:"asc"}),",  ",(0,r.jsx)(s.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.6.2/DEB/apache-pulsar-client-dev.deb.sha512",children:"sha512"})]})]})]})]}),"\n",(0,r.jsxs)(s.ol,{start:"2",children:["\n",(0,r.jsx)(s.li,{children:"Install the package using the following command:"}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\n$ apt install ./apache-pulsar-client*.deb\n\n"})}),"\n",(0,r.jsxs)(s.p,{children:["After install, Pulsar libraries will be placed under ",(0,r.jsx)(s.code,{children:"/usr/lib"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"build",children:"Build"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsx)(s.p,{children:"If you want to build RPM and Debian packages from the latest master, follow the instructions below. All the instructions are run at the root directory of your cloned Pulsar repository."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["There are recipes that build RPM and Debian packages containing a\nstatically linked ",(0,r.jsx)(s.code,{children:"libpulsar.so"})," / ",(0,r.jsx)(s.code,{children:"libpulsarnossl.so"})," / ",(0,r.jsx)(s.code,{children:"libpulsar.a"})," / ",(0,r.jsx)(s.code,{children:"libpulsarwithdeps.a"})," with all the required\ndependencies."]}),"\n",(0,r.jsx)(s.p,{children:"To build the C++ library packages, build the Java packages first."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"\nmvn install -DskipTests\n\n"})}),"\n",(0,r.jsx)(s.h4,{id:"rpm",children:"RPM"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"\npulsar-client-cpp/pkg/rpm/docker-build-rpm.sh\n\n"})}),"\n",(0,r.jsxs)(s.p,{children:["This builds the RPM inside a Docker container and it leaves the RPMs in ",(0,r.jsx)(s.code,{children:"pulsar-client-cpp/pkg/rpm/RPMS/x86_64/"}),"."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Package name"}),(0,r.jsx)(s.th,{children:"Content"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pulsar-client"}),(0,r.jsxs)(s.td,{children:["Shared library ",(0,r.jsx)(s.code,{children:"libpulsar.so"})," and ",(0,r.jsx)(s.code,{children:"libpulsarnossl.so"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pulsar-client-devel"}),(0,r.jsxs)(s.td,{children:["Static library ",(0,r.jsx)(s.code,{children:"libpulsar.a"}),", ",(0,r.jsx)(s.code,{children:"libpulsarwithdeps.a"}),"and C++ and C headers"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pulsar-client-debuginfo"}),(0,r.jsxs)(s.td,{children:["Debug symbols for ",(0,r.jsx)(s.code,{children:"libpulsar.so"})]})]})]})]}),"\n",(0,r.jsx)(s.h4,{id:"debian",children:"Debian"}),"\n",(0,r.jsx)(s.p,{children:"To build Debian packages, enter the following command."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"\npulsar-client-cpp/pkg/deb/docker-build-deb.sh\n\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Debian packages are created at ",(0,r.jsx)(s.code,{children:"pulsar-client-cpp/pkg/deb/BUILD/DEB/"}),"."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Package name"}),(0,r.jsx)(s.th,{children:"Content"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pulsar-client"}),(0,r.jsxs)(s.td,{children:["Shared library ",(0,r.jsx)(s.code,{children:"libpulsar.so"})," and ",(0,r.jsx)(s.code,{children:"libpulsarnossl.so"})]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"pulsar-client-dev"}),(0,r.jsxs)(s.td,{children:["Static library ",(0,r.jsx)(s.code,{children:"libpulsar.a"}),", ",(0,r.jsx)(s.code,{children:"libpulsarwithdeps.a"})," and C++ and C headers"]})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"macos",children:"MacOS"}),"\n",(0,r.jsxs)(s.p,{children:["Pulsar releases are available in the ",(0,r.jsx)(s.a,{href:"https://brew.sh/",children:"Homebrew"})," core repository. You can install the C++ client library with the following command. The package is installed with the library and headers."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"\nbrew install libpulsar\n\n"})}),"\n",(0,r.jsx)(s.h2,{id:"connection-urls",children:"Connection URLs"}),"\n",(0,r.jsx)(s.p,{children:"To connect to Pulsar using client libraries, you need to specify a Pulsar protocol URL."}),"\n",(0,r.jsxs)(s.p,{children:["Pulsar protocol URLs are assigned to specific clusters, you can use the Pulsar URI scheme. The default port is ",(0,r.jsx)(s.code,{children:"6650"}),". The following is an example for localhost."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-http",children:"\npulsar://localhost:6650\n\n"})}),"\n",(0,r.jsx)(s.p,{children:"In a Pulsar cluster in production, the URL looks as follows:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-http",children:"\npulsar://pulsar.us-west.example.com:6650\n\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If you use TLS authentication, you need to add ",(0,r.jsx)(s.code,{children:"ssl"}),", and the default port is ",(0,r.jsx)(s.code,{children:"6651"}),". The following is an example."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-http",children:"\npulsar+ssl://pulsar.us-west.example.com:6651\n\n"})}),"\n",(0,r.jsx)(s.h2,{id:"create-a-consumer",children:"Create a consumer"}),"\n",(0,r.jsx)(s.p,{children:"To connect to Pulsar as a consumer, you need to create a consumer on the C++ client. The following is an example."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c++",children:'\nClient client("pulsar://localhost:6650");\n\nConsumer consumer;\nResult result = client.subscribe("my-topic", "my-subscription-name", consumer);\nif (result != ResultOk) {\n    LOG_ERROR("Failed to subscribe: " << result);\n    return -1;\n}\n\nMessage msg;\n\nwhile (true) {\n    consumer.receive(msg);\n    LOG_INFO("Received: " << msg\n            << "  with payload \'" << msg.getDataAsString() << "\'");\n\n    consumer.acknowledge(msg);\n}\n\nclient.close();\n\n'})}),"\n",(0,r.jsx)(s.h2,{id:"create-a-producer",children:"Create a producer"}),"\n",(0,r.jsx)(s.p,{children:"To connect to Pulsar as a producer, you need to create a producer on the C++ client. The following is an example."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-c++",children:'\nClient client("pulsar://localhost:6650");\n\nProducer producer;\nResult result = client.createProducer("my-topic", producer);\nif (result != ResultOk) {\n    LOG_ERROR("Error creating producer: " << result);\n    return -1;\n}\n\n// Publish 10 messages to the topic\nfor (int i = 0; i < 10; i++){\n    Message msg = MessageBuilder().setContent("my-message").build();\n    Result res = producer.send(msg);\n    LOG_INFO("Message sent: " << res);\n}\nclient.close();\n\n'})}),"\n",(0,r.jsx)(s.h2,{id:"enable-authentication-in-connection-urls",children:"Enable authentication in connection URLs"}),"\n",(0,r.jsxs)(s.p,{children:["If you use TLS authentication when connecting to Pulsar, you need to add ",(0,r.jsx)(s.code,{children:"ssl"})," in the connection URLs, and the default port is ",(0,r.jsx)(s.code,{children:"6651"}),". The following is an example."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:'\nClientConfiguration config = ClientConfiguration();\nconfig.setUseTls(true);\nconfig.setTlsTrustCertsFilePath("/path/to/cacert.pem");\nconfig.setTlsAllowInsecureConnection(false);\nconfig.setAuth(pulsar::AuthTls::create(\n            "/path/to/client-cert.pem", "/path/to/client-key.pem"););\n\nClient client("pulsar+ssl://my-broker.com:6651", config);\n\n'})}),"\n",(0,r.jsxs)(s.p,{children:["For complete examples, refer to ",(0,r.jsx)(s.a,{href:"https://github.com/apache/pulsar-client-cpp/tree/main/examples",children:"C++ client examples"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"schema",children:"Schema"}),"\n",(0,r.jsxs)(s.p,{children:["This section describes some examples about schema. For more information about schema, see ",(0,r.jsx)(s.a,{href:"/docs/2.6.2/schema-get-started",children:"Pulsar schema"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"create-producer-with-avro-schema",children:"Create producer with Avro schema"}),"\n",(0,r.jsx)(s.p,{children:"The following example shows how to create a producer with an Avro schema."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:'\nstatic const std::string exampleSchema =\n    "{\\"type\\":\\"record\\",\\"name\\":\\"Example\\",\\"namespace\\":\\"test\\","\n    "\\"fields\\":[{\\"name\\":\\"a\\",\\"type\\":\\"int\\"},{\\"name\\":\\"b\\",\\"type\\":\\"int\\"}]}";\nProducer producer;\nProducerConfiguration producerConf;\nproducerConf.setSchema(SchemaInfo(AVRO, "Avro", exampleSchema));\nclient.createProducer("topic-avro", producerConf, producer);\n\n'})}),"\n",(0,r.jsx)(s.h3,{id:"create-consumer-with-avro-schema",children:"Create consumer with Avro schema"}),"\n",(0,r.jsx)(s.p,{children:"The following example shows how to create a consumer with an Avro schema."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-cpp",children:'\nstatic const std::string exampleSchema =\n    "{\\"type\\":\\"record\\",\\"name\\":\\"Example\\",\\"namespace\\":\\"test\\","\n    "\\"fields\\":[{\\"name\\":\\"a\\",\\"type\\":\\"int\\"},{\\"name\\":\\"b\\",\\"type\\":\\"int\\"}]}";\nConsumerConfiguration consumerConf;\nConsumer consumer;\nconsumerConf.setSchema(SchemaInfo(AVRO, "Avro", exampleSchema));\nclient.subscribe("topic-avro", "sub-2", consumerConf, consumer)\n\n'})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,s,l)=>{l.d(s,{R:()=>i,x:()=>c});var n=l(96540);const r={},a=n.createContext(r);function i(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);
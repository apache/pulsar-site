"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[86145],{29314:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"io-jdbc","title":"JDBC Connector","description":"Sink","source":"@site/versioned_docs/version-2.4.2/io-jdbc.md","sourceDirName":".","slug":"/io-jdbc","permalink":"/docs/2.4.2/io-jdbc","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.4.2/io-jdbc.md","tags":[],"version":"2.4.2","frontMatter":{"id":"io-jdbc","title":"JDBC Connector","sidebar_label":"JDBC Connector","original_id":"io-jdbc"}}');var d=n(74848),i=n(28453);const r={id:"io-jdbc",title:"JDBC Connector",sidebar_label:"JDBC Connector",original_id:"io-jdbc"},c=void 0,o={},l=[{value:"Sink",id:"sink",level:2},{value:"Sink Configuration Options",id:"sink-configuration-options",level:3}];function h(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h2,{id:"sink",children:"Sink"}),"\n",(0,d.jsx)(t.p,{children:"The JDBC Sink Connector is used to pull messages from Pulsar topics and persist the messages to an MySQL or Sqlite.\nCurrent support INSERT, DELETE and UPDATE."}),"\n",(0,d.jsx)(t.h3,{id:"sink-configuration-options",children:"Sink Configuration Options"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Name"}),(0,d.jsx)(t.th,{children:"Required"}),(0,d.jsx)(t.th,{children:"Default"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"userName"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false"})}),(0,d.jsx)(t.td,{children:"``"}),(0,d.jsxs)(t.td,{children:["Username used to connect to the database specified by ",(0,d.jsx)(t.code,{children:"jdbcUrl"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"password"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false"})}),(0,d.jsx)(t.td,{children:"``"}),(0,d.jsxs)(t.td,{children:["Password used to connect to the database specified by ",(0,d.jsx)(t.code,{children:"jdbcUrl"}),"."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"jdbcUrl"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true"})}),(0,d.jsx)(t.td,{children:"``"}),(0,d.jsx)(t.td,{children:"The JDBC url of the database this connector connects to."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"tableName"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"true"})}),(0,d.jsx)(t.td,{children:"``"}),(0,d.jsx)(t.td,{children:"The name of the table this connector writes messages to."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"nonKey"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false"})}),(0,d.jsx)(t.td,{children:"``"}),(0,d.jsx)(t.td,{children:"Fields used in update events. A comma-separated list."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"key"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false"})}),(0,d.jsx)(t.td,{children:"``"}),(0,d.jsx)(t.td,{children:"Fields used in where condition of update and delete Events. A comma-separated list."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"timeoutMs"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"500"})}),(0,d.jsx)(t.td,{children:"The jdbc operation timeout in milliseconds."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:"batchSize"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"false"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"200"})}),(0,d.jsx)(t.td,{children:"The batch size of updates made to the database."})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(96540);const d={},i=s.createContext(d);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[52527],{97738:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"adaptors-spark","title":"Pulsar adaptor for Apache Spark","description":"The Spark Streaming receiver for Pulsar is a custom receiver that enables Apache Spark Streaming to receive raw data from Pulsar.","source":"@site/versioned_docs/version-2.3.2/adaptors-spark.md","sourceDirName":".","slug":"/adaptors-spark","permalink":"/docs/2.3.2/adaptors-spark","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.3.2/adaptors-spark.md","tags":[],"version":"2.3.2","frontMatter":{"id":"adaptors-spark","title":"Pulsar adaptor for Apache Spark","sidebar_label":"Apache Spark","original_id":"adaptors-spark"},"sidebar":"docsSidebar","previous":{"title":"Kafka client wrapper","permalink":"/docs/2.3.2/adaptors-kafka"},"next":{"title":"Apache Storm","permalink":"/docs/2.3.2/adaptors-storm"}}');var s=r(74848),t=r(28453);const i={id:"adaptors-spark",title:"Pulsar adaptor for Apache Spark",sidebar_label:"Apache Spark",original_id:"adaptors-spark"},o=void 0,p={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Maven",id:"maven",level:3},{value:"Gradle",id:"gradle",level:3},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2}];function l(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a.p,{children:["The Spark Streaming receiver for Pulsar is a custom receiver that enables Apache ",(0,s.jsx)(a.a,{href:"https://spark.apache.org/streaming/",children:"Spark Streaming"})," to receive raw data from Pulsar."]}),"\n",(0,s.jsxs)(a.p,{children:["An application can receive data in ",(0,s.jsx)(a.a,{href:"https://spark.apache.org/docs/latest/programming-guide.html#resilient-distributed-datasets-rdds",children:"Resilient Distributed Dataset"})," (RDD) format via the Spark Streaming receiver and can process it in a variety of ways."]}),"\n",(0,s.jsx)(a.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(a.p,{children:["To use the receiver, include a dependency for the ",(0,s.jsx)(a.code,{children:"pulsar-spark"})," library in your Java configuration."]}),"\n",(0,s.jsx)(a.h3,{id:"maven",children:"Maven"}),"\n",(0,s.jsxs)(a.p,{children:["If you're using Maven, add this to your ",(0,s.jsx)(a.code,{children:"pom.xml"}),":"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-xml",children:"\n\x3c!-- in your <properties> block --\x3e\n<pulsar.version>2.3.2</pulsar.version>\n\n\x3c!-- in your <dependencies> block --\x3e\n<dependency>\n  <groupId>org.apache.pulsar</groupId>\n  <artifactId>pulsar-spark</artifactId>\n  <version>${pulsar.version}</version>\n</dependency>\n\n"})}),"\n",(0,s.jsx)(a.h3,{id:"gradle",children:"Gradle"}),"\n",(0,s.jsxs)(a.p,{children:["If you're using Gradle, add this to your ",(0,s.jsx)(a.code,{children:"build.gradle"})," file:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-groovy",children:"\ndef pulsarVersion = \"2.3.2\"\n\ndependencies {\n    compile group: 'org.apache.pulsar', name: 'pulsar-spark', version: pulsarVersion\n}\n\n"})}),"\n",(0,s.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(a.p,{children:["Pass an instance of ",(0,s.jsx)(a.code,{children:"SparkStreamingPulsarReceiver"})," to the ",(0,s.jsx)(a.code,{children:"receiverStream"})," method in ",(0,s.jsx)(a.code,{children:"JavaStreamingContext"}),":"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'\n    String serviceUrl = "pulsar://localhost:6650/";\n    String topic = "persistent://public/default/test_src";\n    String subs = "test_sub";\n\n    SparkConf sparkConf = new SparkConf().setMaster("local[*]").setAppName("Pulsar Spark Example");\n\n    JavaStreamingContext jsc = new JavaStreamingContext(sparkConf, Durations.seconds(60));\n\n    ConsumerConfigurationData<byte[]> pulsarConf = new ConsumerConfigurationData();\n\n    Set<String> set = new HashSet();\n    set.add(topic);\n    pulsarConf.setTopicNames(set);\n    pulsarConf.setSubscriptionName(subs);\n\n    SparkStreamingPulsarReceiver pulsarReceiver = new SparkStreamingPulsarReceiver(\n        serviceUrl,\n        pulsarConf,\n        new AuthenticationDisabled());\n\n    JavaReceiverInputDStream<byte[]> lineDStream = jsc.receiverStream(pulsarReceiver);\n\n'})}),"\n",(0,s.jsx)(a.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(a.p,{children:["You can find a complete example ",(0,s.jsx)(a.a,{href:"https://github.com/apache/pulsar/tree/master/examples/spark/src/main/java/org/apache/spark/streaming/receiver/example/SparkStreamingPulsarReceiverExample.java",children:"here"}),'.\nIn this example, the number of messages which contain the string "Pulsar" in received messages is counted.']})]})}function d(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,a,r)=>{r.d(a,{R:()=>i,x:()=>o});var n=r(96540);const s={},t=n.createContext(s);function i(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);
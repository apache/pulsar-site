"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[36244],{8183:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"versioned/client-java-2.11.2","title":"Client Java 2.11.2","description":"- improve Cache empty schema version in ProducerImpl schemaCache #19929","source":"@site/release-notes/versioned/client-java-2.11.2.md","sourceDirName":"versioned","slug":"/versioned/client-java-2.11.2","permalink":"/release-notes/versioned/client-java-2.11.2","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/release-notes/versioned/client-java-2.11.2.md","tags":[],"version":"current","frontMatter":{"id":"client-java-2.11.2","title":"Client Java 2.11.2","sidebar_label":"Client Java 2.11.2"}}');var n=t(74848),i=t(28453);const r={id:"client-java-2.11.2",title:"Client Java 2.11.2",sidebar_label:"Client Java 2.11.2"},l=void 0,c={},o=[];function h(e){const a={a:"a",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["[improve][Java] Cache empty schema version in ProducerImpl schemaCache ",(0,n.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/19929",children:"#19929"})]}),"\n",(0,n.jsxs)(a.li,{children:["[improve][Java] Make the whole grabCnx() progress atomic ",(0,n.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/20595",children:"#20595"})]}),"\n",(0,n.jsxs)(a.li,{children:["[fix][Java] Use scheduled executor in BinaryProtoLookupService ",(0,n.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/20043",children:"#20043"})]}),"\n",(0,n.jsxs)(a.li,{children:["[fix][Java] Release the orphan producers after the primary consumer is closed ",(0,n.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/19858",children:"#19858"})]}),"\n",(0,n.jsxs)(a.li,{children:["[fix][Java] Fix NPE when acknowledging multiple messages ",(0,n.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/19874",children:"#19874"})]}),"\n",(0,n.jsxs)(a.li,{children:["[fix][Java] Fix where the function getMsgNumInReceiverQueue always returns 0 when using message listener ",(0,n.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/20245",children:"#20245"})]}),"\n",(0,n.jsxs)(a.li,{children:["[fix][Java] Fix deadlock issue of consumer while using multiple IO threads ",(0,n.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/20669",children:"#20669"})]}),"\n",(0,n.jsxs)(a.li,{children:["[fix][Java] Messages lost when consumer reconnect ",(0,n.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/20695",children:"#20695"})]}),"\n"]})}function u(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>l});var s=t(96540);const n={},i=s.createContext(n);function r(e){const a=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);
"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[38171],{23875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>a,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"io-netty","title":"Netty Tcp or Udp Connector","description":"Source","source":"@site/versioned_docs/version-2.3.0/io-netty.md","sourceDirName":".","slug":"/io-netty","permalink":"/docs/2.3.0/io-netty","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.3.0/io-netty.md","tags":[],"version":"2.3.0","frontMatter":{"id":"io-netty","title":"Netty Tcp or Udp Connector","sidebar_label":"Netty Tcp or Udp Connector","original_id":"io-netty"}}');var r=n(74848),i=n(28453);const c={id:"io-netty",title:"Netty Tcp or Udp Connector",sidebar_label:"Netty Tcp or Udp Connector",original_id:"io-netty"},s=void 0,d={},l=[{value:"Source",id:"source",level:2},{value:"Source Configuration Options",id:"source-configuration-options",level:3}];function h(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"source",children:"Source"}),"\n",(0,r.jsx)(t.p,{children:"The Netty Source connector opens a port that accept incoming data via the configured network protocol and publish it to a user-defined Pulsar topic.\nAlso, this connector is suggested to be used in a containerized (e.g. k8s) deployment.\nOtherwise, if the connector is running in process or thread mode, the instances may be conflicting on listening to ports."}),"\n",(0,r.jsx)(t.h3,{id:"source-configuration-options",children:"Source Configuration Options"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Required"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"type"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"tcp"})}),(0,r.jsx)(t.td,{children:"The network protocol over which data is trasmitted to netty. Valid values include HTTP, TCP, and UDP"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"host"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"127.0.0.1"})}),(0,r.jsx)(t.td,{children:"The host name or address that the source instance to listen on."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"port"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"10999"})}),(0,r.jsx)(t.td,{children:"The port that the source instance to listen on."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"numberOfThreads"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"false"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"1"})}),(0,r.jsx)(t.td,{children:"The number of threads of Netty Tcp Server to accept incoming connections and handle the traffic of the accepted connections."})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var o=n(96540);const r={},i=o.createContext(r);function c(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);
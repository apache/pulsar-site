"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[1677],{20734:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var o=n(57212),t=n(74848),r=n(28453);const i={author:"Hang Chen, Anonymitaet",title:"Apache Pulsar 2.8.1"},c="What\u2019s New in Apache Pulsar 2.8.1",a={authorsImageUrls:[void 0]},l=[{value:"Broker",id:"broker",level:2},{value:"Precise publish rate limit takes effect as expected. PR-11446",id:"precise-publish-rate-limit-takes-effect-as-expected-pr-11446",level:3},{value:"Messages with the same keys are delivered to the correct consumers on Key-Shared subscriptions. PR-10762",id:"messages-with-the-same-keys-are-delivered-to-the-correct-consumers-on-key-shared-subscriptions-pr-10762",level:3},{value:"Active producers with the same name are no longer removed from the topic map. PR-11804",id:"active-producers-with-the-same-name-are-no-longer-removed-from-the-topic-map-pr-11804",level:3},{value:"Topics in a fenced state can recover when producers continue to reconnect to brokers. PR-11737",id:"topics-in-a-fenced-state-can-recover-when-producers-continue-to-reconnect-to-brokers-pr-11737",level:3},{value:"Topic properly initializes the cursor to prevent data loss. PR-11547",id:"topic-properly-initializes-the-cursor-to-prevent-data-loss-pr-11547",level:3},{value:"Deadlock no longer occurs when using <code>hasMessageAvailableAsync</code> and <code>readNextAsync</code>. PR-11183",id:"deadlock-no-longer-occurs-when-using-hasmessageavailableasync-and-readnextasync-pr-11183",level:3},{value:"Memory leak does not occur when calling getLastMessageId API. PR-10977",id:"memory-leak-does-not-occur-when-calling-getlastmessageid-api-pr-10977",level:3},{value:"Compaction is triggered for system topics. PR-10941",id:"compaction-is-triggered-for-system-topics-pr-10941",level:3},{value:"Key-shared subscriptions no longer stop dispatching to consumers when repeatedly opening and closing consumers. PR-10920",id:"key-shared-subscriptions-no-longer-stop-dispatching-to-consumers-when-repeatedly-opening-and-closing-consumers-pr-10920",level:3},{value:"Consumers are not allowed to read data on topics to which they are not subscribed. PR-11912",id:"consumers-are-not-allowed-to-read-data-on-topics-to-which-they-are-not-subscribed-pr-11912",level:3},{value:"Topic Policy",id:"topic-policy",level:2},{value:"Retention policy works as expected. PR-11021",id:"retention-policy-works-as-expected-pr-11021",level:3},{value:"System topic no longer has potential data loss when not configured for compaction. PR-11003",id:"system-topic-no-longer-has-potential-data-loss-when-not-configured-for-compaction-pr-11003",level:3},{value:"Proxy",id:"proxy",level:2},{value:"Pulsar proxy correctly shuts down outbound connections. PR-11848",id:"pulsar-proxy-correctly-shuts-down-outbound-connections-pr-11848",level:3},{value:"Function",id:"function",level:2},{value:"Pulsar Functions support Protobuf schema. PR-11709",id:"pulsar-functions-support-protobuf-schema-pr-11709",level:3},{value:"Client",id:"client",level:2},{value:"Partitioned-topic consumers clean up resources after a failure. PR-11754",id:"partitioned-topic-consumers-clean-up-resources-after-a-failure-pr-11754",level:3},{value:"Race conditions do not occur on multi-topic consumers. PR-11764",id:"race-conditions-do-not-occur-on-multi-topic-consumers-pr-11764",level:3},{value:"Consumers are not blocked on <code>batchReceive</code>. PR-11691",id:"consumers-are-not-blocked-on-batchreceive-pr-11691",level:3},{value:"Python client correctly enables custom logging. PR-11882",id:"python-client-correctly-enables-custom-logging-pr-11882",level:3}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"The Apache Pulsar community releases version 2.8.1! 49 contributors provided improvements and bug fixes that delivered 213 commits."}),"\n",(0,t.jsx)(s.p,{children:"Highlights of this release are as below:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Key-shared subscriptions no longer stop dispatching to consumers when repeatedly opening and closing consumers. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/10920",children:"PR-10920"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["System topic no longer has potential data loss when not configured for compaction. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11003",children:"PR-11003"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Consumers are not allowed to read data on topics to which they are not subscribed. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11912",children:"PR-11912"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["This blog walks through the most noteworthy changes grouped by component. For the complete list including all features, enhancements, and bug fixes, check out the ",(0,t.jsx)(s.a,{href:"https://pulsar.apache.org/release-notes/#281-mdash-2021-09-10-a-id281a",children:"Pulsar 2.8.1 Release Notes"}),"."]}),"\n",(0,t.jsx)(s.h1,{id:"notable-bug-fixes-and-enhancements",children:"Notable bug fixes and enhancements"}),"\n",(0,t.jsx)(s.h2,{id:"broker",children:"Broker"}),"\n",(0,t.jsxs)(s.h3,{id:"precise-publish-rate-limit-takes-effect-as-expected-pr-11446",children:["Precise publish rate limit takes effect as expected. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11446",children:"PR-11446"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, when setting precise publish rate limits on topics, it did not work."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Implemented a new ",(0,t.jsx)(s.code,{children:"RateLimiter"})," using the ",(0,t.jsx)(s.code,{children:"LeakingBucket"})," and ",(0,t.jsx)(s.code,{children:"FixedWindow"})," algorithms."]}),"\n",(0,t.jsxs)(s.h3,{id:"messages-with-the-same-keys-are-delivered-to-the-correct-consumers-on-key-shared-subscriptions-pr-10762",children:["Messages with the same keys are delivered to the correct consumers on Key-Shared subscriptions. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/10762",children:"PR-10762"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Messages with the same keys were out of order when message redelivery occurred on a Key-Shared subscription."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": When sending a message to ",(0,t.jsx)(s.code,{children:"messagesToRedeliver"}),", the broker saved the hash value of the key. If the dispatcher attempted to send newer messages to the consumer that had a key corresponding to any one of the saved hash values, they were added to ",(0,t.jsx)(s.code,{children:"messagesToRedeliver"})," instead of being sent. This prevented messages with the same key from being out of order."]}),"\n",(0,t.jsxs)(s.h3,{id:"active-producers-with-the-same-name-are-no-longer-removed-from-the-topic-map-pr-11804",children:["Active producers with the same name are no longer removed from the topic map. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11804",children:"PR-11804"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, when there were producers with the same name, an error would be triggered and the old producer would be removed even though it was still writing to a topic."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Validated producers based on a connection ID (local & remote addresses and unique ID) and a producer ID within that connection rather than a producer name."]}),"\n",(0,t.jsxs)(s.h3,{id:"topics-in-a-fenced-state-can-recover-when-producers-continue-to-reconnect-to-brokers-pr-11737",children:["Topics in a fenced state can recover when producers continue to reconnect to brokers. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11737",children:"PR-11737"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, when a producer continued to reconnect to a broker, the fenced state of the topic was always set to true, which caused the topic to be unable to recover."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Add an entry to ",(0,t.jsx)(s.code,{children:"ManagedLedgerException"})," when the polled operation is not equal to the current operation."]}),"\n",(0,t.jsxs)(s.h3,{id:"topic-properly-initializes-the-cursor-to-prevent-data-loss-pr-11547",children:["Topic properly initializes the cursor to prevent data loss. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11547",children:"PR-11547"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, when subscribing to a topic with the earliest position, data would be lost because ",(0,t.jsx)(s.code,{children:"ManagedLedger"})," used a wrong position to initialize a cursor."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Added a test to check a cursor's position when subscribing to a topic with the earliest position."]}),"\n",(0,t.jsxs)(s.h3,{id:"deadlock-no-longer-occurs-when-using-hasmessageavailableasync-and-readnextasync-pr-11183",children:["Deadlock no longer occurs when using ",(0,t.jsx)(s.code,{children:"hasMessageAvailableAsync"})," and ",(0,t.jsx)(s.code,{children:"readNextAsync"}),". ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11183",children:"PR-11183"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, when messages were added to an incoming queue, a deadlock might occur. The deadlock might happen in two possible scenarios. First, if the message was added to the queue before the message was read. Second, if ",(0,t.jsx)(s.code,{children:"readNextAsync"})," was completed before ",(0,t.jsx)(s.code,{children:"future.whenComplete"})," was called."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Used an internal thread to process the callback of ",(0,t.jsx)(s.code,{children:"hasMessageAvailableAsync"}),"."]}),"\n",(0,t.jsxs)(s.h3,{id:"memory-leak-does-not-occur-when-calling-getlastmessageid-api-pr-10977",children:["Memory leak does not occur when calling getLastMessageId API. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/10977",children:"PR-10977"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, the broker ran out of memory when calling the ",(0,t.jsx)(s.code,{children:"getLastMessageId"})," API."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Added the ",(0,t.jsx)(s.code,{children:"entry.release()"})," call to the ",(0,t.jsx)(s.code,{children:"PersistentTopic.getLastMessageId"}),"."]}),"\n",(0,t.jsxs)(s.h3,{id:"compaction-is-triggered-for-system-topics-pr-10941",children:["Compaction is triggered for system topics. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/10941",children:"PR-10941"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, when a topic had only non-durable subscriptions, the compaction was not triggered because it had 0 estimated backlog size."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Used the total backlog size to trigger the compaction. Changed the behavior in the case of no durable subscriptions to use the total backlog size"]}),"\n",(0,t.jsxs)(s.h3,{id:"key-shared-subscriptions-no-longer-stop-dispatching-to-consumers-when-repeatedly-opening-and-closing-consumers-pr-10920",children:["Key-shared subscriptions no longer stop dispatching to consumers when repeatedly opening and closing consumers. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/10920",children:"PR-10920"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Repeatedly opening and closing consumers with a Key-Shared subscription might occasionally stop dispatching messages to all consumers."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Moved the mark-delete position and removed the consumer from the selector before calling ",(0,t.jsx)(s.code,{children:"removeConsumer()"}),"."]}),"\n",(0,t.jsxs)(s.h3,{id:"consumers-are-not-allowed-to-read-data-on-topics-to-which-they-are-not-subscribed-pr-11912",children:["Consumers are not allowed to read data on topics to which they are not subscribed. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11912",children:"PR-11912"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, the request ledger was not checked whether it belonged to a consumer\u2019s connected topic, which allowed the consumer to read data that does not belong to the connected topic."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Added a check on the ",(0,t.jsx)(s.code,{children:"ManagedLedger"})," level before executing read operations."]}),"\n",(0,t.jsx)(s.h2,{id:"topic-policy",children:"Topic Policy"}),"\n",(0,t.jsxs)(s.h3,{id:"retention-policy-works-as-expected-pr-11021",children:["Retention policy works as expected. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11021",children:"PR-11021"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, the retention policy did not work because it was not set in the ",(0,t.jsx)(s.code,{children:"managedLedger"})," configuration."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Set the retention policy in the ",(0,t.jsx)(s.code,{children:"managedLedger"})," configuration to the ",(0,t.jsx)(s.code,{children:"onUpdate"})," listener method."]}),"\n",(0,t.jsxs)(s.h3,{id:"system-topic-no-longer-has-potential-data-loss-when-not-configured-for-compaction-pr-11003",children:["System topic no longer has potential data loss when not configured for compaction. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11003",children:"PR-11003"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, data might be lost if there were no durable subscriptions on topics."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Leveraged the topic compaction cursor to retain data."]}),"\n",(0,t.jsx)(s.h2,{id:"proxy",children:"Proxy"}),"\n",(0,t.jsxs)(s.h3,{id:"pulsar-proxy-correctly-shuts-down-outbound-connections-pr-11848",children:["Pulsar proxy correctly shuts down outbound connections. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11848",children:"PR-11848"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, there was a memory leak of outgoing TCP connections in the Pulsar proxy because the ",(0,t.jsx)(s.code,{children:"ProxyConnectionPool"})," instances were created outside the ",(0,t.jsx)(s.code,{children:"PulsarClientImpl"})," instance and not closed when the client was closed."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Shut down the ",(0,t.jsx)(s.code,{children:"ConnectionPool"})," correctly."]}),"\n",(0,t.jsx)(s.h2,{id:"function",children:"Function"}),"\n",(0,t.jsxs)(s.h3,{id:"pulsar-functions-support-protobuf-schema-pr-11709",children:["Pulsar Functions support Protobuf schema. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11709",children:"PR-11709"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, the exception ",(0,t.jsx)(s.code,{children:"GeneratedMessageV3 is not assignable"})," was thrown when using a Protobuf schema."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Added the relevant dependencies to the Pulsar instance."]}),"\n",(0,t.jsx)(s.h2,{id:"client",children:"Client"}),"\n",(0,t.jsxs)(s.h3,{id:"partitioned-topic-consumers-clean-up-resources-after-a-failure-pr-11754",children:["Partitioned-topic consumers clean up resources after a failure. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11754",children:"PR-11754"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, partitioned-topic consumers did not clean up the resources when failing to create consumers. If this failure occurred with non-recoverable errors, it triggered a memory leak, which made applications unstable."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Closed and cleaned timer task references."]}),"\n",(0,t.jsxs)(s.h3,{id:"race-conditions-do-not-occur-on-multi-topic-consumers-pr-11764",children:["Race conditions do not occur on multi-topic consumers. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11764",children:"PR-11764"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),': Previously, there was a race condition between 2 threads when one of the individual consumers was in a "paused" state and the shared queue was full.']}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),': Validated the state of the shared queue after marking the consumer as "paused". The consumer is not blocked if the other thread has emptied the queue in the meantime.']}),"\n",(0,t.jsxs)(s.h3,{id:"consumers-are-not-blocked-on-batchreceive-pr-11691",children:["Consumers are not blocked on ",(0,t.jsx)(s.code,{children:"batchReceive"}),". ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11691",children:"PR-11691"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, consumers were blocked when ",(0,t.jsx)(s.code,{children:"Consumer.batchReceive()"})," was called concurrently by different threads due to a race condition in ",(0,t.jsx)(s.code,{children:"ConsumerBase.java"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Put ",(0,t.jsx)(s.code,{children:"pinnedInternalExecutor"})," in ",(0,t.jsx)(s.code,{children:"ConsumerBase"})," to allow batch timer, ",(0,t.jsx)(s.code,{children:"ConsumerImpl"}),", and ",(0,t.jsx)(s.code,{children:"MultiTopicsConsumerImpl"})," to submit work in a single thread."]}),"\n",(0,t.jsxs)(s.h3,{id:"python-client-correctly-enables-custom-logging-pr-11882",children:["Python client correctly enables custom logging. ",(0,t.jsx)(s.a,{href:"https://github.com/apache/pulsar/pull/11882",children:"PR-11882"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue"}),": Previously, deadlock might happen when custom logging was enabled in the Python client."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Resolution"}),": Detached the worker thread and reduced log level."]}),"\n",(0,t.jsx)(s.h1,{id:"what-is-next",children:"What is Next?"}),"\n",(0,t.jsxs)(s.p,{children:["If you are interested in learning more about Pulsar 2.8.1, you can ",(0,t.jsx)(s.a,{href:"https://pulsar.apache.org/download/",children:"download"})," and try it out now!"]}),"\n",(0,t.jsxs)(s.p,{children:["The first-ever Pulsar Virtual Summit Europe 2021 will take place in October. ",(0,t.jsx)(s.a,{href:"https://hopin.com/events/pulsar-summit-europe-2021",children:"Register now"})," and help us make it an even bigger success by spreading the word on social media!"]}),"\n",(0,t.jsxs)(s.p,{children:["For more information about the Apache Pulsar project and the progress, visit\nthe ",(0,t.jsx)(s.a,{href:"https://pulsar.apache.org",children:"Pulsar website"}),", follow the project on Twitter ",(0,t.jsx)(s.a,{href:"https://twitter.com/apache_pulsar",children:"@apache_pulsar"}),", and join ",(0,t.jsx)(s.a,{href:"https://apache-pulsar.herokuapp.com/",children:"Pulsar Slack"}),"!"]})]})}function d(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var o=n(96540);const t={},r=o.createContext(t);function i(e){const s=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(r.Provider,{value:s},e.children)}},57212:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021/09/23/Apache-Pulsar-2-8-1","editUrl":"https://github.com/apache/pulsar-site/edit/main/blog/2021-09-23-Apache-Pulsar-2-8-1.md","source":"@site/blog/2021-09-23-Apache-Pulsar-2-8-1.md","title":"Apache Pulsar 2.8.1","description":"The Apache Pulsar community releases version 2.8.1! 49 contributors provided improvements and bug fixes that delivered 213 commits.","date":"2021-09-23T00:00:00.000Z","tags":[],"readingTime":5.65,"hasTruncateMarker":true,"authors":[{"name":"Hang Chen, Anonymitaet","key":null,"page":null}],"frontMatter":{"author":"Hang Chen, Anonymitaet","title":"Apache Pulsar 2.8.1"},"unlisted":false,"prevItem":{"title":"Log4j2 Zero Day vulnerability (CVE-2021-44228)","permalink":"/blog/2021/12/11/Log4j-CVE"},"nextItem":{"title":"Announcing Pulsar Summit Asia 2021: CFP Is Open!","permalink":"/blog/2021/08/18/asia-cfp"}}')}}]);
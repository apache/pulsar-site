"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[87582],{41959:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"administration-metadata-store","title":"Configure metadata store","description":"Get a comprehensive understanding of metadata store in Pulsar.","source":"@site/versioned_docs/version-3.3.x/administration-metadata-store.md","sourceDirName":".","slug":"/administration-metadata-store","permalink":"/docs/3.3.x/administration-metadata-store","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-3.3.x/administration-metadata-store.md","tags":[],"version":"3.3.x","frontMatter":{"id":"administration-metadata-store","title":"Configure metadata store","sidebar_label":"Configure metadata store","description":"Get a comprehensive understanding of metadata store in Pulsar."},"sidebar":"docsSidebar","previous":{"title":"ZooKeeper and BookKeeper","permalink":"/docs/3.3.x/administration-zk-bk"},"next":{"title":"Geo-replication","permalink":"/docs/3.3.x/administration-geo"}}');var n=t(74848),s=t(28453);const r={id:"administration-metadata-store",title:"Configure metadata store",sidebar_label:"Configure metadata store",description:"Get a comprehensive understanding of metadata store in Pulsar."},i=void 0,d={},l=[{value:"Use ZooKeeper as metadata store",id:"use-zookeeper-as-metadata-store",level:2},{value:"Use etcd as metadata store",id:"use-etcd-as-metadata-store",level:2},{value:"Use RocksDB as metadata store",id:"use-rocksdb-as-metadata-store",level:2},{value:"Use local memory as metadata store",id:"use-local-memory-as-metadata-store",level:2},{value:"Enable batch operations on metadata store",id:"enable-batch-operations-on-metadata-store",level:2}];function c(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:"Pulsar metadata store maintains all the metadata, configuration, and coordination of a Pulsar cluster, such as topic metadata, schema, broker load data, and so on."}),"\n",(0,n.jsx)(a.p,{children:"The metadata store of each Pulsar instance should contain the following two components:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["A local metadata store ensemble (",(0,n.jsx)(a.code,{children:"metadataStoreUrl"}),") that stores cluster-specific configuration and coordination, such as which brokers are responsible for which topics as well as ownership metadata, broker load reports, and BookKeeper ledger metadata."]}),"\n",(0,n.jsxs)(a.li,{children:["A configuration store quorum (",(0,n.jsx)(a.code,{children:"configurationMetadataStoreUrl"}),") stores configuration for clusters, tenants, namespaces, topics, and other entities that need to be globally consistent."]}),"\n"]}),"\n",(0,n.jsx)(a.admonition,{type:"note",children:(0,n.jsxs)(a.p,{children:["If you are using a standalone Pulsar or a single Pulsar cluster, you only need to configure one metadata store (via ",(0,n.jsx)(a.code,{children:"metadataStoreUrl"}),") and it also serves as a configuration store."]})}),"\n",(0,n.jsx)(a.p,{children:"Pulsar supports the following metadata store services:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://zookeeper.apache.org/",children:"Apache ZooKeeper"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"https://etcd.io/",children:"Etcd"})}),"\n",(0,n.jsx)(a.li,{children:(0,n.jsx)(a.a,{href:"http://rocksdb.org/",children:"RocksDB"})}),"\n",(0,n.jsx)(a.li,{children:"Local memory"}),"\n"]}),"\n",(0,n.jsx)(a.admonition,{type:"note",children:(0,n.jsx)(a.p,{children:"RocksDB and local memory are only applicable to standalone Pulsar or single-node Pulsar clusters."})}),"\n",(0,n.jsx)(a.h2,{id:"use-zookeeper-as-metadata-store",children:"Use ZooKeeper as metadata store"}),"\n",(0,n.jsx)(a.p,{children:"Pulsar metadata store can be deployed on a separate ZooKeeper cluster or deployed on an existing ZooKeeper cluster."}),"\n",(0,n.jsxs)(a.p,{children:["To use ZooKeeper as the metadata store, add the following parameters to the ",(0,n.jsx)(a.code,{children:"conf/broker.conf"})," or ",(0,n.jsx)(a.code,{children:"conf/standalone.conf"})," file."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-conf",children:"metadataStoreUrl=zk:my-zk-1:2181,my-zk-2:2181,my-zk-3:2181\nconfigurationMetadataStoreUrl=zk:my-global-zk-1:2181,my-global-zk-2:2181,my-global-zk-3:2181\n"})}),"\n",(0,n.jsx)(a.h2,{id:"use-etcd-as-metadata-store",children:"Use etcd as metadata store"}),"\n",(0,n.jsxs)(a.p,{children:["To use etcd as the metadata store, add the following parameters to the ",(0,n.jsx)(a.code,{children:"conf/broker.conf"})," or ",(0,n.jsx)(a.code,{children:"conf/standalone.conf"})," file."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-conf",children:"metadataStoreUrl=etcd:http://my-etcd-1:2379,http://my-etcd-2:2379,http://my-etcd-3:2379\nconfigurationMetadataStoreUrl=etcd:my-global-etcd-1:2379,my-global-etcd-2:2379,my-global-etcd-3:2379\n# metadataStoreConfigPath=/path/to/file\n"})}),"\n",(0,n.jsxs)(a.admonition,{type:"tip",children:[(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"metadataStoreConfigPath"})," parameter is required when you want to use the following advanced configurations."]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:"useTls=false\ntlsProvider=JDK\ntlsTrustCertsFilePath=\ntlsKeyFilePath=\ntlsCertificateFilePath=\nauthority=\n"})})]}),"\n",(0,n.jsx)(a.h2,{id:"use-rocksdb-as-metadata-store",children:"Use RocksDB as metadata store"}),"\n",(0,n.jsxs)(a.p,{children:["To use RocksDB as the metadata store, add the following parameters to the ",(0,n.jsx)(a.code,{children:"conf/broker.conf"})," or ",(0,n.jsx)(a.code,{children:"conf/standalone.conf"})," file."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-conf",children:"metadataStoreUrl=rocksdb://data/metadata\n# metadataStoreConfigPath=/path/to/file\n"})}),"\n",(0,n.jsx)(a.admonition,{type:"tip",children:(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"metadataStoreConfigPath"})," parameter is required when you want to use advanced configurations. See ",(0,n.jsx)(a.a,{href:"https://github.com/facebook/rocksdb/blob/main/examples/rocksdb_option_file_example.ini",children:"this example"})," for more information."]})}),"\n",(0,n.jsx)(a.h2,{id:"use-local-memory-as-metadata-store",children:"Use local memory as metadata store"}),"\n",(0,n.jsxs)(a.p,{children:["To use local memory as the metadata store, add the following parameters to the ",(0,n.jsx)(a.code,{children:"conf/broker.conf"})," or ",(0,n.jsx)(a.code,{children:"conf/standalone.conf"})," file."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-conf",children:"metadataStoreUrl=memory://local\n"})}),"\n",(0,n.jsx)(a.h2,{id:"enable-batch-operations-on-metadata-store",children:"Enable batch operations on metadata store"}),"\n",(0,n.jsx)(a.p,{children:"Pulsar metadata store supports batch operations and caching to meet low latency and high throughput and improve performance."}),"\n",(0,n.jsxs)(a.p,{children:["To enable batch operations on the metadata store, you can configure the following parameters in the ",(0,n.jsx)(a.code,{children:"conf/broker.conf"})," or ",(0,n.jsx)(a.code,{children:"conf/standalone.conf"})," file."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-conf",children:"# Whether we should enable metadata operations batching\nmetadataStoreBatchingEnabled=true\n\n# Maximum delay to impose on batching grouping\nmetadataStoreBatchingMaxDelayMillis=5\n\n# Maximum number of operations to include in a singular batch\nmetadataStoreBatchingMaxOperations=1000\n\n# Maximum size of a batch\nmetadataStoreBatchingMaxSizeKb=128\n"})})]})}function m(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>i});var o=t(96540);const n={},s=o.createContext(n);function r(e){const a=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(s.Provider,{value:a},e.children)}}}]);
"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[27959],{50325:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"functions-develop-log","title":"Produce function logs","description":"Learn to produce logs for functions in Pulsar.","source":"@site/docs/functions-develop-log.md","sourceDirName":".","slug":"/functions-develop-log","permalink":"/docs/next/functions-develop-log","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/docs/functions-develop-log.md","tags":[],"version":"current","frontMatter":{"id":"functions-develop-log","title":"Produce function logs","sidebar_label":"Produce function logs","description":"Learn to produce logs for functions in Pulsar."},"sidebar":"docsSidebar","previous":{"title":"Pass user-defined configurations","permalink":"/docs/next/functions-develop-user-defined-configs"},"next":{"title":"Use metrics to monitor functions","permalink":"/docs/next/functions-develop-metrics"}}');var t=o(74848),s=o(28453);const i={id:"functions-develop-log",title:"Produce function logs",sidebar_label:"Produce function logs",description:"Learn to produce logs for functions in Pulsar."},c=void 0,r={},a=[{value:"Produce logs for Java functions",id:"produce-logs-for-java-functions",level:2},{value:"Customize log levels for Java functions",id:"customize-log-levels-for-java-functions",level:3},{value:"Produce logs for Python functions",id:"produce-logs-for-python-functions",level:2},{value:"Produce logs for Go functions",id:"produce-logs-for-go-functions",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"produce-logs-for-java-functions",children:"Produce logs for Java functions"}),"\n",(0,t.jsxs)(n.p,{children:["Pulsar Functions that use the Java SDK have access to an ",(0,t.jsxs)(n.a,{href:"https://www.slf4j.org/api/org/apache/log4j/Logger.html",children:["SLF4j ",(0,t.jsx)(n.code,{children:"Logger"})]})," object. The logger object can be used to produce logs at a specified log level."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, the following function logs either a ",(0,t.jsx)(n.code,{children:"WARNING"}),"- or ",(0,t.jsx)(n.code,{children:"INFO"}),"-level log based on whether the incoming string contains the word ",(0,t.jsx)(n.code,{children:"danger"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import org.apache.pulsar.functions.api.Context;\nimport org.apache.pulsar.functions.api.Function;\nimport org.slf4j.Logger;\n\npublic class LoggingFunction implements Function<String, Void> {\n    @Override\n    public void apply(String input, Context context) {\n        Logger LOG = context.getLogger();\n        String messageId = new String(context.getMessageId());\n\n        if (input.contains("danger")) {\n            LOG.warn("A warning was received in message {}", messageId);\n        } else {\n            LOG.info("Message {} received\\nContent: {}", messageId, input);\n        }\n\n        return null;\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"To enable your function to produce logs, you need to specify a log topic when creating or running the function. The following is an example."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bin/pulsar-admin functions create \\\n  --jar $PWD/my-functions.jar \\\n  --classname my.package.LoggingFunction \\\n  --log-topic persistent://public/default/logging-function-logs \\\n  # Other function configs\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can access all the logs produced by ",(0,t.jsx)(n.code,{children:"LoggingFunction"})," via the ",(0,t.jsx)(n.code,{children:"persistent://public/default/logging-function-logs"})," topic."]}),"\n",(0,t.jsx)(n.h3,{id:"customize-log-levels-for-java-functions",children:"Customize log levels for Java functions"}),"\n",(0,t.jsxs)(n.p,{children:["By default, the log level for Java functions is ",(0,t.jsx)(n.code,{children:"info"}),". If you want to customize the log level of your Java functions, for example, change it to ",(0,t.jsx)(n.code,{children:"debug"}),", you can update the ",(0,t.jsx)(n.a,{href:"https://github.com/apache/pulsar/blob/master/conf/functions_log4j2.xml",children:(0,t.jsx)(n.code,{children:"functions_log4j2.xml"})})," file."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"functions_log4j2.xml"})," file is under your Pulsar configuration directory, for example, ",(0,t.jsx)(n.code,{children:"/etc/pulsar/"})," on bare-metal, or ",(0,t.jsx)(n.code,{children:"/pulsar/conf"})," on Kubernetes."]})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Set the value of ",(0,t.jsx)(n.code,{children:"property"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"     <Property>\n         <name>pulsar.log.level</name>\n         <value>debug</value>\n     </Property>\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Apply the log level to places where they are referenced. In the following example, ",(0,t.jsx)(n.code,{children:"debug"})," applies to all function logs."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"     <Root>\n         <level>${sys:pulsar.log.level}</level>\n         <AppenderRef>\n             <ref>${sys:pulsar.log.appender}</ref>\n             <level>${sys:pulsar.log.level}</level>\n         </AppenderRef>\n     </Root>\n"})}),"\n",(0,t.jsx)(n.p,{children:"To be more selective, you can apply different log levels to different classes or modules. For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"     <Logger>\n         <name>com.example.module</name>\n         <level>info</level>\n         <additivity>false</additivity>\n         <AppenderRef>\n             <ref>${sys:pulsar.log.appender}</ref>\n         </AppenderRef>\n     </Logger>\n"})}),"\n",(0,t.jsx)(n.p,{children:"To apply a more verbose log level to a class in the module, you can reference the following example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"     <Logger>\n         <name>com.example.module.className</name>\n         <level>debug</level>\n         <additivity>false</additivity>\n         <AppenderRef>\n             <ref>Console</ref>\n         </AppenderRef>\n     </Logger>\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"additivity"})," indicates whether log messages will be duplicated if multiple ",(0,t.jsx)(n.code,{children:"<Logger>"})," entries overlap. Disabling additivity (",(0,t.jsx)(n.code,{children:"false"}),") prevents duplication of log messages when one or more ",(0,t.jsx)(n.code,{children:"<Logger>"})," entries contain classes or modules that overlap."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"AppenderRef"})," allows you to output the log to a target specified in the definition of the ",(0,t.jsx)(n.code,{children:"Appender"})," section. For example:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"   <Console>\n     <name>Console</name>\n     <target>SYSTEM_OUT</target>\n     <PatternLayout>\n       <Pattern>%d{ISO8601_OFFSET_DATE_TIME_HHMM} [%t] %-5level %logger{36} - %msg%n</Pattern>\n     </PatternLayout>\n   </Console>\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"produce-logs-for-python-functions",children:"Produce logs for Python functions"}),"\n",(0,t.jsx)(n.p,{children:"Pulsar Functions that use the Python SDK have access to a logger object. The logger object can be used to produce logs at a specified log level."}),"\n",(0,t.jsxs)(n.p,{children:["For example, the following function logs either a ",(0,t.jsx)(n.code,{children:"WARNING"}),"- or ",(0,t.jsx)(n.code,{children:"INFO"}),"-level log based on whether the incoming string contains the word ",(0,t.jsx)(n.code,{children:"danger"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from pulsar import Function\n\nclass LoggingFunction(Function):\n    def process(self, input, context):\n        logger = context.get_logger()\n        msg_id = context.get_message_id()\n        if \'danger\' in input:\n            logger.warn("A warning was received in message {0}".format(context.get_message_id()))\n        else:\n            logger.info("Message {0} received\\nContent: {1}".format(msg_id, input))\n'})}),"\n",(0,t.jsx)(n.p,{children:"To enable your function to produce logs, you need to specify a log topic when creating or running the function. The following is an example."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bin/pulsar-admin functions create \\\n  --py logging_function.py \\\n  --classname logging_function.LoggingFunction \\\n  --log-topic logging-function-logs \\\n  # Other function configs\n"})}),"\n",(0,t.jsxs)(n.p,{children:["All logs produced by ",(0,t.jsx)(n.code,{children:"LoggingFunction"})," can be accessed via the ",(0,t.jsx)(n.code,{children:"logging-function-logs"})," topic. Additionally, you can specify the function log levels through ",(0,t.jsx)(n.code,{children:"context.get_logger().setLevel(level)"}),". For more information, refer to ",(0,t.jsx)(n.a,{href:"https://docs.python.org/3/library/logging.html#logging.Logger.setLevel",children:"Log facility for Python"})," ."]}),"\n",(0,t.jsx)(n.h2,{id:"produce-logs-for-go-functions",children:"Produce logs for Go functions"}),"\n",(0,t.jsxs)(n.p,{children:["When you use ",(0,t.jsx)(n.code,{children:"logTopic"})," related functionalities in Go functions, you can import ",(0,t.jsx)(n.code,{children:"github.com/apache/pulsar/pulsar-function-go/logutil"})," rather than using the ",(0,t.jsx)(n.code,{children:"getLogger()"})," context object."]}),"\n",(0,t.jsx)(n.p,{children:"The following function shows different log levels based on the function input."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'import (\n    "context"\n\n    "github.com/apache/pulsar/pulsar-function-go/pf"\n\n    log "github.com/apache/pulsar/pulsar-function-go/logutil"\n)\n\nfunc loggerFunc(ctx context.Context, input []byte) {\n\tif len(input) <= 100 {\n\t\tlog.Infof("This input has a length of: %d", len(input))\n\t} else {\n\t\tlog.Warnf("This input is getting too long! It has {%d} characters", len(input))\n\t}\n}\n\nfunc main() {\n\tpf.Start(loggerFunc)\n}\n'})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var l=o(96540);const t={},s=l.createContext(t);function i(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);
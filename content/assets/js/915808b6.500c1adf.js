"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[46846],{61207:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"client-libraries-python","title":"Pulsar Python client","description":"You can use a Pulsar Python client to create producers, consumers, and readers. For Pulsar features that Python clients support, see Client Feature Matrix.","source":"@site/versioned_docs/version-2.11.x/client-libraries-python.md","sourceDirName":".","slug":"/client-libraries-python","permalink":"/docs/2.11.x/client-libraries-python","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.11.x/client-libraries-python.md","tags":[],"version":"2.11.x","frontMatter":{"id":"client-libraries-python","title":"Pulsar Python client","sidebar_label":"Python"},"sidebar":"docsSidebar","previous":{"title":"Go","permalink":"/docs/2.11.x/client-libraries-go"},"next":{"title":"C++","permalink":"/docs/2.11.x/client-libraries-cpp"}}');var t=s(74848),i=s(28453);s(89089),s(19365);const l={id:"client-libraries-python",title:"Pulsar Python client",sidebar_label:"Python"},a=void 0,c={},o=[{value:"Installation",id:"installation",level:2},{value:"Connection URLs",id:"connection-urls",level:2},{value:"API reference",id:"api-reference",level:2},{value:"Release notes",id:"release-notes",level:2},{value:"Examples",id:"examples",level:2},{value:"Producer example",id:"producer-example",level:3},{value:"Consumer example",id:"consumer-example",level:3},{value:"Reader interface example",id:"reader-interface-example",level:3},{value:"Multi-topic subscriptions",id:"multi-topic-subscriptions",level:3},{value:"Create a Python client with multiple advertised listeners",id:"create-a-python-client-with-multiple-advertised-listeners",level:3},{value:"Schema",id:"schema",level:2},{value:"Supported schema types",id:"supported-schema-types",level:3},{value:"Schema definition reference",id:"schema-definition-reference",level:3},{value:"Fields parameters",id:"fields-parameters",level:4},{value:"Schema definition examples",id:"schema-definition-examples",level:4},{value:"Simple definition",id:"simple-definition",level:5},{value:"Using enums",id:"using-enums",level:5},{value:"Complex types",id:"complex-types",level:5},{value:"Set namespace for Avro schema",id:"set-namespace-for-avro-schema",level:5},{value:"Declare and validate schema",id:"declare-and-validate-schema",level:3},{value:"End-to-end encryption",id:"end-to-end-encryption",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["You can use a Pulsar Python client to create producers, consumers, and readers. For Pulsar features that Python clients support, see ",(0,t.jsx)(n.a,{href:"https://docs.google.com/spreadsheets/d/1YHYTkIXR8-Ql103u-IMI18TXLlGStK8uJjDsOOA0T20/edit#gid=1784579914",children:"Client Feature Matrix"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.a,{href:"https://pip.pypa.io/",children:"pip"})," to install the latest version:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install 'pulsar-client==3.6.0'\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can install optional components alongside the client library:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# avro serialization\npip install 'pulsar-client[avro]==3.6.0'\n\n# functions runtime\npip install 'pulsar-client[functions]==3.6.0'\n\n# all optional components\npip install 'pulsar-client[all]==3.6.0'\n"})}),"\n",(0,t.jsx)(n.p,{children:"Installation via PyPi is available for the following Python versions:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Platform"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Supported Python versions"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"macOS (>= 11.0)"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"3.7, 3.8, 3.9 and 3.10"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Linux (including Alpine Linux)"}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"3.7, 3.8, 3.9 and 3.10"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"connection-urls",children:"Connection URLs"}),"\n",(0,t.jsxs)(n.p,{children:["To connect to Pulsar using client libraries, you need to specify a ",(0,t.jsx)(n.a,{href:"/docs/2.11.x/developing-binary-protocol",children:"Pulsar protocol"})," URL."]}),"\n",(0,t.jsxs)(n.p,{children:["You can assign Pulsar protocol URLs to specific clusters and use the ",(0,t.jsx)(n.code,{children:"pulsar"})," scheme. The following is an example of ",(0,t.jsx)(n.code,{children:"localhost"})," with the default port ",(0,t.jsx)(n.code,{children:"6650"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"pulsar://localhost:6650\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you have multiple brokers, separate ",(0,t.jsx)(n.code,{children:"IP:port"})," by commas:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"pulsar://localhost:6550,localhost:6651,localhost:6652\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If you use ",(0,t.jsx)(n.a,{href:"/docs/2.11.x/security-tls-authentication",children:"mTLS authentication"}),", add ",(0,t.jsx)(n.code,{children:"+ssl"})," in the scheme:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"pulsar+ssl://pulsar.us-west.example.com:6651\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API reference"}),"\n",(0,t.jsxs)(n.p,{children:["All the methods in producer, consumer, and reader of Pulsar Python clients are thread-safe. See the ",(0,t.jsx)(n.a,{href:"https://pulsar.apache.org/api/python/3.6.x",children:"API docs"})," for more details."]}),"\n",(0,t.jsx)(n.h2,{id:"release-notes",children:"Release notes"}),"\n",(0,t.jsxs)(n.p,{children:["For the changelog of Pulsar Python clients, see ",(0,t.jsx)(n.a,{href:"/release-notes/#python",children:"release notes"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(n.p,{children:["You can find a variety of Python code examples for the ",(0,t.jsx)(n.code,{children:"pulsar-client"})," library."]}),"\n",(0,t.jsx)(n.h3,{id:"producer-example",children:"Producer example"}),"\n",(0,t.jsxs)(n.p,{children:["The following example creates a Python producer for the ",(0,t.jsx)(n.code,{children:"my-topic"})," topic and sends 10 messages on that topic:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import pulsar\n\nclient = pulsar.Client('pulsar://localhost:6650')\n\nproducer = client.create_producer('my-topic')\n\nfor i in range(10):\n    producer.send(('Hello-%d' % i).encode('utf-8'))\n\nclient.close()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"consumer-example",children:"Consumer example"}),"\n",(0,t.jsxs)(n.p,{children:["The following example creates a consumer with the ",(0,t.jsx)(n.code,{children:"my-subscription"})," subscription name on the ",(0,t.jsx)(n.code,{children:"my-topic"})," topic, receives incoming messages, prints the content and ID of messages that arrive, and acknowledges each message to the Pulsar broker."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import pulsar\n\nclient = pulsar.Client('pulsar://localhost:6650')\n\nconsumer = client.subscribe('my-topic', 'my-subscription')\n\nwhile True:\n    msg = consumer.receive()\n    try:\n        print(\"Received message '{}' id='{}'\".format(msg.data(), msg.message_id()))\n        # Acknowledge successful processing of the message\n        consumer.acknowledge(msg)\n    except Exception:\n        # Message failed to be processed\n        consumer.negative_acknowledge(msg)\n\nclient.close()\n"})}),"\n",(0,t.jsx)(n.p,{children:"This example shows how to configure negative acknowledgment."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from pulsar import Client, schema\nclient = Client('pulsar://localhost:6650')\nconsumer = client.subscribe('negative_acks','test',schema=schema.StringSchema())\nproducer = client.create_producer('negative_acks',schema=schema.StringSchema())\nfor i in range(10):\n    print('send msg \"hello-%d\"' % i)\n    producer.send_async('hello-%d' % i, callback=None)\nproducer.flush()\nfor i in range(10):\n    msg = consumer.receive()\n    consumer.negative_acknowledge(msg)\n    print('receive and nack msg \"%s\"' % msg.data())\nfor i in range(10):\n    msg = consumer.receive()\n    consumer.acknowledge(msg)\n    print('receive and ack msg \"%s\"' % msg.data())\ntry:\n    # No more messages expected\n    msg = consumer.receive(100)\nexcept:\n    print(\"no more msg\")\n    pass\n"})}),"\n",(0,t.jsx)(n.h3,{id:"reader-interface-example",children:"Reader interface example"}),"\n",(0,t.jsxs)(n.p,{children:["You can use the Pulsar Python API to use the Pulsar ",(0,t.jsx)(n.a,{href:"/docs/2.11.x/concepts-clients#reader-interface",children:"reader interface"}),". Here's an example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# MessageId taken from a previously fetched message\nmsg_id = msg.message_id()\n\nreader = client.create_reader('my-topic', msg_id)\n\nwhile True:\n    msg = reader.read_next()\n    print(\"Received message '{}' id='{}'\".format(msg.data(), msg.message_id()))\n    # No acknowledgment\n"})}),"\n",(0,t.jsx)(n.h3,{id:"multi-topic-subscriptions",children:"Multi-topic subscriptions"}),"\n",(0,t.jsxs)(n.p,{children:["In addition to subscribing a consumer to a single Pulsar topic, you can also subscribe to multiple topics simultaneously. To use multi-topic subscriptions, you can supply a regular expression (regex) or a ",(0,t.jsx)(n.code,{children:"List"})," of topics. If you select topics via regex, all topics must be within the same Pulsar namespace."]}),"\n",(0,t.jsx)(n.p,{children:"The following is an example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import re\nconsumer = client.subscribe(re.compile('persistent://public/default/topic-*'), 'my-subscription')\nwhile True:\n    msg = consumer.receive()\n    try:\n        print(\"Received message '{}' id='{}'\".format(msg.data(), msg.message_id()))\n        # Acknowledge successful processing of the message\n        consumer.acknowledge(msg)\n    except Exception:\n        # Message failed to be processed\n        consumer.negative_acknowledge(msg)\nclient.close()\n"})}),"\n",(0,t.jsx)(n.h3,{id:"create-a-python-client-with-multiple-advertised-listeners",children:"Create a Python client with multiple advertised listeners"}),"\n",(0,t.jsxs)(n.p,{children:["To ensure clients in both internal and external networks can connect to a Pulsar cluster, Pulsar introduces ",(0,t.jsx)(n.a,{href:"/docs/2.11.x/concepts-multiple-advertised-listeners",children:"advertisedListeners"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The following example creates a Python client using multiple advertised listeners:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import pulsar\n\nclient = pulsar.Client('pulsar://localhost:6650', listener_name='external')\n"})}),"\n",(0,t.jsx)(n.h2,{id:"schema",children:"Schema"}),"\n",(0,t.jsx)(n.h3,{id:"supported-schema-types",children:"Supported schema types"}),"\n",(0,t.jsxs)(n.p,{children:["You can use different built-in schema types in Pulsar. All the definitions are in the ",(0,t.jsx)(n.code,{children:"pulsar.schema"})," package."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Schema"}),(0,t.jsx)(n.th,{children:"Notes"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"BytesSchema"})}),(0,t.jsxs)(n.td,{children:["Get the raw payload as a ",(0,t.jsx)(n.code,{children:"bytes"})," object. No serialization/deserialization are performed. This is the default schema mode"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"StringSchema"})}),(0,t.jsxs)(n.td,{children:["Encode/decode payload as a UTF-8 string. Uses ",(0,t.jsx)(n.code,{children:"str"})," objects"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"JsonSchema"})}),(0,t.jsx)(n.td,{children:"Require record definition. Serializes the record into standard JSON payload"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"AvroSchema"})}),(0,t.jsx)(n.td,{children:"Require record definition. Serializes in AVRO format"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"schema-definition-reference",children:"Schema definition reference"}),"\n",(0,t.jsxs)(n.p,{children:["The schema definition is done through a class that inherits from ",(0,t.jsx)(n.code,{children:"pulsar.schema.Record"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["This class has a number of fields that can be of either ",(0,t.jsx)(n.code,{children:"pulsar.schema.Field"})," type or another nested ",(0,t.jsx)(n.code,{children:"Record"}),". All the fields are specified in the ",(0,t.jsx)(n.code,{children:"pulsar.schema"})," package. The fields are matching the AVRO field types."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Field Type"}),(0,t.jsx)(n.th,{children:"Python Type"}),(0,t.jsx)(n.th,{children:"Notes"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bool"})}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Integer"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"int"})}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Long"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"int"})}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Float"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"float"})}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Double"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"float"})}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Bytes"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bytes"})}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"str"})}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Array"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"list"})}),(0,t.jsx)(n.td,{children:"Need to specify record type for items."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Map"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"dict"})}),(0,t.jsxs)(n.td,{children:["Key is always ",(0,t.jsx)(n.code,{children:"String"}),". Need to specify value type."]})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Additionally, any Python ",(0,t.jsx)(n.code,{children:"Enum"})," type can be used as a valid field type."]}),"\n",(0,t.jsx)(n.h4,{id:"fields-parameters",children:"Fields parameters"}),"\n",(0,t.jsx)(n.p,{children:"When adding a field, you can use these parameters in the constructor."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Argument"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Notes"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"default"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"None"})}),(0,t.jsxs)(n.td,{children:["Set a default value for the field, such as ",(0,t.jsx)(n.code,{children:"a = Integer(default=5)"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"required"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"False"})}),(0,t.jsx)(n.td,{children:'Mark the field as "required". It is set in the schema accordingly.'})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"schema-definition-examples",children:"Schema definition examples"}),"\n",(0,t.jsx)(n.h5,{id:"simple-definition",children:"Simple definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Example(Record):\n    a = String()\n    b = Integer()\n    c = Array(String())\n    i = Map(String())\n"})}),"\n",(0,t.jsx)(n.h5,{id:"using-enums",children:"Using enums"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from enum import Enum\n\nclass Color(Enum):\n    red = 1\n    green = 2\n    blue = 3\n\nclass Example(Record):\n    name = String()\n    color = Color\n"})}),"\n",(0,t.jsx)(n.h5,{id:"complex-types",children:"Complex types"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class MySubRecord(Record):\n    x = Integer()\n    y = Long()\n    z = String()\n\nclass Example(Record):\n    a = String()\n    sub = MySubRecord()\n"})}),"\n",(0,t.jsx)(n.h5,{id:"set-namespace-for-avro-schema",children:"Set namespace for Avro schema"}),"\n",(0,t.jsxs)(n.p,{children:["Set the namespace for the Avro Record schema using the special field ",(0,t.jsx)(n.code,{children:"_avro_namespace"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class NamespaceDemo(Record):\n   _avro_namespace = 'xxx.xxx.xxx'\n   x = String()\n   y = Integer()\n"})}),"\n",(0,t.jsx)(n.p,{children:"The schema definition is like this."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "NamespaceDemo", "namespace": "xxx.xxx.xxx", "type": "record", "fields": [\n    {"name": "x", "type": ["null", "string"]},\n    {"name": "y", "type": ["null", "int"]}\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"declare-and-validate-schema",children:"Declare and validate schema"}),"\n",(0,t.jsx)(n.p,{children:"Before the producer is created, the Pulsar broker validates that the existing topic schema is the correct type and that the format is compatible with the schema definition of a class. If the format of the topic schema is incompatible with the schema definition, an exception occurs in the producer creation."}),"\n",(0,t.jsx)(n.p,{children:"Once a producer is created with a certain schema definition, it only accepts objects that are instances of the declared schema class."}),"\n",(0,t.jsx)(n.p,{children:"Similarly, for a consumer or reader, the consumer returns an object (which is an instance of the schema record class) rather than raw bytes."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"consumer = client.subscribe(\n                  topic='my-topic',\n                  subscription_name='my-subscription',\n                  schema=AvroSchema(Example) )\n\nwhile True:\n    msg = consumer.receive()\n    ex = msg.value()\n    try:\n        print(\"Received message a={} b={} c={}\".format(ex.a, ex.b, ex.c))\n        # Acknowledge successful processing of the message\n        consumer.acknowledge(msg)\n    except Exception:\n        # Message failed to be processed\n        consumer.negative_acknowledge(msg)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For more code examples, see ",(0,t.jsx)(n.a,{href:"/docs/2.11.x/schema-get-started",children:"Schema - Get started"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"end-to-end-encryption",children:"End-to-end encryption"}),"\n",(0,t.jsxs)(n.p,{children:["Pulsar encryption allows applications to encrypt messages at producers and decrypt messages at consumers. See ",(0,t.jsx)(n.a,{href:"/docs/2.11.x/security-encryption#get-started",children:"Get started"})," for more details."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},19365:(e,n,s)=>{s.d(n,{A:()=>l});s(96540);var r=s(34164);const t={tabItem:"tabItem_Ymn6"};var i=s(74848);function l(e){let{children:n,hidden:s,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.tabItem,l),hidden:s,children:n})}},89089:(e,n,s)=>{s.d(n,{A:()=>w});var r=s(96540),t=s(34164),i=s(23104),l=s(56347),a=s(205),c=s(57485),o=s(31682),d=s(70679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:s,attributes:r,default:t}}=e;return{value:n,label:s,attributes:r,default:t}}))}(s);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:s}=e;const t=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,c.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function x(e){const{defaultValue:n,queryString:s=!1,groupId:t}=e,i=u(e),[l,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=s.find((e=>e.default))??s[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[o,h]=m({queryString:s,groupId:t}),[x,j]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,d.Dv)(s);return[t,(0,r.useCallback)((e=>{s&&i.set(e)}),[s,i])]}({groupId:t}),f=(()=>{const e=o??x;return p({value:e,tabValues:i})?e:null})();(0,a.A)((()=>{f&&c(f)}),[f]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),j(e)}),[h,j,i]),tabValues:i}}var j=s(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=s(74848);function y(e){let{className:n,block:s,selectedValue:r,selectValue:l,tabValues:a}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.a_)(),d=e=>{const n=e.currentTarget,s=c.indexOf(n),t=a[s].value;t!==r&&(o(n),l(t))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=c.indexOf(e.currentTarget)+1;n=c[s]??c[0];break}case"ArrowLeft":{const s=c.indexOf(e.currentTarget)-1;n=c[s]??c[c.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":s},n),children:a.map((e=>{let{value:n,label:s,attributes:i}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...i,className:(0,t.A)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":r===n}),children:s??n},n)}))})}function b(e){let{lazy:n,children:s,selectedValue:i}=e;const l=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=x(e);return(0,g.jsxs)("div",{className:(0,t.A)("tabs-container",f.tabList),children:[(0,g.jsx)(y,{...n,...e}),(0,g.jsx)(b,{...n,...e})]})}function w(e){const n=(0,j.A)();return(0,g.jsx)(v,{...e,children:h(e.children)},String(n))}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(96540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[13894],{58775:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"sql-deployment-configurations","title":"Pulsar SQl Deployment and Configuration","description":"Below is a list configurations for the Presto Pulsar connector and instruction on how to deploy a cluster.","source":"@site/versioned_docs/version-2.2.0/sql-deployment-configurations.md","sourceDirName":".","slug":"/sql-deployment-configurations","permalink":"/docs/2.2.0/sql-deployment-configurations","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.2.0/sql-deployment-configurations.md","tags":[],"version":"2.2.0","frontMatter":{"id":"sql-deployment-configurations","title":"Pulsar SQl Deployment and Configuration","sidebar_label":"Deployment and Configuration","original_id":"sql-deployment-configurations"},"sidebar":"docsSidebar","previous":{"title":"Getting Started","permalink":"/docs/2.2.0/sql-getting-started"},"next":{"title":"Amazon Web Services","permalink":"/docs/2.2.0/deploy-aws"}}');var t=r(74848),s=r(28453);const i={id:"sql-deployment-configurations",title:"Pulsar SQl Deployment and Configuration",sidebar_label:"Deployment and Configuration",original_id:"sql-deployment-configurations"},a=void 0,l={},c=[{value:"Presto Pulsar Connector Configurations",id:"presto-pulsar-connector-configurations",level:2},{value:"Query Pulsar from Existing Presto Cluster",id:"query-pulsar-from-existing-presto-cluster",level:2},{value:"Deploying a new cluster",id:"deploying-a-new-cluster",level:2},{value:"Deploying to a 3 node cluster",id:"deploying-to-a-3-node-cluster",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Below is a list configurations for the Presto Pulsar connector and instruction on how to deploy a cluster."}),"\n",(0,t.jsx)(n.h2,{id:"presto-pulsar-connector-configurations",children:"Presto Pulsar Connector Configurations"}),"\n",(0,t.jsxs)(n.p,{children:["There are several configurations for the Presto Pulsar Connector.  The properties file that contain these configurations can be found at ",(0,t.jsx)(n.code,{children:"${project.root}/conf/presto/catalog/pulsar.properties"}),".\nThe configurations for the connector and its default values are described below."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"\n# name of the connector to be displayed in the catalog\nconnector.name=pulsar\n\n# the url of Pulsar broker service\npulsar.broker-service-url=http://localhost:8080\n\n# URI of Zookeeper cluster\npulsar.zookeeper-uri=localhost:2181\n\n# minimum number of entries to read at a single time\npulsar.entry-read-batch-size=100\n\n# default number of splits to use per query\npulsar.target-num-splits=4\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"query-pulsar-from-existing-presto-cluster",children:"Query Pulsar from Existing Presto Cluster"}),"\n",(0,t.jsx)(n.p,{children:"If you already have an existing Presto cluster, you can copy Presto Pulsar connector plugin to your existing cluster.  You can download the archived plugin package via:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\n$ wget https://archive.apache.org/dist/pulsar/pulsar-2.2.0/apache-pulsar-2.2.0-bin.tar.gz\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"deploying-a-new-cluster",children:"Deploying a new cluster"}),"\n",(0,t.jsxs)(n.p,{children:["Please note that the ",(0,t.jsx)(n.a,{href:"/docs/2.2.0/sql-getting-started",children:"Getting Started"})," guide shows you how to easily setup a standalone single node environment to experiment with."]}),"\n",(0,t.jsxs)(n.p,{children:["Pulsar SQL is powered by ",(0,t.jsx)(n.a,{href:"https://prestosql.io",children:"Presto"})," thus many of the configurations for deployment is the same for the Pulsar SQL worker."]}),"\n",(0,t.jsx)(n.p,{children:"You can use the same CLI args as the Presto launcher:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\n$ ./bin/pulsar sql-worker --help\nUsage: launcher [options] command\n\nCommands: run, start, stop, restart, kill, status\n\nOptions:\n  -h, --help            show this help message and exit\n  -v, --verbose         Run verbosely\n  --etc-dir=DIR         Defaults to INSTALL_PATH/etc\n  --launcher-config=FILE\n                        Defaults to INSTALL_PATH/bin/launcher.properties\n  --node-config=FILE    Defaults to ETC_DIR/node.properties\n  --jvm-config=FILE     Defaults to ETC_DIR/jvm.config\n  --config=FILE         Defaults to ETC_DIR/config.properties\n  --log-levels-file=FILE\n                        Defaults to ETC_DIR/log.properties\n  --data-dir=DIR        Defaults to INSTALL_PATH\n  --pid-file=FILE       Defaults to DATA_DIR/var/run/launcher.pid\n  --launcher-log-file=FILE\n                        Defaults to DATA_DIR/var/log/launcher.log (only in\n                        daemon mode)\n  --server-log-file=FILE\n                        Defaults to DATA_DIR/var/log/server.log (only in\n                        daemon mode)\n  -D NAME=VALUE         Set a Java system property\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["There is a set of default configs for the cluster located in ",(0,t.jsx)(n.code,{children:"${project.root}/conf/presto"})," that will be used by default.  You can change them to customize your deployment"]}),"\n",(0,t.jsx)(n.p,{children:"You can also set the worker to read from a different configuration directory as well as set a different directory for writing its data:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\n$ ./bin/pulsar sql-worker run --etc-dir /tmp/incubator-pulsar/conf/presto --data-dir /tmp/presto-1\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can also start the worker as daemon process:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\n$ ./bin/pulsar sql-worker start\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deploying-to-a-3-node-cluster",children:"Deploying to a 3 node cluster"}),"\n",(0,t.jsx)(n.p,{children:"For example, if I wanted to deploy a Pulsar SQL/Presto cluster on 3 nodes, you can do the following:"}),"\n",(0,t.jsx)(n.p,{children:"First, copy the Pulsar binary distribution to all three nodes."}),"\n",(0,t.jsxs)(n.p,{children:["The first node, will run the Presto coordinator.  The minimal configuration in ",(0,t.jsx)(n.code,{children:"${project.root}/conf/presto/config.properties"})," can be the following"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"\ncoordinator=true\nnode-scheduler.include-coordinator=true\nhttp-server.http.port=8080\nquery.max-memory=50GB\nquery.max-memory-per-node=1GB\ndiscovery-server.enabled=true\ndiscovery.uri=<coordinator-url>\n\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Also, modify ",(0,t.jsx)(n.code,{children:"pulsar.broker-service-url"})," and  ",(0,t.jsx)(n.code,{children:"pulsar.zookeeper-uri"})," configs in ",(0,t.jsx)(n.code,{children:"${project.root}/conf/presto/catalog/pulsar.properties"})," on those nodes accordingly"]}),"\n",(0,t.jsx)(n.p,{children:"Afterwards, you can start the coordinator by just running"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"$ ./bin/pulsar sql-worker run"})}),"\n",(0,t.jsx)(n.p,{children:"For the other two nodes that will only serve as worker nodes, the configurations can be the following:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\nproperties\ncoordinator=false\nhttp-server.http.port=8080\nquery.max-memory=50GB\nquery.max-memory-per-node=1GB\ndiscovery.uri=<coordinator-url>\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"Also, modify"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\npulsar.broker-service-url``` and  ```pulsar.zookeeper-uri``` configs in ```${project.root}/conf/presto/catalog/pulsar.properties``` accordingly\n\nYou can also start the worker by just running: ```$ ./bin/pulsar sql-worker run```\n\nYou can check the status of your cluster from the SQL CLI.  To start the SQL CLI:\n\n```bash\n\n$ ./bin/pulsar sql --server <coordinate_url>\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can then run the following command to check the status of your nodes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"\npresto> SELECT * FROM system.runtime.nodes;\n node_id |        http_uri         | node_version | coordinator | state\n---------+-------------------------+--------------+-------------+--------\n 1       | http://192.168.2.1:8081 | testversion  | true        | active\n 3       | http://192.168.2.2:8081 | testversion  | false       | active\n 2       | http://192.168.2.3:8081 | testversion  | false       | active\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"For more information about deployment in Presto, please reference:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://prestosql.io/docs/current/installation/deployment.html",children:"Deploying Presto"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var o=r(96540);const t={},s=o.createContext(t);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);
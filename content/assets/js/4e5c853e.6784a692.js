"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[26891],{45009:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>o,frontMatter:()=>d,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"io-elasticsearch-sink","title":"Elasticsearch sink connector","description":"You can download all the Pulsar connectors on download page.","source":"@site/versioned_docs/version-3.0.x/io-elasticsearch-sink.md","sourceDirName":".","slug":"/io-elasticsearch-sink","permalink":"/docs/3.0.x/io-elasticsearch-sink","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-3.0.x/io-elasticsearch-sink.md","tags":[],"version":"3.0.x","frontMatter":{"id":"io-elasticsearch-sink","title":"Elasticsearch sink connector","sidebar_label":"Elasticsearch sink connector"}}');var i=n(74848),t=n(28453);const d={id:"io-elasticsearch-sink",title:"Elasticsearch sink connector",sidebar_label:"Elasticsearch sink connector"},c=void 0,l={},h=[{value:"Requirements",id:"requirements",level:2},{value:"Feature",id:"feature",level:2},{value:"Handle data",id:"handle-data",level:3},{value:"Map multiple indexes",id:"map-multiple-indexes",level:3},{value:"Enable bulk writes",id:"enable-bulk-writes",level:3},{value:"Enable secure connections via TLS",id:"enable-secure-connections-via-tls",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Property",id:"property",level:3},{value:"Definition of ElasticSearchSslConfig structure:",id:"definition-of-elasticsearchsslconfig-structure",level:3},{value:"Example",id:"example",level:2},{value:"Configuration",id:"configuration-1",level:3},{value:"For Elasticsearch After 6.2",id:"for-elasticsearch-after-62",level:4},{value:"For Elasticsearch Before 6.2",id:"for-elasticsearch-before-62",level:4},{value:"Usage",id:"usage",level:3}];function a(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["You can download all the Pulsar connectors on ",(0,i.jsx)(s.a,{href:"pathname:///download",children:"download page"}),"."]})}),"\n",(0,i.jsx)(s.p,{children:"The Elasticsearch sink connector pulls messages from Pulsar topics and persists the messages to indexes."}),"\n",(0,i.jsx)(s.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsx)(s.p,{children:"To deploy an Elasticsearch sink connector, the following are required:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Elasticsearch 7 (Elasticsearch 8 will be supported in the future)"}),"\n",(0,i.jsx)(s.li,{children:"OpenSearch 1.x"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"feature",children:"Feature"}),"\n",(0,i.jsx)(s.h3,{id:"handle-data",children:"Handle data"}),"\n",(0,i.jsx)(s.p,{children:"Since Pulsar 2.9.0, the Elasticsearch sink connector has the following ways of working. You can choose one of them."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Raw processing"}),(0,i.jsxs)(s.td,{children:["The sink reads from topics and passes the raw content to Elasticsearch. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," This is the ",(0,i.jsx)(s.strong,{children:"default"})," behavior. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," Raw processing was already available ",(0,i.jsx)(s.strong,{children:"in Pulsar 2.8.x"}),"."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Schema aware"}),(0,i.jsxs)(s.td,{children:["The sink uses the schema and handles AVRO, JSON, and KeyValue schema types while mapping the content to the Elasticsearch document.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," If you set ",(0,i.jsx)(s.code,{children:"schemaEnable"})," to ",(0,i.jsx)(s.code,{children:"true"}),", the sink interprets the contents of the message and you can define a ",(0,i.jsx)(s.strong,{children:"primary key"})," that in turn used as the special ",(0,i.jsx)(s.code,{children:"_id"})," field on Elasticsearch."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:[(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," This allows you to perform ",(0,i.jsx)(s.code,{children:"UPDATE"}),", ",(0,i.jsx)(s.code,{children:"INSERT"}),", and ",(0,i.jsx)(s.code,{children:"DELETE"})," operations"]}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["to Elasticsearch driven by the logical primary key of the message.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," This"]}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"is very useful in a typical Change Data Capture scenario in which you follow the"}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"changes on your database, write them to Pulsar (using the Debezium adapter for"}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["instance), and then you write to Elasticsearch.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," You configure the"]}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["mapping of the primary key using the ",(0,i.jsx)(s.code,{children:"primaryFields"})," configuration"]}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["entry.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"The ",(0,i.jsx)(s.code,{children:"DELETE"})," operation can be performed when the primary key is"]}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsxs)(s.td,{children:["not empty and the remaining value is empty. Use the ",(0,i.jsx)(s.code,{children:"nullValueAction"})," to"]}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"configure this behavior. The default configuration simply ignores such empty"}),(0,i.jsx)(s.td,{})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"values."}),(0,i.jsx)(s.td,{})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"map-multiple-indexes",children:"Map multiple indexes"}),"\n",(0,i.jsxs)(s.p,{children:["Since Pulsar 2.9.0, the ",(0,i.jsx)(s.code,{children:"indexName"})," property is no more required. If you omit it, the sink writes to an index name after the Pulsar topic name."]}),"\n",(0,i.jsx)(s.h3,{id:"enable-bulk-writes",children:"Enable bulk writes"}),"\n",(0,i.jsxs)(s.p,{children:["Since Pulsar 2.9.0, you can use bulk writes by setting the ",(0,i.jsx)(s.code,{children:"bulkEnabled"})," property to ",(0,i.jsx)(s.code,{children:"true"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"enable-secure-connections-via-tls",children:"Enable secure connections via TLS"}),"\n",(0,i.jsx)(s.p,{children:"Since Pulsar 2.9.0, you can enable secure connections with TLS."}),"\n",(0,i.jsx)(s.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(s.p,{children:"The configuration of the Elasticsearch sink connector has the following properties."}),"\n",(0,i.jsx)(s.h3,{id:"property",children:"Property"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Required"}),(0,i.jsx)(s.th,{children:"Default"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"elasticSearchUrl"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"true"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsx)(s.td,{children:"The URL of elastic search cluster to which the connector connects."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"indexName"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsxs)(s.td,{children:["The index name to which the connector writes messages. The default value is the topic name. It accepts date formats in the name to support event time based index with the pattern ",(0,i.jsx)(s.code,{children:"%{+<date-format>}"}),". For example, suppose the event time of the record is 1645182000000L, the indexName is ",(0,i.jsx)(s.code,{children:"logs-%{+yyyy-MM-dd}"}),", then the formatted index name would be ",(0,i.jsx)(s.code,{children:"logs-2022-02-18"}),"."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"schemaEnable"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"Turn on the Schema Aware mode."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"createIndexIfNeeded"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"Manage index if missing."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxRetries"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"1"}),(0,i.jsx)(s.td,{children:"The maximum number of retries for elasticsearch requests. Use -1 to disable it."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"retryBackoffInMs"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"100"}),(0,i.jsx)(s.td,{children:"The base time to wait when retrying an Elasticsearch request (in milliseconds)."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxRetryTimeInSec"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"86400"}),(0,i.jsx)(s.td,{children:"The maximum retry time interval in seconds for retrying an elasticsearch request."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"bulkEnabled"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"Enable the elasticsearch bulk processor to flush write requests based on the number or size of requests, or after a given period."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"bulkActions"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"1000"}),(0,i.jsx)(s.td,{children:"The maximum number of actions per elasticsearch bulk request. Use -1 to disable it."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"bulkSizeInMb"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"5"}),(0,i.jsx)(s.td,{children:"The maximum size in megabytes of elasticsearch bulk requests. Use -1 to disable it."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"bulkConcurrentRequests"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"0"}),(0,i.jsx)(s.td,{children:"The maximum number of in flight elasticsearch bulk requests. The default 0 allows the execution of a single request. A value of 1 means 1 concurrent request is allowed to be executed while accumulating new bulk requests."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"bulkFlushIntervalInMs"})}),(0,i.jsx)(s.td,{children:"Long"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"1000"}),(0,i.jsx)(s.td,{children:"The maximum period of time to wait for flushing pending writes when bulk writes are enabled. -1 or zero means the scheduled flushing is disabled."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"compressionEnabled"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"Enable elasticsearch request compression."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"connectTimeoutInMs"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"5000"}),(0,i.jsx)(s.td,{children:"The elasticsearch client connection timeout in milliseconds."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"connectionRequestTimeoutInMs"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"1000"}),(0,i.jsx)(s.td,{children:"The time in milliseconds for getting a connection from the elasticsearch connection pool."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"connectionIdleTimeoutInMs"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"5"}),(0,i.jsx)(s.td,{children:"Idle connection timeout to prevent a read timeout."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"keyIgnore"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"true"}),(0,i.jsxs)(s.td,{children:["Whether to ignore the record key to build the Elasticsearch document ",(0,i.jsx)(s.code,{children:"_id"}),". If primaryFields is defined, the connector extract the primary fields from the payload to build the document ",(0,i.jsx)(s.code,{children:"_id"})," If no primaryFields are provided, elasticsearch auto generates a random document ",(0,i.jsx)(s.code,{children:"_id"}),"."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"primaryFields"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'"id"'}),(0,i.jsxs)(s.td,{children:["The comma separated ordered list of field names used to build the Elasticsearch document ",(0,i.jsx)(s.code,{children:"_id"})," from the record value. If this list is a singleton, the field is converted as a string. If this list has 2 or more fields, the generated ",(0,i.jsx)(s.code,{children:"_id"})," is a string representation of a JSON array of the field values."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"nullValueAction"})}),(0,i.jsx)(s.td,{children:"enum (IGNORE,DELETE,FAIL)"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"IGNORE"}),(0,i.jsx)(s.td,{children:"How to handle records with null values, possible options are IGNORE, DELETE or FAIL. Default is IGNORE the message."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"malformedDocAction"})}),(0,i.jsx)(s.td,{children:"enum (IGNORE,WARN,FAIL)"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"FAIL"}),(0,i.jsx)(s.td,{children:"How to handle elasticsearch rejected documents due to some malformation. Possible options are IGNORE, DELETE or FAIL. Default is FAIL the Elasticsearch document."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"stripNulls"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"true"}),(0,i.jsx)(s.td,{children:"If stripNulls is false, elasticsearch _source includes 'null' for empty fields (for example {\"foo\": null}), otherwise null fields are stripped."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"socketTimeoutInMs"})}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"60000"}),(0,i.jsx)(s.td,{children:"The socket timeout in milliseconds waiting to read the elasticsearch response."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"typeName"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'"_doc"'}),(0,i.jsxs)(s.td,{children:["The type name to which the connector writes messages to. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),' The value should be set explicitly to a valid type name other than "_doc" for Elasticsearch version before 6.2, and left to default otherwise.']})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"indexNumberOfShards"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"1"}),(0,i.jsx)(s.td,{children:"The number of shards of the index."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"indexNumberOfReplicas"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"1"}),(0,i.jsx)(s.td,{children:"The number of replicas of the index."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"username"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsxs)(s.td,{children:["The username used by the connector to connect to the elastic search cluster. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"If ",(0,i.jsx)(s.code,{children:"username"})," is set, then ",(0,i.jsx)(s.code,{children:"password"})," should also be provided."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"password"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsxs)(s.td,{children:["The password used by the connector to connect to the elastic search cluster. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"If ",(0,i.jsx)(s.code,{children:"username"})," is set, then ",(0,i.jsx)(s.code,{children:"password"})," should also be provided."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"ssl"})}),(0,i.jsx)(s.td,{children:"ElasticSearchSslConfig"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"Configuration for TLS encrypted communication"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"compatibilityMode"})}),(0,i.jsx)(s.td,{children:"enum (AUTO,ELASTICSEARCH,ELASTICSEARCH_7,OPENSEARCH)"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"AUTO"}),(0,i.jsxs)(s.td,{children:["Specify compatibility mode with the ElasticSearch cluster. ",(0,i.jsx)(s.code,{children:"AUTO"})," value will try to auto detect the correct compatibility mode to use. Use ",(0,i.jsx)(s.code,{children:"ELASTICSEARCH_7"})," if the target cluster is running ElasticSearch 7 or prior. Use ",(0,i.jsx)(s.code,{children:"ELASTICSEARCH"})," if the target cluster is running ElasticSearch 8 or higher. Use ",(0,i.jsx)(s.code,{children:"OPENSEARCH"})," if the target cluster is running OpenSearch."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"token"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsx)(s.td,{children:"The token used by the connector to connect to the ElasticSearch cluster. Only one between basic/token/apiKey authentication mode must be configured."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"apiKey"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsx)(s.td,{children:"The apiKey used by the connector to connect to the ElasticSearch cluster. Only one between basic/token/apiKey authentication mode must be configured."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"canonicalKeyFields"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsxs)(s.td,{children:["Whether to sort the key fields for JSON and Avro or not. If it is set to ",(0,i.jsx)(s.code,{children:"true"})," and the record key schema is ",(0,i.jsx)(s.code,{children:"JSON"})," or ",(0,i.jsx)(s.code,{children:"AVRO"}),", the serialized object does not consider the order of properties."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"stripNonPrintableCharacters"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"true"}),(0,i.jsx)(s.td,{children:"Whether to remove all non-printable characters from the document or not. If it is set to true, all non-printable characters are removed from the document."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"idHashingAlgorithm"})}),(0,i.jsx)(s.td,{children:"enum(NONE,SHA256,SHA512)"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"NONE"}),(0,i.jsx)(s.td,{children:"Hashing algorithm to use for the document id. This is useful in order to be compliant with the ElasticSearch _id hard limit of 512 bytes."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"conditionalIdHashing"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"This option only works if idHashingAlgorithm is set. If enabled, the hashing is performed only if the id is greater than 512 bytes otherwise the hashing is performed on each document in any case."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"copyKeyFields"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"If the message key schema is AVRO or JSON, the message key fields are copied into the ElasticSearch document."})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"definition-of-elasticsearchsslconfig-structure",children:"Definition of ElasticSearchSslConfig structure:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Required"}),(0,i.jsx)(s.th,{children:"Default"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"enabled"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"Enable SSL/TLS."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"hostnameVerification"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"true"}),(0,i.jsx)(s.td,{children:"Whether or not to validate node hostnames when using SSL."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"disableCertificateValidation"})}),(0,i.jsx)(s.td,{children:"Boolean"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:"true"}),(0,i.jsx)(s.td,{children:"Whether or not to disable the node certificate validation. Changing this value is high insecure and you should not use it in production environment."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"truststorePath"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsx)(s.td,{children:"The path to the truststore file."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"truststorePassword"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsx)(s.td,{children:"Truststore password."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"keystorePath"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsx)(s.td,{children:"The path to the keystore file."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"keystorePassword"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsx)(s.td,{children:"Keystore password."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"cipherSuites"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'" " (empty string)'}),(0,i.jsx)(s.td,{children:"SSL/TLS cipher suites."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"protocols"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"false"}),(0,i.jsx)(s.td,{children:'"TLSv1.2"'}),(0,i.jsx)(s.td,{children:"Comma separated list of enabled SSL/TLS protocols."})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(s.p,{children:"Before using the Elasticsearch sink connector, you need to create a configuration file through one of the following methods."}),"\n",(0,i.jsx)(s.h3,{id:"configuration-1",children:"Configuration"}),"\n",(0,i.jsx)(s.h4,{id:"for-elasticsearch-after-62",children:"For Elasticsearch After 6.2"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"JSON"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "configs": {\n      "elasticSearchUrl": "http://localhost:9200",\n      "indexName": "my_index",\n      "username": "scooby",\n      "password": "doobie"\n   }\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"YAML"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:'configs:\n    elasticSearchUrl: "http://localhost:9200"\n    indexName: "my_index"\n    username: "scooby"\n    password: "doobie"\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"for-elasticsearch-before-62",children:"For Elasticsearch Before 6.2"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"JSON"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "elasticSearchUrl": "http://localhost:9200",\n    "indexName": "my_index",\n    "typeName": "doc",\n    "username": "scooby",\n    "password": "doobie"\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"YAML"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:'configs:\n    elasticSearchUrl: "http://localhost:9200"\n    indexName: "my_index"\n    typeName: "doc"\n    username: "scooby"\n    password: "doobie"\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Start a single node Elasticsearch cluster."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'docker run -p 9200:9200 -p 9300:9300 \\\n    -e "discovery.type=single-node" \\\n    docker.elastic.co/elasticsearch/elasticsearch:7.13.3\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Start a Pulsar service locally in standalone mode."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"bin/pulsar standalone\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Make sure the NAR file is available at ",(0,i.jsx)(s.code,{children:"connectors/pulsar-io-elastic-search-3.0.10.nar"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Start the Pulsar Elasticsearch connector in local run mode using one of the following methods."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Use the ",(0,i.jsx)(s.strong,{children:"JSON"})," configuration as shown previously."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'bin/pulsar-admin sinks localrun \\\n    --archive $PWD/connectors/pulsar-io-elastic-search-3.0.10.nar \\\n    --tenant public \\\n    --namespace default \\\n    --name elasticsearch-test-sink \\\n    --sink-config \'{"elasticSearchUrl":"http://localhost:9200","indexName": "my_index","username": "scooby","password": "doobie"}\' \\\n    --inputs elasticsearch_test\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Use the ",(0,i.jsx)(s.strong,{children:"YAML"})," configuration file as shown previously."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"bin/pulsar-admin sinks localrun \\\n    --archive $PWD/connectors/pulsar-io-elastic-search-3.0.10.nar \\\n    --tenant public \\\n    --namespace default \\\n    --name elasticsearch-test-sink \\\n    --sink-config-file $PWD/elasticsearch-sink.yml \\\n    --inputs elasticsearch_test\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Publish records to the topic."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'bin/pulsar-client produce elasticsearch_test --messages "{\\"a\\":1}"\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Check documents in Elasticsearch."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"refresh the index"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"curl -s http://localhost:9200/my_index/_refresh\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"search documents"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"curl -s http://localhost:9200/my_index/_search\n"})}),"\n",(0,i.jsx)(s.p,{children:"You can see the record that published earlier has been successfully written into Elasticsearch."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{"took":2,"timed_out":false,"_shards":{"total":1,"successful":1,"skipped":0,"failed":0},"hits":{"total":{"value":1,"relation":"eq"},"max_score":1.0,"hits":[{"_index":"my_index","_type":"_doc","_id":"FSxemm8BLjG_iC0EeTYJ","_score":1.0,"_source":{"a":1}}]}}\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function o(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>c});var r=n(96540);const i={},t=r.createContext(i);function d(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);
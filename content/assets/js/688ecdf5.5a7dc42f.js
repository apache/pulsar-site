"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[30898],{36308:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"2.6.4","label":"2.6.4","banner":null,"badge":false,"noIndex":false,"className":"docs-version-2.6.4","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"About","href":"/docs/2.6.4/","docId":"about","unlisted":false},{"type":"category","label":"Get Started","items":[{"type":"link","label":"Pulsar 2.0","href":"/docs/2.6.4/pulsar-2.0","docId":"pulsar-2.0","unlisted":false},{"type":"link","label":"Run Pulsar locally","href":"/docs/2.6.4/getting-started-standalone","docId":"getting-started-standalone","unlisted":false},{"type":"link","label":"Run Pulsar in Docker","href":"/docs/2.6.4/getting-started-docker","docId":"getting-started-docker","unlisted":false},{"type":"link","label":"Run Pulsar in Kubernetes","href":"/docs/2.6.4/getting-started-helm","docId":"getting-started-helm","unlisted":false},{"type":"link","label":"Use Pulsar with client libraries","href":"/docs/2.6.4/client-libraries","docId":"client-libraries","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Concepts and Architecture","items":[{"type":"link","label":"Overview","href":"/docs/2.6.4/concepts-overview","docId":"concepts-overview","unlisted":false},{"type":"link","label":"Messaging","href":"/docs/2.6.4/concepts-messaging","docId":"concepts-messaging","unlisted":false},{"type":"link","label":"Architecture","href":"/docs/2.6.4/concepts-architecture-overview","docId":"concepts-architecture-overview","unlisted":false},{"type":"link","label":"Clients","href":"/docs/2.6.4/concepts-clients","docId":"concepts-clients","unlisted":false},{"type":"link","label":"Geo Replication","href":"/docs/2.6.4/concepts-replication","docId":"concepts-replication","unlisted":false},{"type":"link","label":"Multi Tenancy","href":"/docs/2.6.4/concepts-multi-tenancy","docId":"concepts-multi-tenancy","unlisted":false},{"type":"link","label":"Authentication and Authorization","href":"/docs/2.6.4/concepts-authentication","docId":"concepts-authentication","unlisted":false},{"type":"link","label":"Topic Compaction","href":"/docs/2.6.4/concepts-topic-compaction","docId":"concepts-topic-compaction","unlisted":false},{"type":"link","label":"Tiered Storage","href":"/docs/2.6.4/concepts-tiered-storage","docId":"concepts-tiered-storage","unlisted":false},{"type":"link","label":"Proxy support with SNI routing","href":"/docs/2.6.4/concepts-proxy-sni-routing","docId":"concepts-proxy-sni-routing","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar Schema","items":[{"type":"link","label":"Get started","href":"/docs/2.6.4/schema-get-started","docId":"schema-get-started","unlisted":false},{"type":"link","label":"Understand schema","href":"/docs/2.6.4/schema-understand","docId":"schema-understand","unlisted":false},{"type":"link","label":"Schema evolution and compatibility","href":"/docs/2.6.4/schema-evolution-compatibility","docId":"schema-evolution-compatibility","unlisted":false},{"type":"link","label":"Manage schema","href":"/docs/2.6.4/schema-manage","docId":"schema-manage","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar Functions","items":[{"type":"link","label":"Overview","href":"/docs/2.6.4/functions-overview","docId":"functions-overview","unlisted":false},{"type":"link","label":"Setup: Pulsar Functions Worker","href":"/docs/2.6.4/functions-worker","docId":"functions-worker","unlisted":false},{"type":"link","label":"Setup: Configure Functions runtime","href":"/docs/2.6.4/functions-runtime","docId":"functions-runtime","unlisted":false},{"type":"link","label":"How-to: Develop","href":"/docs/2.6.4/functions-develop","docId":"functions-develop","unlisted":false},{"type":"link","label":"How-to: Debug","href":"/docs/2.6.4/functions-debug","docId":"functions-debug","unlisted":false},{"type":"link","label":"How-to: Deploy","href":"/docs/2.6.4/functions-deploy","docId":"functions-deploy","unlisted":false},{"type":"link","label":"Reference: CLI","href":"/docs/2.6.4/functions-cli","docId":"functions-cli","unlisted":false},{"type":"link","label":"Window Functions: Context","href":"/docs/2.6.4/window-functions-context","docId":"window-functions-context","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar IO","items":[{"type":"link","label":"Overview","href":"/docs/2.6.4/io-overview","docId":"io-overview","unlisted":false},{"type":"link","label":"Get started","href":"/docs/2.6.4/io-quickstart","docId":"io-quickstart","unlisted":false},{"type":"link","label":"Use","href":"/docs/2.6.4/io-use","docId":"io-use","unlisted":false},{"type":"link","label":"Debug","href":"/docs/2.6.4/io-debug","docId":"io-debug","unlisted":false},{"type":"link","label":"Built-in connector","href":"/docs/2.6.4/io-connectors","docId":"io-connectors","unlisted":false},{"type":"link","label":"CDC connector","href":"/docs/2.6.4/io-cdc","docId":"io-cdc","unlisted":false},{"type":"link","label":"Develop","href":"/docs/2.6.4/io-develop","docId":"io-develop","unlisted":false},{"type":"link","label":"CLI","href":"/docs/2.6.4/io-cli","docId":"io-cli","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar SQL","items":[{"type":"link","label":"Overview","href":"/docs/2.6.4/sql-overview","docId":"sql-overview","unlisted":false},{"type":"link","label":"Query data","href":"/docs/2.6.4/sql-getting-started","docId":"sql-getting-started","unlisted":false},{"type":"link","label":"Configuration and deployment","href":"/docs/2.6.4/sql-deployment-configurations","docId":"sql-deployment-configurations","unlisted":false},{"type":"link","label":"REST APIs","href":"/docs/2.6.4/sql-rest-api","docId":"sql-rest-api","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Kubernetes (Helm)","items":[{"type":"link","label":"Overview","href":"/docs/2.6.4/helm-overview","docId":"helm-overview","unlisted":false},{"type":"link","label":"Prepare","href":"/docs/2.6.4/helm-prepare","docId":"helm-prepare","unlisted":false},{"type":"link","label":"Install","href":"/docs/2.6.4/helm-install","docId":"helm-install","unlisted":false},{"type":"link","label":"Deployment","href":"/docs/2.6.4/helm-deploy","docId":"helm-deploy","unlisted":false},{"type":"link","label":"Upgrade","href":"/docs/2.6.4/helm-upgrade","docId":"helm-upgrade","unlisted":false},{"type":"link","label":"Required Tools","href":"/docs/2.6.4/helm-tools","docId":"helm-tools","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Deployment","items":[{"type":"link","label":"Amazon Web Services","href":"/docs/2.6.4/deploy-aws","docId":"deploy-aws","unlisted":false},{"type":"link","label":"Kubernetes","href":"/docs/2.6.4/deploy-kubernetes","docId":"deploy-kubernetes","unlisted":false},{"type":"link","label":"Bare metal","href":"/docs/2.6.4/deploy-bare-metal","docId":"deploy-bare-metal","unlisted":false},{"type":"link","label":"Bare metal multi-cluster","href":"/docs/2.6.4/deploy-bare-metal-multi-cluster","docId":"deploy-bare-metal-multi-cluster","unlisted":false},{"type":"link","label":"Monitoring","href":"/docs/2.6.4/deploy-monitoring","docId":"deploy-monitoring","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Administration","items":[{"type":"link","label":"ZooKeeper and BookKeeper","href":"/docs/2.6.4/administration-zk-bk","docId":"administration-zk-bk","unlisted":false},{"type":"link","label":"Geo-replication","href":"/docs/2.6.4/administration-geo","docId":"administration-geo","unlisted":false},{"type":"link","label":"Pulsar Manager","href":"/docs/2.6.4/administration-pulsar-manager","docId":"administration-pulsar-manager","unlisted":false},{"type":"link","label":"Pulsar statistics","href":"/docs/2.6.4/administration-stats","docId":"administration-stats","unlisted":false},{"type":"link","label":"Load balance","href":"/docs/2.6.4/administration-load-balance","docId":"administration-load-balance","unlisted":false},{"type":"link","label":"Pulsar proxy","href":"/docs/2.6.4/administration-proxy","docId":"administration-proxy","unlisted":false},{"type":"link","label":"Upgrade","href":"/docs/2.6.4/administration-upgrade","docId":"administration-upgrade","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Security","items":[{"type":"link","label":"Overview","href":"/docs/2.6.4/security-overview","docId":"security-overview","unlisted":false},{"type":"link","label":"Transport Encryption using TLS","href":"/docs/2.6.4/security-tls-transport","docId":"security-tls-transport","unlisted":false},{"type":"link","label":"Authentication using TLS","href":"/docs/2.6.4/security-tls-authentication","docId":"security-tls-authentication","unlisted":false},{"type":"link","label":"Using TLS with KeyStore configure","href":"/docs/2.6.4/security-tls-keystore","docId":"security-tls-keystore","unlisted":false},{"type":"link","label":"Authentication using JWT","href":"/docs/2.6.4/security-jwt","docId":"security-jwt","unlisted":false},{"type":"link","label":"Authentication using Athenz","href":"/docs/2.6.4/security-athenz","docId":"security-athenz","unlisted":false},{"type":"link","label":"Authentication using Kerberos","href":"/docs/2.6.4/security-kerberos","docId":"security-kerberos","unlisted":false},{"type":"link","label":"Authentication using OAuth 2.0 access tokens","href":"/docs/2.6.4/security-oauth2","docId":"security-oauth2","unlisted":false},{"type":"link","label":"Authorization and ACLs","href":"/docs/2.6.4/security-authorization","docId":"security-authorization","unlisted":false},{"type":"link","label":"End-to-End Encryption","href":"/docs/2.6.4/security-encryption","docId":"security-encryption","unlisted":false},{"type":"link","label":"Extending","href":"/docs/2.6.4/security-extending","docId":"security-extending","unlisted":false},{"type":"link","label":"Bouncy Castle Providers","href":"/docs/2.6.4/security-bouncy-castle","docId":"security-bouncy-castle","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Performance","items":[{"type":"link","label":"Pulsar Perf","href":"/docs/2.6.4/performance-pulsar-perf","docId":"performance-pulsar-perf","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Client Libraries","items":[{"type":"link","label":"Java","href":"/docs/2.6.4/client-libraries-java","docId":"client-libraries-java","unlisted":false},{"type":"link","label":"Go","href":"/docs/2.6.4/client-libraries-go","docId":"client-libraries-go","unlisted":false},{"type":"link","label":"Python","href":"/docs/2.6.4/client-libraries-python","docId":"client-libraries-python","unlisted":false},{"type":"link","label":"C++","href":"/docs/2.6.4/client-libraries-cpp","docId":"client-libraries-cpp","unlisted":false},{"type":"link","label":"Node.js","href":"/docs/2.6.4/client-libraries-node","docId":"client-libraries-node","unlisted":false},{"type":"link","label":"WebSocket","href":"/docs/2.6.4/client-libraries-websocket","docId":"client-libraries-websocket","unlisted":false},{"type":"link","label":"C#","href":"/docs/2.6.4/client-libraries-dotnet","docId":"client-libraries-dotnet","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Admin API","items":[{"type":"link","label":"Overview","href":"/docs/2.6.4/admin-api-overview","docId":"admin-api-overview","unlisted":false},{"type":"link","label":"Clusters","href":"/docs/2.6.4/admin-api-clusters","docId":"admin-api-clusters","unlisted":false},{"type":"link","label":"Tenants","href":"/docs/2.6.4/admin-api-tenants","docId":"admin-api-tenants","unlisted":false},{"type":"link","label":"Brokers","href":"/docs/2.6.4/admin-api-brokers","docId":"admin-api-brokers","unlisted":false},{"type":"link","label":"Namespaces","href":"/docs/2.6.4/admin-api-namespaces","docId":"admin-api-namespaces","unlisted":false},{"type":"link","label":"Permissions","href":"/docs/2.6.4/admin-api-permissions","docId":"admin-api-permissions","unlisted":false},{"type":"link","label":"Persistent topics","href":"/docs/2.6.4/admin-api-persistent-topics","docId":"admin-api-persistent-topics","unlisted":false},{"type":"link","label":"Non-Persistent topics","href":"/docs/2.6.4/admin-api-non-persistent-topics","docId":"admin-api-non-persistent-topics","unlisted":false},{"type":"link","label":"Partitioned topics","href":"/docs/2.6.4/admin-api-partitioned-topics","docId":"admin-api-partitioned-topics","unlisted":false},{"type":"link","label":"Non-Partitioned topics","href":"/docs/2.6.4/admin-api-non-partitioned-topics","docId":"admin-api-non-partitioned-topics","unlisted":false},{"type":"link","label":"Schemas","href":"/docs/2.6.4/admin-api-schemas","docId":"admin-api-schemas","unlisted":false},{"type":"link","label":"Functions","href":"/docs/2.6.4/admin-api-functions","docId":"admin-api-functions","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Adaptors","items":[{"type":"link","label":"Kafka client wrapper","href":"/docs/2.6.4/adaptors-kafka","docId":"adaptors-kafka","unlisted":false},{"type":"link","label":"Apache Spark","href":"/docs/2.6.4/adaptors-spark","docId":"adaptors-spark","unlisted":false},{"type":"link","label":"Apache Storm","href":"/docs/2.6.4/adaptors-storm","docId":"adaptors-storm","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Cookbooks","items":[{"type":"link","label":"Tiered Storage","href":"/docs/2.6.4/cookbooks-tiered-storage","docId":"cookbooks-tiered-storage","unlisted":false},{"type":"link","label":"Topic compaction","href":"/docs/2.6.4/cookbooks-compaction","docId":"cookbooks-compaction","unlisted":false},{"type":"link","label":"Message deduplication","href":"/docs/2.6.4/cookbooks-deduplication","docId":"cookbooks-deduplication","unlisted":false},{"type":"link","label":"Non-persistent messaging","href":"/docs/2.6.4/cookbooks-non-persistent","docId":"cookbooks-non-persistent","unlisted":false},{"type":"link","label":"Partitioned Topics","href":"/docs/2.6.4/cookbooks-partitioned","docId":"cookbooks-partitioned","unlisted":false},{"type":"link","label":"Message retention and expiry","href":"/docs/2.6.4/cookbooks-retention-expiry","docId":"cookbooks-retention-expiry","unlisted":false},{"type":"link","label":"Encryption ","href":"/docs/2.6.4/cookbooks-encryption","docId":"cookbooks-encryption","unlisted":false},{"type":"link","label":"Message queue","href":"/docs/2.6.4/cookbooks-message-queue","docId":"cookbooks-message-queue","unlisted":false},{"type":"link","label":"BookKeeper Ledger Metadata","href":"/docs/2.6.4/cookbooks-bookkeepermetadata","docId":"cookbooks-bookkeepermetadata","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Development","items":[{"type":"link","label":"Simulation tools","href":"/docs/2.6.4/develop-tools","docId":"develop-tools","unlisted":false},{"type":"link","label":"Binary protocol","href":"/docs/2.6.4/developing-binary-protocol","docId":"developing-binary-protocol","unlisted":false},{"type":"link","label":"Custom schema storage","href":"/docs/2.6.4/develop-schema","docId":"develop-schema","unlisted":false},{"type":"link","label":"Modular load manager","href":"/docs/2.6.4/develop-load-manager","docId":"develop-load-manager","unlisted":false},{"type":"link","label":"Building Pulsar C++ client","href":"/docs/2.6.4/develop-cpp","docId":"develop-cpp","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Reference","items":[{"type":"link","label":"Terminology","href":"/docs/2.6.4/reference-terminology","docId":"reference-terminology","unlisted":false},{"type":"link","label":"Pulsar CLI tools","href":"/docs/2.6.4/reference-cli-tools","docId":"reference-cli-tools","unlisted":false},{"type":"link","label":"Pulsar configuration","href":"/docs/2.6.4/reference-configuration","docId":"reference-configuration","unlisted":false},{"type":"link","label":"Pulsar Metrics","href":"/docs/2.6.4/reference-metrics","docId":"reference-metrics","unlisted":false},{"type":"link","label":"Pulsar REST APIs","href":"/docs/2.6.4/reference-rest-api-overview","docId":"reference-rest-api-overview","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"about":{"id":"about","title":"Welcome to the doc portal!","description":"*","sidebar":"docsSidebar"},"adaptors-kafka":{"id":"adaptors-kafka","title":"Pulsar adaptor for Apache Kafka","description":"Pulsar provides an easy option for applications that are currently written using the Apache Kafka Java client API.","sidebar":"docsSidebar"},"adaptors-spark":{"id":"adaptors-spark","title":"Pulsar adaptor for Apache Spark","description":"The Spark Streaming receiver for Pulsar is a custom receiver that enables Apache Spark Streaming to receive raw data from Pulsar.","sidebar":"docsSidebar"},"adaptors-storm":{"id":"adaptors-storm","title":"Pulsar adaptor for Apache Storm","description":"Pulsar Storm is an adaptor for integrating with Apache Storm topologies. It provides core Storm implementations for sending and receiving data.","sidebar":"docsSidebar"},"admin-api-brokers":{"id":"admin-api-brokers","title":"Managing Brokers","description":"Pulsar brokers consist of two components:","sidebar":"docsSidebar"},"admin-api-clusters":{"id":"admin-api-clusters","title":"Managing Clusters","description":"Pulsar clusters consist of one or more Pulsar brokers, one or more BookKeeper","sidebar":"docsSidebar"},"admin-api-functions":{"id":"admin-api-functions","title":"Manage Functions","description":"Pulsar Functions are lightweight compute processes that","sidebar":"docsSidebar"},"admin-api-namespaces":{"id":"admin-api-namespaces","title":"Managing Namespaces","description":"Pulsar namespaces are logical groupings of topics.","sidebar":"docsSidebar"},"admin-api-non-partitioned-topics":{"id":"admin-api-non-partitioned-topics","title":"Managing non-partitioned topics","description":"You can use Pulsar\'s admin API to create and manage non-partitioned topics.","sidebar":"docsSidebar"},"admin-api-non-persistent-topics":{"id":"admin-api-non-persistent-topics","title":"Managing non-persistent topics","description":"Non-persistent can be used in applications that only want to consume real time published messages and","sidebar":"docsSidebar"},"admin-api-overview":{"id":"admin-api-overview","title":"The Pulsar admin interface","description":"The Pulsar admin interface enables you to manage all of the important entities in a Pulsar instance, such as tenants, topics, and namespaces.","sidebar":"docsSidebar"},"admin-api-partitioned-topics":{"id":"admin-api-partitioned-topics","title":"Managing partitioned topics","description":"You can use Pulsar\'s admin API to create and manage partitioned topics.","sidebar":"docsSidebar"},"admin-api-permissions":{"id":"admin-api-permissions","title":"Managing permissions","description":"Permissions in Pulsar are managed at the namespace level","sidebar":"docsSidebar"},"admin-api-persistent-topics":{"id":"admin-api-persistent-topics","title":"Managing persistent topics","description":"Persistent helps to access topic which is a logical endpoint for publishing and consuming messages. Producers publish messages to the topic and consumers subscribe to the topic, to consume messages published to the topic.","sidebar":"docsSidebar"},"admin-api-schemas":{"id":"admin-api-schemas","title":"Managing Schemas","description":"","sidebar":"docsSidebar"},"admin-api-tenants":{"id":"admin-api-tenants","title":"Managing Tenants","description":"Tenants, like namespaces, can be managed using the admin API. There are currently two configurable aspects of tenants:","sidebar":"docsSidebar"},"admin-api-topics":{"id":"admin-api-topics","title":"Manage topics","description":"Pulsar has persistent and non-persistent topics. Persistent topic is a logical endpoint for publishing and consuming messages. The topic name structure for persistent topics is:"},"administration-dashboard":{"id":"administration-dashboard","title":"Pulsar dashboard","description":"Pulsar dashboard is deprecated. If you want to manage and monitor the stats of your topics, use Pulsar Manager."},"administration-geo":{"id":"administration-geo","title":"Pulsar geo-replication","description":"Geo-replication is the replication of persistently stored message data across multiple clusters of a Pulsar instance.","sidebar":"docsSidebar"},"administration-load-balance":{"id":"administration-load-balance","title":"Pulsar load balance","description":"Load balance across Pulsar brokers","sidebar":"docsSidebar"},"administration-proxy":{"id":"administration-proxy","title":"The Pulsar proxy","description":"The Pulsar proxy is an optional gateway that you can run in front of the brokers in a Pulsar cluster. You can run a Pulsar proxy in cases when direction connections between clients and Pulsar brokers are either infeasible, undesirable, or both, for example when you run Pulsar in a cloud environment or on Kubernetes or an analogous platform.","sidebar":"docsSidebar"},"administration-pulsar-manager":{"id":"administration-pulsar-manager","title":"Pulsar Manager","description":"Pulsar Manager is a web-based GUI management and monitoring tool that helps administrators and users manage and monitor tenants, namespaces, topics, subscriptions, brokers, clusters, and so on, and supports dynamic configuration of multiple environments.","sidebar":"docsSidebar"},"administration-stats":{"id":"administration-stats","title":"Pulsar stats","description":"Partitioned topics","sidebar":"docsSidebar"},"administration-upgrade":{"id":"administration-upgrade","title":"Upgrade Guide","description":"Upgrade guidelines","sidebar":"docsSidebar"},"administration-zk-bk":{"id":"administration-zk-bk","title":"ZooKeeper and BookKeeper administration","description":"Pulsar relies on two external systems for essential tasks:","sidebar":"docsSidebar"},"client-libraries":{"id":"client-libraries","title":"Pulsar client libraries","description":"Pulsar supports the following client libraries:","sidebar":"docsSidebar"},"client-libraries-cgo":{"id":"client-libraries-cgo","title":"Pulsar CGo client","description":"You can use Pulsar Go client to create Pulsar producers, consumers, and readers in Go (aka Golang)."},"client-libraries-cpp":{"id":"client-libraries-cpp","title":"Pulsar C++ client","description":"You can use Pulsar C++ client to create Pulsar producers and consumers in C++.","sidebar":"docsSidebar"},"client-libraries-dotnet":{"id":"client-libraries-dotnet","title":"Pulsar C# client","description":"You can use the Pulsar C# client to create Pulsar producers and consumers in C#. All the methods in the producer, consumer, and reader of a C# client are thread-safe.","sidebar":"docsSidebar"},"client-libraries-go":{"id":"client-libraries-go","title":"Pulsar Go client","description":"Tips: Currently, the CGo client will be deprecated, if you want to know more about the CGo client, please refer to CGo client docs","sidebar":"docsSidebar"},"client-libraries-java":{"id":"client-libraries-java","title":"Pulsar Java client","description":"You can use Pulsar Java client to create Java producer, consumer, and readers of messages and to perform administrative tasks. The current version of the Java client is 2.6.4.","sidebar":"docsSidebar"},"client-libraries-node":{"id":"client-libraries-node","title":"The Pulsar Node.js client","description":"The Pulsar Node.js client can be used to create Pulsar producers, consumers, and readers in Node.js.","sidebar":"docsSidebar"},"client-libraries-python":{"id":"client-libraries-python","title":"Pulsar Python client","description":"Pulsar Python client library is a wrapper over the existing C++ client library and exposes all of the same features. You can find the code in the python GitHub Repository of the C++ client code.","sidebar":"docsSidebar"},"client-libraries-websocket":{"id":"client-libraries-websocket","title":"Pulsar\'s WebSocket API","description":"Pulsar\'s WebSocket API is meant to provide a simple way to interact with Pulsar using languages that do not have an official client library. Through WebSockets you can publish and consume messages and use all the features available in the Java, Go, Python and C++ client libraries.","sidebar":"docsSidebar"},"concepts-architecture-overview":{"id":"concepts-architecture-overview","title":"Architecture Overview","description":"At the highest level, a Pulsar instance is composed of one or more Pulsar clusters. Clusters within an instance can replicate data amongst themselves.","sidebar":"docsSidebar"},"concepts-authentication":{"id":"concepts-authentication","title":"Authentication and Authorization","description":"Pulsar supports a pluggable authentication mechanism which can be configured at broker and it also supports authorization to identify client and its access rights on topics and tenants.","sidebar":"docsSidebar"},"concepts-clients":{"id":"concepts-clients","title":"Pulsar Clients","description":"Pulsar exposes a client API with language bindings for Java,  Go, Python and C++. The client API optimizes and encapsulates Pulsar\'s client-broker communication protocol and exposes a simple and intuitive API for use by applications.","sidebar":"docsSidebar"},"concepts-messaging":{"id":"concepts-messaging","title":"Messaging","description":"Pulsar is built on the publish-subscribe pattern (short for pub-sub). In this pattern, producers publish messages to topics. Consumers subscribe to those topics, process incoming messages, and send an acknowledgement when processing is complete.","sidebar":"docsSidebar"},"concepts-multi-tenancy":{"id":"concepts-multi-tenancy","title":"Multi Tenancy","description":"Pulsar was created from the ground up as a multi-tenant system. To support multi-tenancy, Pulsar has a concept of tenants. Tenants can be spread across clusters and can each have their own authentication and authorization scheme applied to them. They are also the administrative unit at which storage quotas, message TTL, and isolation policies can be managed.","sidebar":"docsSidebar"},"concepts-multiple-advertised-listeners":{"id":"concepts-multiple-advertised-listeners","title":"Multiple advertised listeners","description":"When a Pulsar cluster is deployed in the production environment, it may require to expose multiple advertised addresses for the broker. For example, when you deploy a Pulsar cluster in Kubernetes and want other clients, which are not in the same Kubernetes cluster, to connect to the Pulsar cluster, you need to assign a broker URL to external clients. But clients in the same Kubernetes cluster can still connect to the Pulsar cluster through the internal network of Kubernetes."},"concepts-overview":{"id":"concepts-overview","title":"Pulsar Overview","description":"Pulsar is a multi-tenant, high-performance solution for server-to-server messaging. Originally developed by Yahoo, Pulsar is under the stewardship of the Apache Software Foundation.","sidebar":"docsSidebar"},"concepts-proxy-sni-routing":{"id":"concepts-proxy-sni-routing","title":"Proxy support with SNI routing","description":"Pulsar Proxy with SNI routing","sidebar":"docsSidebar"},"concepts-replication":{"id":"concepts-replication","title":"Geo Replication","description":"Pulsar enables messages to be produced and consumed in different geo-locations. For instance, your application may be publishing data in one region or market and you would like to process it for consumption in other regions or markets. Geo-replication in Pulsar enables you to do that.","sidebar":"docsSidebar"},"concepts-schema-registry":{"id":"concepts-schema-registry","title":"Schema Registry","description":"Type safety is extremely important in any application built around a message bus like Pulsar. Producers and consumers need some kind of mechanism for coordinating types at the topic level lest a wide variety of potential problems arise (for example serialization and deserialization issues). Applications typically adopt one of two basic approaches to type safety in messaging:"},"concepts-tiered-storage":{"id":"concepts-tiered-storage","title":"Tiered Storage","description":"Pulsar\'s segment oriented architecture allows for topic backlogs to grow very large, effectively without limit. However, this can become expensive over time.","sidebar":"docsSidebar"},"concepts-topic-compaction":{"id":"concepts-topic-compaction","title":"Topic Compaction","description":"Pulsar was built with highly scalable persistent storage of message data as a primary objective. Pulsar topics enable you to persistently store as many unacknowledged messages as you need while preserving message ordering. By default, Pulsar stores all unacknowledged/unprocessed messages produced on a topic. Accumulating many unacknowledged messages on a topic is necessary for many Pulsar use cases but it can also be very time intensive for Pulsar consumers to \\"rewind\\" through the entire log of messages.","sidebar":"docsSidebar"},"cookbooks-bookkeepermetadata":{"id":"cookbooks-bookkeepermetadata","title":"BookKeeper Ledger Metadata","description":"Pulsar stores data on BookKeeper ledgers, you can understand the contents of a ledger by inspecting the metadata attached to the ledger.","sidebar":"docsSidebar"},"cookbooks-compaction":{"id":"cookbooks-compaction","title":"Topic compaction","description":"Pulsar\'s topic compaction feature enables you to create compacted topics in which older, \\"obscured\\" entries are pruned from the topic, allowing for faster reads through the topic\'s history (which messages are deemed obscured/outdated/irrelevant will depend on your use case).","sidebar":"docsSidebar"},"cookbooks-deduplication":{"id":"cookbooks-deduplication","title":"Message deduplication","description":"When Message deduplication is enabled, it ensures that each message produced on Pulsar topics is persisted to disk only once, even if the message is produced more than once. Message deduplication is handled automatically on the server side.","sidebar":"docsSidebar"},"cookbooks-encryption":{"id":"cookbooks-encryption","title":"Pulsar Encryption","description":"Pulsar encryption allows applications to encrypt messages at the producer and decrypt at the consumer. Encryption is performed using the public/private key pair configured by the application. Encrypted messages can only be decrypted by consumers with a valid key.","sidebar":"docsSidebar"},"cookbooks-message-queue":{"id":"cookbooks-message-queue","title":"Using Pulsar as a message queue","description":"Message queues are essential components of many large-scale data architectures. If every single work object that passes through your system absolutely must be processed in spite of the slowness or downright failure of this or that system component, there\'s a good chance that you\'ll need a message queue to step in and ensure that unprocessed data is retained---with correct ordering---until the required actions are taken.","sidebar":"docsSidebar"},"cookbooks-non-persistent":{"id":"cookbooks-non-persistent","title":"Non-persistent messaging","description":"Non-persistent topics are Pulsar topics in which message data is never persistently stored and kept only in memory. This cookbook provides:","sidebar":"docsSidebar"},"cookbooks-partitioned":{"id":"cookbooks-partitioned","title":"Partitioned topics","description":"By default, Pulsar topics are served by a single broker. Using only a single broker limits a topic\'s maximum throughput. Partitioned topics are a special type of topic that can span multiple brokers and thus allow for much higher throughput. For an explanation of how partitioned topics work, see the Partitioned Topics concepts.","sidebar":"docsSidebar"},"cookbooks-retention-expiry":{"id":"cookbooks-retention-expiry","title":"Message retention and expiry","description":"Pulsar brokers are responsible for handling messages that pass through Pulsar, including persistent storage of messages. By default, for each topic, brokers only retain messages that are in at least one backlog. A backlog is the set of unacknowledged messages for a particular subscription. As a topic can have multiple subscriptions, a topic can have multiple backlogs.","sidebar":"docsSidebar"},"cookbooks-tiered-storage":{"id":"cookbooks-tiered-storage","title":"Tiered Storage","description":"Pulsar\'s Tiered Storage feature allows older backlog data to be offloaded to long term storage, thereby freeing up space in BookKeeper and reducing storage costs. This cookbook walks you through using tiered storage in your Pulsar cluster.","sidebar":"docsSidebar"},"deploy-aws":{"id":"deploy-aws","title":"Deploying a Pulsar cluster on AWS using Terraform and Ansible","description":"For instructions on deploying a single Pulsar cluster manually rather than using Terraform and Ansible, see Deploying a Pulsar cluster on bare metal. For instructions on manually deploying a multi-cluster Pulsar instance, see Deploying a Pulsar instance on bare metal.","sidebar":"docsSidebar"},"deploy-bare-metal":{"id":"deploy-bare-metal","title":"Deploy a cluster on bare metal","description":"1. Single-cluster Pulsar installations should be sufficient for all but the most ambitious use cases. If you are interested in experimenting with","sidebar":"docsSidebar"},"deploy-bare-metal-multi-cluster":{"id":"deploy-bare-metal-multi-cluster","title":"Deploying a multi-cluster on bare metal","description":"1. Single-cluster Pulsar installations should be sufficient for all but the most ambitious use cases. If you are interested in experimenting with","sidebar":"docsSidebar"},"deploy-kubernetes":{"id":"deploy-kubernetes","title":"Deploy Pulsar on Kubernetes","description":"To get up and running with these charts as fast as possible, in a non-production use case, we provide","sidebar":"docsSidebar"},"deploy-monitoring":{"id":"deploy-monitoring","title":"Monitoring","description":"You can use different ways to monitor a Pulsar cluster, exposing both metrics that relate to the usage of topics and the overall health of the individual components of the cluster.","sidebar":"docsSidebar"},"develop-cpp":{"id":"develop-cpp","title":"Building Pulsar C++ client","description":"Supported platforms","sidebar":"docsSidebar"},"develop-load-manager":{"id":"develop-load-manager","title":"Modular load manager","description":"The modular load manager, implemented in  ModularLoadManagerImpl, is a flexible alternative to the previously implemented load manager, SimpleLoadManagerImpl, which attempts to simplify how load is managed while also providing abstractions so that complex load management strategies may be implemented.","sidebar":"docsSidebar"},"develop-schema":{"id":"develop-schema","title":"Custom schema storage","description":"By default, Pulsar stores data type schemas in Apache BookKeeper (which is deployed alongside Pulsar). You can, however, use another storage system if you wish. This doc walks you through creating your own schema storage implementation.","sidebar":"docsSidebar"},"develop-tools":{"id":"develop-tools","title":"Simulation tools","description":"It is sometimes necessary create an test environment and incur artificial load to observe how well load managers","sidebar":"docsSidebar"},"developing-binary-protocol":{"id":"developing-binary-protocol","title":"Pulsar binary protocol specification","description":"Pulsar uses a custom binary protocol for communications between producers/consumers and brokers. This protocol is designed to support required features, such as acknowledgements and flow control, while ensuring maximum transport and implementation efficiency.","sidebar":"docsSidebar"},"functions-cli":{"id":"functions-cli","title":"Pulsar Functions command line tool","description":"The following tables list Pulsar Functions command-line tools. You can learn Pulsar Functions modes, commands, and parameters.","sidebar":"docsSidebar"},"functions-debug":{"id":"functions-debug","title":"Debug Pulsar Functions","description":"You can use the following methods to debug Pulsar Functions:","sidebar":"docsSidebar"},"functions-deploy":{"id":"functions-deploy","title":"Deploy Pulsar Functions","description":"Requirements","sidebar":"docsSidebar"},"functions-develop":{"id":"functions-develop","title":"Develop Pulsar Functions","description":"This tutorial walks you through how to develop Pulsar Functions.","sidebar":"docsSidebar"},"functions-overview":{"id":"functions-overview","title":"Pulsar Functions overview","description":"Pulsar Functions are lightweight compute processes that","sidebar":"docsSidebar"},"functions-runtime":{"id":"functions-runtime","title":"Configure Functions runtime","description":"Pulsar Functions support the following methods to run functions.","sidebar":"docsSidebar"},"functions-worker":{"id":"functions-worker","title":"Deploy and manage functions worker","description":"Before using Pulsar Functions, you need to learn how to set up Pulsar Functions worker and how to configure Functions runtime.","sidebar":"docsSidebar"},"getting-started-docker":{"id":"getting-started-docker","title":"Set up a standalone Pulsar in Docker","description":"For local development and testing, you can run Pulsar in standalone","sidebar":"docsSidebar"},"getting-started-helm":{"id":"getting-started-helm","title":"Get started in Kubernetes","description":"This section guides you through every step of installing and running Apache Pulsar with Helm on Kubernetes quickly, including the following sections:","sidebar":"docsSidebar"},"getting-started-standalone":{"id":"getting-started-standalone","title":"Set up a standalone Pulsar locally","description":"For local development and testing, you can run Pulsar in standalone mode on your machine. The standalone mode includes a Pulsar broker, the necessary ZooKeeper and BookKeeper components running inside of a single Java Virtual Machine (JVM) process.","sidebar":"docsSidebar"},"helm-deploy":{"id":"helm-deploy","title":"Deploy Pulsar cluster using Helm","description":"Before running helm install, you need to decide how to run Pulsar.","sidebar":"docsSidebar"},"helm-install":{"id":"helm-install","title":"Install Apache Pulsar using Helm","description":"Install Apache Pulsar on Kubernetes with the official Pulsar Helm chart.","sidebar":"docsSidebar"},"helm-overview":{"id":"helm-overview","title":"Apache Pulsar Helm Chart","description":"This is the official supported Helm chart to install Apache Pulsar on a cloud-native environment. It was enhanced based on StreamNative\'s Helm Chart.","sidebar":"docsSidebar"},"helm-prepare":{"id":"helm-prepare","title":"Prepare Kubernetes resources","description":"For a fully functional Pulsar cluster, you need a few resources before deploying the Apache Pulsar Helm chart. The following provides instructions to prepare the Kubernetes cluster before deploying the Pulsar Helm chart.","sidebar":"docsSidebar"},"helm-tools":{"id":"helm-tools","title":"Required tools for deploying Pulsar Helm Chart","description":"Before deploying Pulsar to your Kubernetes cluster, there are some tools you must have installed locally.","sidebar":"docsSidebar"},"helm-upgrade":{"id":"helm-upgrade","title":"Upgrade Pulsar Helm release","description":"Before upgrading your Pulsar installation, you need to check the change log corresponding to the specific release you want to upgrade to and look for any release notes that might pertain to the new Pulsar helm chart version.","sidebar":"docsSidebar"},"io-aerospike-sink":{"id":"io-aerospike-sink","title":"Aerospike sink connector","description":"The Aerospike sink connector pulls messages from Pulsar topics to Aerospike clusters."},"io-canal-source":{"id":"io-canal-source","title":"Canal source connector","description":"The Canal source connector pulls messages from MySQL to Pulsar topics."},"io-cassandra-sink":{"id":"io-cassandra-sink","title":"Cassandra sink connector","description":"The Cassandra sink connector pulls messages from Pulsar topics to Cassandra clusters."},"io-cdc":{"id":"io-cdc","title":"CDC connector","description":"CDC source connectors capture log changes of databases (such as MySQL, MongoDB, and PostgreSQL) into Pulsar.","sidebar":"docsSidebar"},"io-cdc-debezium":{"id":"io-cdc-debezium","title":"Debezium source connector","description":"The Debezium source connector pulls messages from MySQL or PostgreSQL"},"io-cli":{"id":"io-cli","title":"Connector Admin CLI","description":"The pulsar-admin tool helps you manage Pulsar connectors.","sidebar":"docsSidebar"},"io-connectors":{"id":"io-connectors","title":"Built-in connector","description":"Pulsar distribution includes a set of common connectors that have been packaged and tested with the rest of Apache Pulsar. These connectors import and export data from some of the most commonly used data systems.","sidebar":"docsSidebar"},"io-debezium-source":{"id":"io-debezium-source","title":"Debezium source connector","description":"The Debezium source connector pulls messages from MySQL or PostgreSQL"},"io-debug":{"id":"io-debug","title":"How to debug Pulsar connectors","description":"This guide explains how to debug connectors in localrun or cluster mode and gives a debugging checklist.","sidebar":"docsSidebar"},"io-develop":{"id":"io-develop","title":"How to develop Pulsar connectors","description":"This guide describes how to develop Pulsar connectors to move data","sidebar":"docsSidebar"},"io-dynamodb-source":{"id":"io-dynamodb-source","title":"AWS DynamoDB source connector","description":"The DynamoDB source connector pulls data from DynamoDB table streams and persists data into Pulsar."},"io-elasticsearch-sink":{"id":"io-elasticsearch-sink","title":"ElasticSearch sink connector","description":"The ElasticSearch sink connector pulls messages from Pulsar topics and persists the messages to indexes."},"io-file-source":{"id":"io-file-source","title":"File source connector","description":"The File source connector pulls messages from files in directories and persists the messages to Pulsar topics."},"io-flume-sink":{"id":"io-flume-sink","title":"Flume sink connector","description":"The Flume sink connector pulls messages from Pulsar topics to logs."},"io-flume-source":{"id":"io-flume-source","title":"Flume source connector","description":"The Flume source connector pulls messages from logs to Pulsar topics."},"io-hbase-sink":{"id":"io-hbase-sink","title":"HBase sink connector","description":"The HBase sink connector pulls the messages from Pulsar topics"},"io-hdfs2-sink":{"id":"io-hdfs2-sink","title":"HDFS2 sink connector","description":"The HDFS2 sink connector pulls the messages from Pulsar topics"},"io-hdfs3-sink":{"id":"io-hdfs3-sink","title":"HDFS3 sink connector","description":"The HDFS3 sink connector pulls the messages from Pulsar topics"},"io-influxdb-sink":{"id":"io-influxdb-sink","title":"InfluxDB sink connector","description":"The InfluxDB sink connector pulls messages from Pulsar topics"},"io-jdbc-sink":{"id":"io-jdbc-sink","title":"JDBC sink connector","description":"The JDBC sink connectors allow pulling messages from Pulsar topics"},"io-kafka-sink":{"id":"io-kafka-sink","title":"Kafka sink connector","description":"The Kafka sink connector pulls messages from Pulsar topics and persists the messages"},"io-kafka-source":{"id":"io-kafka-source","title":"Kafka source connector","description":"The Kafka source connector pulls messages from Kafka topics and persists the messages"},"io-kinesis-sink":{"id":"io-kinesis-sink","title":"Kinesis sink connector","description":"The Kinesis sink connector pulls data from Pulsar and persists data into Amazon Kinesis."},"io-kinesis-source":{"id":"io-kinesis-source","title":"Kinesis source connector","description":"The Kinesis source connector pulls data from Amazon Kinesis and persists data into Pulsar."},"io-mongo-sink":{"id":"io-mongo-sink","title":"MongoDB sink connector","description":"The MongoDB sink connector pulls messages from Pulsar topics"},"io-netty-source":{"id":"io-netty-source","title":"Netty source connector","description":"The Netty source connector opens a port that accepts incoming data via the configured network protocol"},"io-overview":{"id":"io-overview","title":"Pulsar connector overview","description":"Messaging systems are most powerful when you can easily use them with external systems like databases and other messaging systems.","sidebar":"docsSidebar"},"io-quickstart":{"id":"io-quickstart","title":"How to connect Pulsar to database","description":"This tutorial provides a hands-on look at how you can move data out of Pulsar without writing a single line of code.","sidebar":"docsSidebar"},"io-rabbitmq-sink":{"id":"io-rabbitmq-sink","title":"RabbitMQ sink connector","description":"The RabbitMQ sink connector pulls messages from Pulsar topics"},"io-rabbitmq-source":{"id":"io-rabbitmq-source","title":"RabbitMQ source connector","description":"The RabbitMQ source connector receives messages from RabbitMQ clusters"},"io-redis-sink":{"id":"io-redis-sink","title":"Redis sink connector","description":"The  Redis sink connector pulls messages from Pulsar topics"},"io-solr-sink":{"id":"io-solr-sink","title":"Solr sink connector","description":"The Solr sink connector pulls messages from Pulsar topics"},"io-twitter-source":{"id":"io-twitter-source","title":"Twitter Firehose source connector","description":"The Twitter Firehose source connector receives tweets from Twitter Firehose and"},"io-use":{"id":"io-use","title":"How to use Pulsar connectors","description":"This guide describes how to use Pulsar connectors.","sidebar":"docsSidebar"},"kubernetes-helm":{"id":"kubernetes-helm","title":"Get started in Kubernetes","description":"This section guides you through every step of installing and running Apache Pulsar with Helm on Kubernetes quickly, including the following sections:"},"performance-pulsar-perf":{"id":"performance-pulsar-perf","title":"Pulsar Perf","description":"This document describes how to use the Pulsar Perf for performance testing. For detailed information about performance tuning, see here.","sidebar":"docsSidebar"},"pulsar-2.0":{"id":"pulsar-2.0","title":"Pulsar 2.0","description":"Pulsar 2.0 is a major new release for Pulsar that brings some bold changes to the platform, including simplified topic names, the addition of the Pulsar Functions feature, some terminology changes, and more.","sidebar":"docsSidebar"},"reference-cli-tools":{"id":"reference-cli-tools","title":"Pulsar command-line tools","description":"Pulsar offers several command-line tools that you can use for managing Pulsar installations, performance testing, using command-line producers and consumers, and more.","sidebar":"docsSidebar"},"reference-configuration":{"id":"reference-configuration","title":"Pulsar configuration","description":"Pulsar configuration can be managed via a series of configuration files contained in the conf directory of a Pulsar installation","sidebar":"docsSidebar"},"reference-connector-admin":{"id":"reference-connector-admin","title":"Connector Admin CLI","description":"Important"},"reference-metrics":{"id":"reference-metrics","title":"Pulsar Metrics","description":"Pulsar exposes metrics in Prometheus format that can be collected and used for monitoring the health of the cluster.","sidebar":"docsSidebar"},"reference-pulsar-admin":{"id":"reference-pulsar-admin","title":"Pulsar admin CLI","description":"Important"},"reference-rest-api-overview":{"id":"reference-rest-api-overview","title":"Pulsar REST APIs","description":"A REST API (also known as RESTful API, REpresentational State Transfer Application Programming Interface) is a set of definitions and protocols for building and integrating application software, using HTTP requests to GET, PUT, POST, and DELETE data following the REST standards. In essence, REST API is a set of remote calls using standard methods to request and return data in a specific format between two systems.","sidebar":"docsSidebar"},"reference-terminology":{"id":"reference-terminology","title":"Pulsar Terminology","description":"Here is a glossary of terms related to Apache Pulsar:","sidebar":"docsSidebar"},"schema-evolution-compatibility":{"id":"schema-evolution-compatibility","title":"Schema evolution and compatibility","description":"Normally, schemas do not stay the same over a long period of time. Instead, they undergo evolutions to satisfy new needs.","sidebar":"docsSidebar"},"schema-get-started":{"id":"schema-get-started","title":"Get started","description":"This chapter introduces Pulsar schemas and explains why they are important.","sidebar":"docsSidebar"},"schema-manage":{"id":"schema-manage","title":"Manage schema","description":"This guide demonstrates the ways to manage schemas:","sidebar":"docsSidebar"},"schema-understand":{"id":"schema-understand","title":"Understand schema","description":"This chapter explains the basic concepts of Pulsar schema, focuses on the topics of particular importance, and provides additional background.","sidebar":"docsSidebar"},"security-athenz":{"id":"security-athenz","title":"Authentication using Athenz","description":"Athenz is a role-based authentication/authorization system. In Pulsar, you can use Athenz role tokens (also known as z-tokens) to establish the identify of the client.","sidebar":"docsSidebar"},"security-authorization":{"id":"security-authorization","title":"Authentication and authorization in Pulsar","description":"In Pulsar, the authentication provider is responsible for properly identifying clients and associating the clients with role tokens. If you only enable authentication, an authenticated role token has the ability to access all resources in the cluster. Authorization is the process that determines what clients are able to do.","sidebar":"docsSidebar"},"security-bouncy-castle":{"id":"security-bouncy-castle","title":"Bouncy Castle Providers","description":"BouncyCastle Introduce","sidebar":"docsSidebar"},"security-encryption":{"id":"security-encryption","title":"Pulsar Encryption","description":"Applications can use Pulsar encryption to encrypt messages at the producer side and decrypt messages at the consumer side. You can use the public and private key pair that the application configures to perform encryption. Only the consumers with a valid key can decrypt the encrypted messages.","sidebar":"docsSidebar"},"security-extending":{"id":"security-extending","title":"Extending Authentication and Authorization in Pulsar","description":"Pulsar provides a way to use custom authentication and authorization mechanisms.","sidebar":"docsSidebar"},"security-jwt":{"id":"security-jwt","title":"Client authentication using tokens based on JSON Web Tokens","description":"Token authentication overview","sidebar":"docsSidebar"},"security-kerberos":{"id":"security-kerberos","title":"Authentication using Kerberos","description":"Kerberos is a network authentication protocol. By using secret-key cryptography, Kerberos is designed to provide strong authentication for client applications and server applications.","sidebar":"docsSidebar"},"security-oauth2":{"id":"security-oauth2","title":"Client authentication using OAuth 2.0 access tokens","description":"Pulsar supports authenticating clients using OAuth 2.0 access tokens. You can use OAuth 2.0 access tokens to identify a Pulsar client and associate the Pulsar client with some \\"principal\\" (or \\"role\\"), which is permitted to do some actions, such as publishing messages to a topic or consume messages from a topic.","sidebar":"docsSidebar"},"security-overview":{"id":"security-overview","title":"Pulsar security overview","description":"As the central message bus for a business, Apache Pulsar is frequently used for storing mission-critical data. Therefore, enabling security features in Pulsar is crucial.","sidebar":"docsSidebar"},"security-tls-authentication":{"id":"security-tls-authentication","title":"Authentication using TLS","description":"TLS authentication overview","sidebar":"docsSidebar"},"security-tls-keystore":{"id":"security-tls-keystore","title":"Using TLS with KeyStore configure","description":"Overview","sidebar":"docsSidebar"},"security-tls-transport":{"id":"security-tls-transport","title":"Transport Encryption using TLS","description":"TLS overview","sidebar":"docsSidebar"},"security-token-admin":{"id":"security-token-admin","title":"Token authentication admin","description":"Token Authentication Overview"},"sql-deployment-configurations":{"id":"sql-deployment-configurations","title":"Pulsar SQL configuration and deployment","description":"You can configure Presto Pulsar connector and deploy a cluster with the following instruction.","sidebar":"docsSidebar"},"sql-getting-started":{"id":"sql-getting-started","title":"Query data with Pulsar SQL","description":"Before querying data in Pulsar, you need to install Pulsar and built-in connectors.","sidebar":"docsSidebar"},"sql-overview":{"id":"sql-overview","title":"Pulsar SQL Overview","description":"Apache Pulsar is used to store streams of event data, and the event data is structured with predefined fields. With the implementation of the Schema Registry, you can store structured data in Pulsar and query the data by using Presto.","sidebar":"docsSidebar"},"sql-rest-api":{"id":"sql-rest-api","title":"Pulsar SQL REST APIs","description":"This section lists resources that make up the Presto REST API v1.","sidebar":"docsSidebar"},"standalone":{"id":"standalone","title":"Set up a standalone Pulsar locally","description":"For local development and testing, you can run Pulsar in standalone mode on your machine. The standalone mode includes a Pulsar broker, the necessary ZooKeeper and BookKeeper components running inside of a single Java Virtual Machine (JVM) process."},"standalone-docker":{"id":"standalone-docker","title":"Set up a standalone Pulsar in Docker","description":"For local development and testing, you can run Pulsar in standalone mode on your own machine within a Docker container."},"tiered-storage-azure":{"id":"tiered-storage-azure","title":"Use Azure BlobStore offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the Azure BlobStore offloader and using it with Pulsar."},"window-functions-context":{"id":"window-functions-context","title":"Window Functions Context","description":"Java SDK provides access to a window context object that can be used by a window function. This context object provides a wide variety of information and functionality for Pulsar window functions as below.","sidebar":"docsSidebar"}}}}')}}]);
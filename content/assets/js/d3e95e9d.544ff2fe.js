"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[83431],{27237:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>o,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"client-libraries-cpp","title":"Pulsar C++ client","description":"Supported platforms","source":"@site/versioned_docs/version-2.5.0/client-libraries-cpp.md","sourceDirName":".","slug":"/client-libraries-cpp","permalink":"/docs/2.5.0/client-libraries-cpp","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.5.0/client-libraries-cpp.md","tags":[],"version":"2.5.0","frontMatter":{"id":"client-libraries-cpp","title":"Pulsar C++ client","sidebar_label":"C++","original_id":"client-libraries-cpp"},"sidebar":"docsSidebar","previous":{"title":"Python","permalink":"/docs/2.5.0/client-libraries-python"},"next":{"title":"Node.js","permalink":"/docs/2.5.0/client-libraries-node"}}');var l=s(74848),a=s(28453);const c={id:"client-libraries-cpp",title:"Pulsar C++ client",sidebar_label:"C++",original_id:"client-libraries-cpp"},i=void 0,t={},d=[{value:"Supported platforms",id:"supported-platforms",level:2},{value:"Linux",id:"linux",level:2},{value:"Install RPM",id:"install-rpm",level:3},{value:"Install Debian",id:"install-debian",level:3},{value:"Build",id:"build",level:3},{value:"RPM",id:"rpm",level:4},{value:"Debian",id:"debian",level:4},{value:"MacOS",id:"macos",level:2},{value:"Connection URLs",id:"connection-urls",level:2},{value:"Create a consumer",id:"create-a-consumer",level:2},{value:"Create a producer",id:"create-a-producer",level:2},{value:"Enable authentication in connection URLs",id:"enable-authentication-in-connection-urls",level:2},{value:"Schema",id:"schema",level:2},{value:"Create producer with Avro schema",id:"create-producer-with-avro-schema",level:3},{value:"Create consumer with Avro schema",id:"create-consumer-with-avro-schema",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"supported-platforms",children:"Supported platforms"}),"\n",(0,l.jsxs)(n.p,{children:["Pulsar C++ client is supported on ",(0,l.jsx)(n.strong,{children:"Linux"})," and ",(0,l.jsx)(n.strong,{children:"MacOS"})," platforms."]}),"\n",(0,l.jsx)(n.h2,{id:"linux",children:"Linux"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"Since 2.1.0 release, Pulsar ships pre-built RPM and Debian packages. You can download and install those packages directly."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"install-rpm",children:"Install RPM"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Download a RPM package from the links in the table."}),"\n"]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Link"}),(0,l.jsx)(n.th,{children:"Crypto files"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-2.5.0-1.x86_64.rpm",children:"client"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-2.5.0-1.x86_64.rpm.asc",children:"asc"}),", ",(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-2.5.0-1.x86_64.rpm.sha512",children:"sha512"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-debuginfo-2.5.0-1.x86_64.rpm",children:"client-debuginfo"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-debuginfo-2.5.0-1.x86_64.rpm.asc",children:"asc"}),",  ",(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-debuginfo-2.5.0-1.x86_64.rpm.sha512",children:"sha512"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-devel-2.5.0-1.x86_64.rpm",children:"client-devel"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-devel-2.5.0-1.x86_64.rpm.asc",children:"asc"}),",  ",(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/RPMS/apache-pulsar-client-devel-2.5.0-1.x86_64.rpm.sha512",children:"sha512"})]})]})]})]}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Install the package using the following command."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\n$ rpm -ivh apache-pulsar-client*.rpm\n\n"})}),"\n",(0,l.jsx)(n.h3,{id:"install-debian",children:"Install Debian"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Download a Debian package from the links in the table."}),"\n"]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Link"}),(0,l.jsx)(n.th,{children:"Crypto files"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/DEB/apache-pulsar-client.deb",children:"client"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/DEB/apache-pulsar-client.deb.asc",children:"asc"}),", ",(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/DEB/apache-pulsar-client.deb.sha512",children:"sha512"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/DEB/apache-pulsar-client-dev.deb",children:"client-devel"})}),(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/DEB/apache-pulsar-client-dev.deb.asc",children:"asc"}),",  ",(0,l.jsx)(n.a,{href:"https://archive.apache.org/dist/pulsar/pulsar-2.5.0/DEB/apache-pulsar-client-dev.deb.sha512",children:"sha512"})]})]})]})]}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsx)(n.li,{children:"Install the package using the following command:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"\n$ apt install ./apache-pulsar-client*.deb\n\n"})}),"\n",(0,l.jsx)(n.h3,{id:"build",children:"Build"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"If you want to build RPM and Debian packages from the latest master, follow the instructions below. All the instructions are run at the root directory of your cloned Pulsar repository."}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["There are recipes that build RPM and Debian packages containing a\nstatically linked ",(0,l.jsx)(n.code,{children:"libpulsar.so"})," / ",(0,l.jsx)(n.code,{children:"libpulsar.a"})," with all the required\ndependencies."]}),"\n",(0,l.jsx)(n.p,{children:"To build the C++ library packages, build the Java packages first."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"\nmvn install -DskipTests\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"rpm",children:"RPM"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"\npulsar-client-cpp/pkg/rpm/docker-build-rpm.sh\n\n"})}),"\n",(0,l.jsxs)(n.p,{children:["This builds the RPM inside a Docker container and it leaves the RPMs in ",(0,l.jsx)(n.code,{children:"pulsar-client-cpp/pkg/rpm/RPMS/x86_64/"}),"."]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Package name"}),(0,l.jsx)(n.th,{children:"Content"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"pulsar-client"}),(0,l.jsxs)(n.td,{children:["Shared library ",(0,l.jsx)(n.code,{children:"libpulsar.so"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"pulsar-client-devel"}),(0,l.jsxs)(n.td,{children:["Static library ",(0,l.jsx)(n.code,{children:"libpulsar.a"})," and C++ and C headers"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"pulsar-client-debuginfo"}),(0,l.jsxs)(n.td,{children:["Debug symbols for ",(0,l.jsx)(n.code,{children:"libpulsar.so"})]})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"debian",children:"Debian"}),"\n",(0,l.jsx)(n.p,{children:"To build Debian packages, enter the following command."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"\npulsar-client-cpp/pkg/deb/docker-build-deb.sh\n\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Debian packages are created at ",(0,l.jsx)(n.code,{children:"pulsar-client-cpp/pkg/deb/BUILD/DEB/"}),"."]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Package name"}),(0,l.jsx)(n.th,{children:"Content"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"pulsar-client"}),(0,l.jsxs)(n.td,{children:["Shared library ",(0,l.jsx)(n.code,{children:"libpulsar.so"})]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"pulsar-client-dev"}),(0,l.jsxs)(n.td,{children:["Static library ",(0,l.jsx)(n.code,{children:"libpulsar.a"})," and C++ and C headers"]})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"macos",children:"MacOS"}),"\n",(0,l.jsxs)(n.p,{children:["Pulsar releases are available in the ",(0,l.jsx)(n.a,{href:"https://brew.sh/",children:"Homebrew"})," core repository. You can install the C++ client library with the following command. The package is installed with the library and headers."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"\nbrew install libpulsar\n\n"})}),"\n",(0,l.jsx)(n.h2,{id:"connection-urls",children:"Connection URLs"}),"\n",(0,l.jsx)(n.p,{children:"To connect to Pulsar using client libraries, you need to specify a Pulsar protocol URL."}),"\n",(0,l.jsxs)(n.p,{children:["Pulsar protocol URLs are assigned to specific clusters, you can use the Pulsar URI scheme. The default port is ",(0,l.jsx)(n.code,{children:"6650"}),". The following is an example for localhost."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-http",children:"\npulsar://localhost:6650\n\n"})}),"\n",(0,l.jsx)(n.p,{children:"In a Pulsar cluster in production, the URL looks as follows:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-http",children:"\npulsar://pulsar.us-west.example.com:6650\n\n"})}),"\n",(0,l.jsxs)(n.p,{children:["If you use TLS authentication, you need to add ",(0,l.jsx)(n.code,{children:"ssl"}),", and the default port is ",(0,l.jsx)(n.code,{children:"6651"}),". The following is an example."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-http",children:"\npulsar+ssl://pulsar.us-west.example.com:6651\n\n"})}),"\n",(0,l.jsx)(n.h2,{id:"create-a-consumer",children:"Create a consumer"}),"\n",(0,l.jsx)(n.p,{children:"To connect to Pulsar as a consumer, you need to create a consumer on the C++ client. The following is an example."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c++",children:'\nClient client("pulsar://localhost:6650");\n\nConsumer consumer;\nResult result = client.subscribe("my-topic", "my-subscription-name", consumer);\nif (result != ResultOk) {\n    LOG_ERROR("Failed to subscribe: " << result);\n    return -1;\n}\n\nMessage msg;\n\nwhile (true) {\n    consumer.receive(msg);\n    LOG_INFO("Received: " << msg\n            << "  with payload \'" << msg.getDataAsString() << "\'");\n\n    consumer.acknowledge(msg);\n}\n\nclient.close();\n\n'})}),"\n",(0,l.jsx)(n.h2,{id:"create-a-producer",children:"Create a producer"}),"\n",(0,l.jsx)(n.p,{children:"To connect to Pulsar as a producer, you need to create a producer on the C++ client. The following is an example."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-c++",children:'\nClient client("pulsar://localhost:6650");\n\nProducer producer;\nResult result = client.createProducer("my-topic", producer);\nif (result != ResultOk) {\n    LOG_ERROR("Error creating producer: " << result);\n    return -1;\n}\n\n// Publish 10 messages to the topic\nfor (int i = 0; i < 10; i++){\n    Message msg = MessageBuilder().setContent("my-message").build();\n    Result res = producer.send(msg);\n    LOG_INFO("Message sent: " << res);\n}\nclient.close();\n\n'})}),"\n",(0,l.jsx)(n.h2,{id:"enable-authentication-in-connection-urls",children:"Enable authentication in connection URLs"}),"\n",(0,l.jsxs)(n.p,{children:["If you use TLS authentication when connecting to Pulsar, you need to add ",(0,l.jsx)(n.code,{children:"ssl"})," in the connection URLs, and the default port is ",(0,l.jsx)(n.code,{children:"6651"}),". The following is an example."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:'\nClientConfiguration config = ClientConfiguration();\nconfig.setUseTls(true);\nconfig.setTlsTrustCertsFilePath("/path/to/cacert.pem");\nconfig.setTlsAllowInsecureConnection(false);\nconfig.setAuth(pulsar::AuthTls::create(\n            "/path/to/client-cert.pem", "/path/to/client-key.pem"););\n\nClient client("pulsar+ssl://my-broker.com:6651", config);\n\n'})}),"\n",(0,l.jsxs)(n.p,{children:["For complete examples, refer to ",(0,l.jsx)(n.a,{href:"https://github.com/apache/pulsar-client-cpp/tree/main/examples",children:"C++ client examples"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"schema",children:"Schema"}),"\n",(0,l.jsxs)(n.p,{children:["This section describes some examples about schema. For more information about schema, see ",(0,l.jsx)(n.a,{href:"/docs/2.5.0/schema-get-started",children:"Pulsar schema"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"create-producer-with-avro-schema",children:"Create producer with Avro schema"}),"\n",(0,l.jsx)(n.p,{children:"The following example shows how to create a producer with an Avro schema."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:'\nstatic const std::string exampleSchema =\n    "{\\"type\\":\\"record\\",\\"name\\":\\"Example\\",\\"namespace\\":\\"test\\","\n    "\\"fields\\":[{\\"name\\":\\"a\\",\\"type\\":\\"int\\"},{\\"name\\":\\"b\\",\\"type\\":\\"int\\"}]}";\nProducer producer;\nProducerConfiguration producerConf;\nproducerConf.setSchema(SchemaInfo(AVRO, "Avro", exampleSchema));\nclient.createProducer("topic-avro", producerConf, producer);\n\n'})}),"\n",(0,l.jsx)(n.h3,{id:"create-consumer-with-avro-schema",children:"Create consumer with Avro schema"}),"\n",(0,l.jsx)(n.p,{children:"The following example shows how to create a consumer with an Avro schema."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:'\nstatic const std::string exampleSchema =\n    "{\\"type\\":\\"record\\",\\"name\\":\\"Example\\",\\"namespace\\":\\"test\\","\n    "\\"fields\\":[{\\"name\\":\\"a\\",\\"type\\":\\"int\\"},{\\"name\\":\\"b\\",\\"type\\":\\"int\\"}]}";\nConsumerConfiguration consumerConf;\nConsumer consumer;\nconsumerConf.setSchema(SchemaInfo(AVRO, "Avro", exampleSchema));\nclient.subscribe("topic-avro", "sub-2", consumerConf, consumer)\n\n'})})]})}function o(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var r=s(96540);const l={},a=r.createContext(l);function c(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);
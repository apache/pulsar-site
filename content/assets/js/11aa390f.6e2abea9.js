"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[13249],{52943:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"3.1.x","label":"3.1.x","banner":null,"badge":false,"noIndex":false,"className":"docs-version-3.1.x","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"About","href":"/docs/3.1.x/","docId":"about","unlisted":false},{"type":"category","label":"Get Started","items":[{"type":"link","label":"Run Pulsar locally","href":"/docs/3.1.x/getting-started-standalone","docId":"getting-started-standalone","unlisted":false},{"type":"link","label":"Run Pulsar in Docker","href":"/docs/3.1.x/getting-started-docker","docId":"getting-started-docker","unlisted":false},{"type":"link","label":"Run Pulsar in Kubernetes","href":"/docs/3.1.x/getting-started-helm","docId":"getting-started-helm","unlisted":false},{"type":"link","label":"Run Pulsar locally with Docker Compose","href":"/docs/3.1.x/getting-started-docker-compose","docId":"getting-started-docker-compose","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/getting-started-home"},{"type":"category","label":"Concepts and Architecture","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/concepts-overview","docId":"concepts-overview","unlisted":false},{"type":"link","label":"Messaging","href":"/docs/3.1.x/concepts-messaging","docId":"concepts-messaging","unlisted":false},{"type":"link","label":"Architecture","href":"/docs/3.1.x/concepts-architecture-overview","docId":"concepts-architecture-overview","unlisted":false},{"type":"link","label":"Clients","href":"/docs/3.1.x/concepts-clients","docId":"concepts-clients","unlisted":false},{"type":"category","label":"Broker load balancing","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/concepts-broker-load-balancing-overview","docId":"concepts-broker-load-balancing-overview","unlisted":false},{"type":"link","label":"Use cases","href":"/docs/3.1.x/concepts-broker-load-balancing-use-cases","docId":"concepts-broker-load-balancing-use-cases","unlisted":false},{"type":"link","label":"Features","href":"/docs/3.1.x/concepts-broker-load-balancing-features","docId":"concepts-broker-load-balancing-features","unlisted":false},{"type":"link","label":"Benefits","href":"/docs/3.1.x/concepts-broker-load-balancing-benefits","docId":"concepts-broker-load-balancing-benefits","unlisted":false},{"type":"link","label":"Concepts","href":"/docs/3.1.x/concepts-broker-load-balancing-concepts","docId":"concepts-broker-load-balancing-concepts","unlisted":false},{"type":"link","label":"Types","href":"/docs/3.1.x/concepts-broker-load-balancing-types","docId":"concepts-broker-load-balancing-types","unlisted":false},{"type":"link","label":"Quick start","href":"/docs/3.1.x/concepts-broker-load-balancing-quick-start","docId":"concepts-broker-load-balancing-quick-start","unlisted":false},{"type":"link","label":"Migration","href":"/docs/3.1.x/concepts-broker-load-balancing-migration","docId":"concepts-broker-load-balancing-migration","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Geo Replication","href":"/docs/3.1.x/concepts-replication","docId":"concepts-replication","unlisted":false},{"type":"link","label":"Cluster-level failover","href":"/docs/3.1.x/concepts-cluster-level-failover","docId":"concepts-cluster-level-failover","unlisted":false},{"type":"link","label":"Multi Tenancy","href":"/docs/3.1.x/concepts-multi-tenancy","docId":"concepts-multi-tenancy","unlisted":false},{"type":"link","label":"Authentication and Authorization","href":"/docs/3.1.x/concepts-authentication","docId":"concepts-authentication","unlisted":false},{"type":"link","label":"Topic Compaction","href":"/docs/3.1.x/concepts-topic-compaction","docId":"concepts-topic-compaction","unlisted":false},{"type":"link","label":"Message throttling","href":"/docs/3.1.x/concepts-throttling","docId":"concepts-throttling","unlisted":false},{"type":"link","label":"Proxy support with SNI routing","href":"/docs/3.1.x/concepts-proxy-sni-routing","docId":"concepts-proxy-sni-routing","unlisted":false},{"type":"link","label":"Multiple advertised listeners","href":"/docs/3.1.x/concepts-multiple-advertised-listeners","docId":"concepts-multiple-advertised-listeners","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar Schema","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/schema-overview","docId":"schema-overview","unlisted":false},{"type":"link","label":"Understand schema","href":"/docs/3.1.x/schema-understand","docId":"schema-understand","unlisted":false},{"type":"link","label":"Get started","href":"/docs/3.1.x/schema-get-started","docId":"schema-get-started","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar Functions","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/functions-overview","docId":"functions-overview","unlisted":false},{"type":"link","label":"Concepts","href":"/docs/3.1.x/functions-concepts","docId":"functions-concepts","unlisted":false},{"type":"link","label":"Get started","href":"/docs/3.1.x/functions-quickstart","docId":"functions-quickstart","unlisted":false},{"type":"category","label":"Set up function workers","items":[{"type":"link","label":"Run function workers with brokers","href":"/docs/3.1.x/functions-worker-corun","docId":"functions-worker-corun","unlisted":false},{"type":"link","label":"Run function workers separately","href":"/docs/3.1.x/functions-worker-run-separately","docId":"functions-worker-run-separately","unlisted":false},{"type":"link","label":"Configure temporary file path","href":"/docs/3.1.x/functions-worker-temp-file-path","docId":"functions-worker-temp-file-path","unlisted":false},{"type":"link","label":"Enable stateful functions","href":"/docs/3.1.x/functions-worker-stateful","docId":"functions-worker-stateful","unlisted":false},{"type":"link","label":"Configure function workers for geo-replicated clusters","href":"/docs/3.1.x/functions-worker-for-geo-replication","docId":"functions-worker-for-geo-replication","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/docs/3.1.x/functions-worker-troubleshooting","docId":"functions-worker-troubleshooting","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/functions-worker"},{"type":"category","label":"Configure function runtime","items":[{"type":"link","label":"Configure thread runtime","href":"/docs/3.1.x/functions-runtime-thread","docId":"functions-runtime-thread","unlisted":false},{"type":"link","label":"Configure process runtime","href":"/docs/3.1.x/functions-runtime-process","docId":"functions-runtime-process","unlisted":false},{"type":"link","label":"Configure Kubernetes runtime","href":"/docs/3.1.x/functions-runtime-kubernetes","docId":"functions-runtime-kubernetes","unlisted":false},{"type":"link","label":"Customize Java runtime options","href":"/docs/3.1.x/functions-runtime-java-options","docId":"functions-runtime-java-options","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/functions-runtime"},{"type":"category","label":"How-to: Deploy","items":[{"type":"link","label":"Default arguments of CLI","href":"/docs/3.1.x/functions-deploy-arguments","docId":"functions-deploy-arguments","unlisted":false},{"type":"link","label":"Deploy a function in localrun mode","href":"/docs/3.1.x/functions-deploy-localrun","docId":"functions-deploy-localrun","unlisted":false},{"type":"category","label":"Deploy a function in cluster mode","items":[{"type":"link","label":"Allocate resources to function instance","href":"/docs/3.1.x/functions-deploy-cluster-resource","docId":"functions-deploy-cluster-resource","unlisted":false},{"type":"link","label":"Enable parallel processing","href":"/docs/3.1.x/functions-deploy-cluster-parallelism","docId":"functions-deploy-cluster-parallelism","unlisted":false},{"type":"link","label":"Enable end-to-end-encryption","href":"/docs/3.1.x/functions-deploy-cluster-encryption","docId":"functions-deploy-cluster-encryption","unlisted":false},{"type":"link","label":"Enable package management service","href":"/docs/3.1.x/functions-deploy-cluster-package","docId":"functions-deploy-cluster-package","unlisted":false},{"type":"link","label":"Use built-in functions","href":"/docs/3.1.x/functions-deploy-cluster-builtin","docId":"functions-deploy-cluster-builtin","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/functions-deploy-cluster"},{"type":"link","label":"Trigger a function","href":"/docs/3.1.x/functions-deploy-trigger","docId":"functions-deploy-trigger","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/functions-deploy"},{"type":"category","label":"How-to: Develop","items":[{"type":"link","label":"Use APIs","href":"/docs/3.1.x/functions-develop-api","docId":"functions-develop-api","unlisted":false},{"type":"link","label":"Pass user-defined configurations","href":"/docs/3.1.x/functions-develop-user-defined-configs","docId":"functions-develop-user-defined-configs","unlisted":false},{"type":"link","label":"Produce function logs","href":"/docs/3.1.x/functions-develop-log","docId":"functions-develop-log","unlisted":false},{"type":"link","label":"Use metrics to monitor functions","href":"/docs/3.1.x/functions-develop-metrics","docId":"functions-develop-metrics","unlisted":false},{"type":"link","label":"Enable security on functions","href":"/docs/3.1.x/functions-develop-security","docId":"functions-develop-security","unlisted":false},{"type":"link","label":"Configure state storage","href":"/docs/3.1.x/functions-develop-state","docId":"functions-develop-state","unlisted":false},{"type":"link","label":"Call Pulsar admin APIs","href":"/docs/3.1.x/functions-develop-admin-api","docId":"functions-develop-admin-api","unlisted":false},{"type":"link","label":"Use schema registry","href":"/docs/3.1.x/functions-develop-schema-registry","docId":"functions-develop-schema-registry","unlisted":false},{"type":"link","label":"Use SerDe","href":"/docs/3.1.x/functions-develop-serde","docId":"functions-develop-serde","unlisted":false},{"type":"link","label":"Tutorials","href":"/docs/3.1.x/functions-develop-tutorial","docId":"functions-develop-tutorial","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/functions-develop"},{"type":"category","label":"How-to: Debug","items":[{"type":"link","label":"Debug with captured stderr","href":"/docs/3.1.x/functions-debug-stderr","docId":"functions-debug-stderr","unlisted":false},{"type":"link","label":"Debug with unit test","href":"/docs/3.1.x/functions-debug-unit-test","docId":"functions-debug-unit-test","unlisted":false},{"type":"link","label":"Debug with localrun mode","href":"/docs/3.1.x/functions-debug-localrun","docId":"functions-debug-localrun","unlisted":false},{"type":"link","label":"Debug with log topic","href":"/docs/3.1.x/functions-debug-log-topic","docId":"functions-debug-log-topic","unlisted":false},{"type":"link","label":"Debug with Functions CLI","href":"/docs/3.1.x/functions-debug-cli","docId":"functions-debug-cli","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/functions-debug"},{"type":"category","label":"How-to: Package","items":[{"type":"link","label":"Package Java Functions","href":"/docs/3.1.x/functions-package-java","docId":"functions-package-java","unlisted":false},{"type":"link","label":"Package Python Functions","href":"/docs/3.1.x/functions-package-python","docId":"functions-package-python","unlisted":false},{"type":"link","label":"Package Go Functions","href":"/docs/3.1.x/functions-package-go","docId":"functions-package-go","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/functions-package"},{"type":"link","label":"CLI and YAML configs","href":"/docs/3.1.x/functions-cli","docId":"functions-cli","unlisted":false},{"type":"link","label":"Window Functions: Context","href":"/docs/3.1.x/window-functions-context","docId":"window-functions-context","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar IO","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/io-overview","docId":"io-overview","unlisted":false},{"type":"link","label":"Get started","href":"/docs/3.1.x/io-quickstart","docId":"io-quickstart","unlisted":false},{"type":"link","label":"Use","href":"/docs/3.1.x/io-use","docId":"io-use","unlisted":false},{"type":"link","label":"Debug","href":"/docs/3.1.x/io-debug","docId":"io-debug","unlisted":false},{"type":"link","label":"Built-in connector","href":"/docs/3.1.x/io-connectors","docId":"io-connectors","unlisted":false},{"type":"link","label":"CDC connector","href":"/docs/3.1.x/io-cdc","docId":"io-cdc","unlisted":false},{"type":"link","label":"Develop","href":"/docs/3.1.x/io-develop","docId":"io-develop","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar SQL","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/sql-overview","docId":"sql-overview","unlisted":false},{"type":"link","label":"Query data","href":"/docs/3.1.x/sql-getting-started","docId":"sql-getting-started","unlisted":false},{"type":"link","label":"Configuration and deployment","href":"/docs/3.1.x/sql-deployment-configurations","docId":"sql-deployment-configurations","unlisted":false},{"type":"link","label":"REST APIs","href":"/docs/3.1.x/sql-rest-api","docId":"sql-rest-api","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tiered Storage","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/tiered-storage-overview","docId":"tiered-storage-overview","unlisted":false},{"type":"link","label":"AWS S3 offloader","href":"/docs/3.1.x/tiered-storage-aws","docId":"tiered-storage-aws","unlisted":false},{"type":"link","label":"GCS offloader","href":"/docs/3.1.x/tiered-storage-gcs","docId":"tiered-storage-gcs","unlisted":false},{"type":"link","label":"Filesystem offloader","href":"/docs/3.1.x/tiered-storage-filesystem","docId":"tiered-storage-filesystem","unlisted":false},{"type":"link","label":"Azure BlobStore offloader","href":"/docs/3.1.x/tiered-storage-azure","docId":"tiered-storage-azure","unlisted":false},{"type":"link","label":"Aliyun OSS offloader","href":"/docs/3.1.x/tiered-storage-aliyun","docId":"tiered-storage-aliyun","unlisted":false},{"type":"link","label":"S3 offloader","href":"/docs/3.1.x/tiered-storage-s3","docId":"tiered-storage-s3","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Transactions","items":[{"type":"link","label":"Why transactions?","href":"/docs/3.1.x/txn-why","docId":"txn-why","unlisted":false},{"type":"link","label":"Concept","href":"/docs/3.1.x/txn-what","docId":"txn-what","unlisted":false},{"type":"link","label":"Get started","href":"/docs/3.1.x/txn-use","docId":"txn-use","unlisted":false},{"type":"link","label":"Advanced features","href":"/docs/3.1.x/txn-advanced-features","docId":"txn-advanced-features","unlisted":false},{"type":"link","label":"Monitoring","href":"/docs/3.1.x/txn-monitor","docId":"txn-monitor","unlisted":false},{"type":"link","label":"Working principles","href":"/docs/3.1.x/txn-how","docId":"txn-how","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Deployment","items":[{"type":"link","label":"Terraform (AWS)","href":"/docs/3.1.x/deploy-aws","docId":"deploy-aws","unlisted":false},{"type":"link","label":"IBM Cloud Services","href":"/docs/3.1.x/deploy-ibm","docId":"deploy-ibm","unlisted":false},{"type":"category","label":"Kubernetes","items":[{"type":"link","label":"Prepare","href":"/docs/3.1.x/helm-prepare","docId":"helm-prepare","unlisted":false},{"type":"link","label":"Deploy","href":"/docs/3.1.x/helm-deploy","docId":"helm-deploy","unlisted":false},{"type":"link","label":"Upgrade","href":"/docs/3.1.x/helm-upgrade","docId":"helm-upgrade","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/deploy-kubernetes"},{"type":"link","label":"Bare metal","href":"/docs/3.1.x/deploy-bare-metal","docId":"deploy-bare-metal","unlisted":false},{"type":"link","label":"Bare metal multi-cluster","href":"/docs/3.1.x/deploy-bare-metal-multi-cluster","docId":"deploy-bare-metal-multi-cluster","unlisted":false},{"type":"link","label":"Docker","href":"/docs/3.1.x/deploy-docker","docId":"deploy-docker","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/install-deploy-upgrade-landing"},{"type":"category","label":"Administration","items":[{"type":"link","label":"ZooKeeper and BookKeeper","href":"/docs/3.1.x/administration-zk-bk","docId":"administration-zk-bk","unlisted":false},{"type":"link","label":"Configure metadata store","href":"/docs/3.1.x/administration-metadata-store","docId":"administration-metadata-store","unlisted":false},{"type":"link","label":"Geo-replication","href":"/docs/3.1.x/administration-geo","docId":"administration-geo","unlisted":false},{"type":"link","label":"Pulsar Manager","href":"/docs/3.1.x/administration-pulsar-manager","docId":"administration-pulsar-manager","unlisted":false},{"type":"link","label":"Pulsar Shell","href":"/docs/3.1.x/administration-pulsar-shell","docId":"administration-pulsar-shell","unlisted":false},{"type":"link","label":"Load balance","href":"/docs/3.1.x/administration-load-balance","docId":"administration-load-balance","unlisted":false},{"type":"link","label":"Pulsar proxy","href":"/docs/3.1.x/administration-proxy","docId":"administration-proxy","unlisted":false},{"type":"link","label":"Upgrade","href":"/docs/3.1.x/administration-upgrade","docId":"administration-upgrade","unlisted":false},{"type":"category","label":"Pulsar isolation","items":[{"type":"link","label":"Isolate brokers","href":"/docs/3.1.x/administration-isolation-broker","docId":"administration-isolation-broker","unlisted":false},{"type":"link","label":"Isolate bookies","href":"/docs/3.1.x/administration-isolation-bookie","docId":"administration-isolation-bookie","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/administration-isolation"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Observability","items":[{"type":"link","label":"Statistics","href":"/docs/3.1.x/administration-stats","docId":"administration-stats","unlisted":false},{"type":"link","label":"Metrics","href":"/docs/3.1.x/reference-metrics","docId":"reference-metrics","unlisted":false},{"type":"link","label":"Monitoring","href":"/docs/3.1.x/deploy-monitoring","docId":"deploy-monitoring","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Security","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/security-overview","docId":"security-overview","unlisted":false},{"type":"category","label":"Encryption","items":[{"type":"link","label":"End-to-End Encryption","href":"/docs/3.1.x/security-encryption","docId":"security-encryption","unlisted":false},{"type":"link","label":"TLS Encryption","href":"/docs/3.1.x/security-tls-transport","docId":"security-tls-transport","unlisted":false},{"type":"link","label":"Bouncy Castle Providers","href":"/docs/3.1.x/security-bouncy-castle","docId":"security-bouncy-castle","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Authentication","items":[{"type":"link","label":"Authentication using mTLS","href":"/docs/3.1.x/security-tls-authentication","docId":"security-tls-authentication","unlisted":false},{"type":"link","label":"Authentication using JWT","href":"/docs/3.1.x/security-jwt","docId":"security-jwt","unlisted":false},{"type":"link","label":"Authentication using Athenz","href":"/docs/3.1.x/security-athenz","docId":"security-athenz","unlisted":false},{"type":"link","label":"Authentication using Kerberos","href":"/docs/3.1.x/security-kerberos","docId":"security-kerberos","unlisted":false},{"type":"link","label":"Authentication using OAuth 2.0 access tokens","href":"/docs/3.1.x/security-oauth2","docId":"security-oauth2","unlisted":false},{"type":"link","label":"Authentication using OpenID Connect","href":"/docs/3.1.x/security-openid-connect","docId":"security-openid-connect","unlisted":false},{"type":"link","label":"Authentication using HTTP basic","href":"/docs/3.1.x/security-basic-auth","docId":"security-basic-auth","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Authorization and ACLs","href":"/docs/3.1.x/security-authorization","docId":"security-authorization","unlisted":false},{"type":"link","label":"Extend Authentication and Authorization","href":"/docs/3.1.x/security-extending","docId":"security-extending","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Performance","items":[{"type":"link","label":"Pulsar Perf","href":"/docs/3.1.x/performance-pulsar-perf","docId":"performance-pulsar-perf","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Client Libraries","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/client-libraries","docId":"client-libraries","unlisted":false},{"type":"link","href":"/client-feature-matrix/","label":"Client Feature Matrix"},{"type":"category","label":"Get started","items":[{"type":"category","label":"Java client","items":[{"type":"link","label":"Set up","href":"/docs/3.1.x/client-libraries-java-setup","docId":"client-libraries-java-setup","unlisted":false},{"type":"link","label":"Initialize","href":"/docs/3.1.x/client-libraries-java-initialize","docId":"client-libraries-java-initialize","unlisted":false},{"type":"link","label":"Use","href":"/docs/3.1.x/client-libraries-java-use","docId":"client-libraries-java-use","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/client-libraries-java"},{"type":"category","label":"C++ client","items":[{"type":"link","label":"Set up","href":"/docs/3.1.x/client-libraries-cpp-setup","docId":"client-libraries-cpp-setup","unlisted":false},{"type":"link","label":"Initialize","href":"/docs/3.1.x/client-libraries-cpp-initialize","docId":"client-libraries-cpp-initialize","unlisted":false},{"type":"link","label":"Use","href":"/docs/3.1.x/client-libraries-cpp-use","docId":"client-libraries-cpp-use","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/client-libraries-cpp"},{"type":"category","label":"Go client","items":[{"type":"link","label":"Set up","href":"/docs/3.1.x/client-libraries-go-setup","docId":"client-libraries-go-setup","unlisted":false},{"type":"link","label":"Initialize","href":"/docs/3.1.x/client-libraries-go-initialize","docId":"client-libraries-go-initialize","unlisted":false},{"type":"link","label":"Use","href":"/docs/3.1.x/client-libraries-go-use","docId":"client-libraries-go-use","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/client-libraries-go"},{"type":"category","label":"Python client","items":[{"type":"link","label":"Set up","href":"/docs/3.1.x/client-libraries-python-setup","docId":"client-libraries-python-setup","unlisted":false},{"type":"link","label":"Initialize","href":"/docs/3.1.x/client-libraries-python-initialize","docId":"client-libraries-python-initialize","unlisted":false},{"type":"link","label":"Use","href":"/docs/3.1.x/client-libraries-python-use","docId":"client-libraries-python-use","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/client-libraries-python"},{"type":"category","label":"Node.js client","items":[{"type":"link","label":"Set up","href":"/docs/3.1.x/client-libraries-node-setup","docId":"client-libraries-node-setup","unlisted":false},{"type":"link","label":"Initialize","href":"/docs/3.1.x/client-libraries-node-initialize","docId":"client-libraries-node-initialize","unlisted":false},{"type":"link","label":"Use","href":"/docs/3.1.x/client-libraries-node-use","docId":"client-libraries-node-use","unlisted":false},{"type":"link","label":"Configs","href":"/docs/3.1.x/client-libraries-node-configs","docId":"client-libraries-node-configs","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/client-libraries-node"},{"type":"category","label":"C# client","items":[{"type":"link","label":"Set up","href":"/docs/3.1.x/client-libraries-dotnet-setup","docId":"client-libraries-dotnet-setup","unlisted":false},{"type":"link","label":"Initialize","href":"/docs/3.1.x/client-libraries-dotnet-initialize","docId":"client-libraries-dotnet-initialize","unlisted":false},{"type":"link","label":"Use","href":"/docs/3.1.x/client-libraries-dotnet-use","docId":"client-libraries-dotnet-use","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/client-libraries-dotnet"},{"type":"link","label":"WebSocket","href":"/docs/3.1.x/client-libraries-websocket","docId":"client-libraries-websocket","unlisted":false},{"type":"link","label":"REST","href":"/docs/3.1.x/client-libraries-rest","docId":"client-libraries-rest","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Advanced use","items":[{"type":"link","label":"Work with clients","href":"/docs/3.1.x/client-libraries-clients","docId":"client-libraries-clients","unlisted":false},{"type":"link","label":"Work with producer","href":"/docs/3.1.x/client-libraries-producers","docId":"client-libraries-producers","unlisted":false},{"type":"link","label":"Work with consumer","href":"/docs/3.1.x/client-libraries-consumers","docId":"client-libraries-consumers","unlisted":false},{"type":"link","label":"Work with reader","href":"/docs/3.1.x/client-libraries-readers","docId":"client-libraries-readers","unlisted":false},{"type":"link","label":"Work with TableView","href":"/docs/3.1.x/client-libraries-tableviews","docId":"client-libraries-tableviews","unlisted":false},{"type":"link","label":"Work with schema","href":"/docs/3.1.x/client-libraries-schema","docId":"client-libraries-schema","unlisted":false},{"type":"link","label":"Configure cluster-level failover","href":"/docs/3.1.x/client-libraries-cluster-level-failover","docId":"client-libraries-cluster-level-failover","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Admin API","items":[{"type":"link","label":"Overview","href":"/docs/3.1.x/admin-api-overview","docId":"admin-api-overview","unlisted":false},{"type":"link","label":"Use cases","href":"/docs/3.1.x/admin-api-use-cases","docId":"admin-api-use-cases","unlisted":false},{"type":"category","label":"Features","items":[{"type":"link","label":"Brokers","href":"/docs/3.1.x/admin-api-brokers","docId":"admin-api-brokers","unlisted":false},{"type":"link","label":"Clusters","href":"/docs/3.1.x/admin-api-clusters","docId":"admin-api-clusters","unlisted":false},{"type":"link","label":"Functions","href":"/docs/3.1.x/admin-api-functions","docId":"admin-api-functions","unlisted":false},{"type":"link","label":"Namespaces","href":"/docs/3.1.x/admin-api-namespaces","docId":"admin-api-namespaces","unlisted":false},{"type":"link","label":"Packages","href":"/docs/3.1.x/admin-api-packages","docId":"admin-api-packages","unlisted":false},{"type":"link","label":"Permissions","href":"/docs/3.1.x/admin-api-permissions","docId":"admin-api-permissions","unlisted":false},{"type":"link","label":"Schemas","href":"/docs/3.1.x/admin-api-schemas","docId":"admin-api-schemas","unlisted":false},{"type":"link","label":"Tenants","href":"/docs/3.1.x/admin-api-tenants","docId":"admin-api-tenants","unlisted":false},{"type":"link","label":"Topics","href":"/docs/3.1.x/admin-api-topics","docId":"admin-api-topics","unlisted":false},{"type":"link","label":"Transactions","href":"/docs/3.1.x/admin-api-transactions","docId":"admin-api-transactions","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/admin-api-features"},{"type":"link","label":"Tools","href":"/docs/3.1.x/admin-api-tools","docId":"admin-api-tools","unlisted":false},{"type":"link","label":"Get started","href":"/docs/3.1.x/admin-api-get-started","docId":"admin-api-get-started","unlisted":false},{"type":"link","label":"Tutorial","href":"/docs/3.1.x/admin-api-tutorial","docId":"admin-api-tutorial","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Adaptors","items":[{"type":"link","label":"Kafka client wrapper","href":"/docs/3.1.x/adaptors-kafka","docId":"adaptors-kafka","unlisted":false},{"type":"link","label":"Apache Spark","href":"/docs/3.1.x/adaptors-spark","docId":"adaptors-spark","unlisted":false},{"type":"link","label":"Apache Storm","href":"/docs/3.1.x/adaptors-storm","docId":"adaptors-storm","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tutorials","items":[{"type":"link","label":"Set up a tenant","href":"/docs/3.1.x/tutorials-tenant","docId":"tutorials-tenant","unlisted":false},{"type":"link","label":"Create a namespace","href":"/docs/3.1.x/tutorials-namespace","docId":"tutorials-namespace","unlisted":false},{"type":"link","label":"Create a topic","href":"/docs/3.1.x/tutorials-topic","docId":"tutorials-topic","unlisted":false},{"type":"link","label":"Produce and consume messages","href":"/docs/3.1.x/tutorials-produce-consume","docId":"tutorials-produce-consume","unlisted":false},{"type":"link","label":"Topic compaction","href":"/docs/3.1.x/cookbooks-compaction","docId":"cookbooks-compaction","unlisted":false},{"type":"link","label":"Message deduplication ","href":"/docs/3.1.x/cookbooks-deduplication","docId":"cookbooks-deduplication","unlisted":false},{"type":"link","label":"Non-persistent messaging","href":"/docs/3.1.x/cookbooks-non-persistent","docId":"cookbooks-non-persistent","unlisted":false},{"type":"link","label":"Message retention and expiry","href":"/docs/3.1.x/cookbooks-retention-expiry","docId":"cookbooks-retention-expiry","unlisted":false},{"type":"link","label":"Message queue","href":"/docs/3.1.x/cookbooks-message-queue","docId":"cookbooks-message-queue","unlisted":false},{"type":"link","label":"BookKeeper Ledger Metadata","href":"/docs/3.1.x/cookbooks-bookkeepermetadata","docId":"cookbooks-bookkeepermetadata","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/how-to-landing"},{"type":"category","label":"Development","items":[{"type":"link","label":"Simulation tools","href":"/docs/3.1.x/develop-tools","docId":"develop-tools","unlisted":false},{"type":"link","label":"Binary protocol","href":"/docs/3.1.x/developing-binary-protocol","docId":"developing-binary-protocol","unlisted":false},{"type":"link","label":"Broker load balancer","href":"/docs/3.1.x/develop-load-manager","docId":"develop-load-manager","unlisted":false},{"type":"link","label":"Plugin","href":"/docs/3.1.x/develop-plugin","docId":"develop-plugin","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/developers-landing"},{"type":"category","label":"Reference","items":[{"type":"category","label":"Pulsar APIs","items":[{"type":"link","label":"REST APIs","href":"/docs/3.1.x/reference-rest-api-overview","docId":"reference-rest-api-overview","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/pulsar-api-overview"},{"type":"link","label":"Terminology","href":"/docs/3.1.x/reference-terminology","docId":"reference-terminology","unlisted":false},{"type":"link","label":"Pulsar CLI tools","href":"/docs/3.1.x/reference-cli-tools","docId":"reference-cli-tools","unlisted":false},{"type":"link","label":"Pulsar Configuration","href":"/docs/3.1.x/reference-configuration","docId":"reference-configuration","unlisted":false},{"type":"link","href":"/release-notes/","label":"Release notes"}],"collapsed":true,"collapsible":true,"href":"/docs/3.1.x/reference-landing"}]},"docs":{"about":{"id":"about","title":"Welcome to the Apache Pulsar documentation portal","description":"*","sidebar":"docsSidebar"},"adaptors-kafka":{"id":"adaptors-kafka","title":"Pulsar adaptor for Apache Kafka","description":"Pulsar provides an easy option for applications that are currently written using the Apache Kafka Java client API.","sidebar":"docsSidebar"},"adaptors-spark":{"id":"adaptors-spark","title":"Pulsar adaptor for Apache Spark","description":"Spark Streaming receiver","sidebar":"docsSidebar"},"adaptors-storm":{"id":"adaptors-storm","title":"Pulsar adaptor for Apache Storm","description":"Pulsar Storm is an adaptor for integrating with Apache Storm topologies. It provides core Storm implementations for sending and receiving data.","sidebar":"docsSidebar"},"admin-api-brokers":{"id":"admin-api-brokers","title":"Managing Brokers","description":"This page only shows some frequently used operations. For the latest and complete information, see the reference docs below.","sidebar":"docsSidebar"},"admin-api-clusters":{"id":"admin-api-clusters","title":"Managing Clusters","description":"This page only shows some frequently used operations. For the latest and complete information, see the reference docs below.","sidebar":"docsSidebar"},"admin-api-features":{"id":"admin-api-features","title":"Pulsar admin interfaces - Features","description":"Below are the most common tasks you may want to do. For the exhaustive lists of tasks and the method to perform these tasks, see Tools.","sidebar":"docsSidebar"},"admin-api-functions":{"id":"admin-api-functions","title":"Manage Functions","description":"This page only shows some frequently used operations. For the latest and complete information, see the reference docs below.","sidebar":"docsSidebar"},"admin-api-get-started":{"id":"admin-api-get-started","title":"Get started","description":"This guide walks you through the quickest way to get started with the following methods to manage topics.","sidebar":"docsSidebar"},"admin-api-namespaces":{"id":"admin-api-namespaces","title":"Managing Namespaces","description":"This page only shows some frequently used operations.","sidebar":"docsSidebar"},"admin-api-non-partitioned-topics":{"id":"admin-api-non-partitioned-topics","title":"Managing non-partitioned topics","description":"For details of the content, refer to manage topics."},"admin-api-non-persistent-topics":{"id":"admin-api-non-persistent-topics","title":"Managing non-persistent topics","description":"For details of the content, refer to manage topics."},"admin-api-overview":{"id":"admin-api-overview","title":"Pulsar admin interfaces","description":"Pulsar admin APIs enable you to administer clusters programmatically. For example, you can create, update, delete, and manage all the entities within Pulsar instances (such as clusters, namespaces, tenants, topics, schemas, connectors, functions, and so on), and set various policies for data, resources, and security.","sidebar":"docsSidebar"},"admin-api-packages":{"id":"admin-api-packages","title":"Manage packages","description":"This page only shows some frequently used operations.","sidebar":"docsSidebar"},"admin-api-partitioned-topics":{"id":"admin-api-partitioned-topics","title":"Managing partitioned topics","description":"For details of the content, refer to manage topics."},"admin-api-permissions":{"id":"admin-api-permissions","title":"Managing permissions","description":"This page only shows some frequently used operations.","sidebar":"docsSidebar"},"admin-api-persistent-topics":{"id":"admin-api-persistent-topics","title":"Managing persistent topics","description":"For details of the content, refer to manage topics."},"admin-api-schemas":{"id":"admin-api-schemas","title":"Manage Schemas","description":"This page only shows some frequently used operations.","sidebar":"docsSidebar"},"admin-api-tenants":{"id":"admin-api-tenants","title":"Managing Tenants","description":"This page only shows some frequently used operations.","sidebar":"docsSidebar"},"admin-api-tools":{"id":"admin-api-tools","title":"Pulsar admin interfaces - Tools","description":"You can manage Pulsar entities through the Pulsar admin layer via one of the following tools:","sidebar":"docsSidebar"},"admin-api-topics":{"id":"admin-api-topics","title":"Manage topics","description":"This page only shows some frequently used operations.","sidebar":"docsSidebar"},"admin-api-transactions":{"id":"admin-api-transactions","title":"Manage transactions","description":"This page only shows some frequently used operations.","sidebar":"docsSidebar"},"admin-api-tutorial":{"id":"admin-api-tutorial","title":"Tutorial","description":"Admin setup","sidebar":"docsSidebar"},"admin-api-use-cases":{"id":"admin-api-use-cases","title":"Pulsar admin interfaces - Use cases","description":"Pulsar admin APIs are one of the best productivity tools. You can perform various tasks with them, for example:","sidebar":"docsSidebar"},"administration-geo":{"id":"administration-geo","title":"Pulsar geo-replication","description":"Enable geo-replication for a namespace","sidebar":"docsSidebar"},"administration-isolation":{"id":"administration-isolation","title":"Pulsar isolation","description":"In an organization, a Pulsar instance provides services to multiple teams. When organizing the resources across multiple teams, you want to make a suitable isolation plan to avoid resource competition between different teams and applications and provide high-quality messaging service. In this case, you need to consider resource isolation and weigh your intended actions against expected and unexpected consequences.","sidebar":"docsSidebar"},"administration-isolation-bookie":{"id":"administration-isolation-bookie","title":"Isolate bookies","description":"Isolating bookies equals isolating message storage, which is a data storage mechanism that provides isolation and safety for specific topics.","sidebar":"docsSidebar"},"administration-isolation-broker":{"id":"administration-isolation-broker","title":"Isolate brokers","description":"In Pulsar, when namespaces (more specifically, namespace bundles) are assigned dynamically to brokers, the namespace isolation policy limits the set of brokers that can be used for assignment. Before topics are assigned to brokers, you can set the namespace isolation policy with a primary or a secondary regex to select desired brokers.","sidebar":"docsSidebar"},"administration-load-balance":{"id":"administration-load-balance","title":"Load balance across brokers","description":"Pulsar is a horizontally scalable messaging system, so the traffic in a logical cluster must be balanced across all the available Pulsar brokers as evenly as possible, which is a core requirement.","sidebar":"docsSidebar"},"administration-metadata-store":{"id":"administration-metadata-store","title":"Configure metadata store","description":"Pulsar metadata store maintains all the metadata, configuration, and coordination of a Pulsar cluster, such as topic metadata, schema, broker load data, and so on.","sidebar":"docsSidebar"},"administration-proxy":{"id":"administration-proxy","title":"Pulsar proxy","description":"Pulsar proxy is an optional gateway. Pulsar proxy is used when direct connections between clients and Pulsar brokers are either infeasible or undesirable. For example, when you run Pulsar in a cloud environment or on Kubernetes or an analogous platform, you can run Pulsar proxy.","sidebar":"docsSidebar"},"administration-pulsar-manager":{"id":"administration-pulsar-manager","title":"Pulsar Manager","description":"Pulsar Manager is a web-based GUI management and monitoring tool that helps administrators and users manage and monitor tenants, namespaces, topics, subscriptions, brokers, clusters, and so on, and supports dynamic configuration of multiple environments.","sidebar":"docsSidebar"},"administration-pulsar-shell":{"id":"administration-pulsar-shell","title":"Pulsar Shell","description":"Pulsar shell is a fast and flexible shell for Pulsar cluster management, messaging, and more.","sidebar":"docsSidebar"},"administration-stats":{"id":"administration-stats","title":"Pulsar stats","description":"Topic stats","sidebar":"docsSidebar"},"administration-upgrade":{"id":"administration-upgrade","title":"Upgrade Guide","description":"Upgrade guidelines","sidebar":"docsSidebar"},"administration-zk-bk":{"id":"administration-zk-bk","title":"ZooKeeper and BookKeeper administration","description":"Pulsar relies on two external systems for essential tasks:","sidebar":"docsSidebar"},"client-libraries":{"id":"client-libraries","title":"Pulsar client libraries","description":"Language-specific client libraries","sidebar":"docsSidebar"},"client-libraries-clients":{"id":"client-libraries-clients","title":"Work with clients","description":"After setting up your client library and creating a client object, you can explore more to start working with your client.","sidebar":"docsSidebar"},"client-libraries-cluster-level-failover":{"id":"client-libraries-cluster-level-failover","title":"Configure cluster-level failover","description":"For more information about cluster-level failover, including concepts, benefits, use cases, constraints, usage and working principles, see Cluster-level failover concepts.","sidebar":"docsSidebar"},"client-libraries-consumers":{"id":"client-libraries-consumers","title":"Work with consumer","description":"After setting up your clients, you can explore more to start working with consumers.","sidebar":"docsSidebar"},"client-libraries-cpp":{"id":"client-libraries-cpp","title":"Pulsar C++ client","description":"You can use a Pulsar C++ client to create Pulsar producers, consumers, and readers in C++. All the methods in Pulsar C++ clients are thread-safe.","sidebar":"docsSidebar"},"client-libraries-cpp-initialize":{"id":"client-libraries-cpp-initialize","title":"Initialize a C++ client object","description":"You can instantiate a Client object using just a URL for the target Pulsar cluster like this:","sidebar":"docsSidebar"},"client-libraries-cpp-setup":{"id":"client-libraries-cpp-setup","title":"Set up Pulsar C++ client","description":"Install C++ client library","sidebar":"docsSidebar"},"client-libraries-cpp-use":{"id":"client-libraries-cpp-use","title":"Use C++ client","description":"Create a producer","sidebar":"docsSidebar"},"client-libraries-dotnet":{"id":"client-libraries-dotnet","title":"Pulsar C# client","description":"You can use the Pulsar C# client (DotPulsar) to create Pulsar producers, consumers, and readers in C#. All the methods in the producer, consumer, and reader of a C# client are thread-safe.","sidebar":"docsSidebar"},"client-libraries-dotnet-initialize":{"id":"client-libraries-dotnet-initialize","title":"Initialize C# client","description":"This section introduces some hands-on examples to initialize the Pulsar C# client.","sidebar":"docsSidebar"},"client-libraries-dotnet-setup":{"id":"client-libraries-dotnet-setup","title":"Set up C# client","description":"Install C# client library","sidebar":"docsSidebar"},"client-libraries-dotnet-use":{"id":"client-libraries-dotnet-use","title":"Use C# client","description":"This section introduces some hands-on examples to get started with using the Pulsar C# client.","sidebar":"docsSidebar"},"client-libraries-go":{"id":"client-libraries-go","title":"Pulsar Go client","description":"You can use a Pulsar Go client to create Pulsar producers, consumers, and readers in Golang.","sidebar":"docsSidebar"},"client-libraries-go-initialize":{"id":"client-libraries-go-initialize","title":"Initialize Pulsar Go client","description":"To interact with Pulsar, you need a Client object first.","sidebar":"docsSidebar"},"client-libraries-go-setup":{"id":"client-libraries-go-setup","title":"Set up Pulsar Go client library","description":"Install Go client library","sidebar":"docsSidebar"},"client-libraries-go-use":{"id":"client-libraries-go-use","title":"Use Pulsar Go client","description":"Create a producer","sidebar":"docsSidebar"},"client-libraries-java":{"id":"client-libraries-java","title":"Pulsar Java client","description":"You can use a Pulsar Java client to create Pulsar producers, consumers, and readers in Java and perform administrative tasks. All the methods in Java clients are thread-safe. The current Java client version is 3.1.3.","sidebar":"docsSidebar"},"client-libraries-java-initialize":{"id":"client-libraries-java-initialize","title":"Initialize a Java client","description":"You can instantiate a PulsarClient object using just a URL for the target Pulsar cluster like this:","sidebar":"docsSidebar"},"client-libraries-java-setup":{"id":"client-libraries-java-setup","title":"Set up Java client","description":"Install Java client library","sidebar":"docsSidebar"},"client-libraries-java-use":{"id":"client-libraries-java-use","title":"Use a Java client","description":"Create a producer","sidebar":"docsSidebar"},"client-libraries-node":{"id":"client-libraries-node","title":"Pulsar Node.js client","description":"You can use a Pulsar Node.js client to create Pulsar producers, consumers, and readers in Node.js. All the methods in Pulsar Node.js clients are thread-safe.","sidebar":"docsSidebar"},"client-libraries-node-configs":{"id":"client-libraries-node-configs","title":"Pulsar Node.js client configurations","description":"Client configs","sidebar":"docsSidebar"},"client-libraries-node-initialize":{"id":"client-libraries-node-initialize","title":"Initialize Node.js client","description":"To interact with Pulsar, you first need a client object. You can create a client instance using a new operator and the Client method, passing in a client options object.","sidebar":"docsSidebar"},"client-libraries-node-setup":{"id":"client-libraries-node-setup","title":"Set up Pulsar Node.js client","description":"Install Node.js client library","sidebar":"docsSidebar"},"client-libraries-node-use":{"id":"client-libraries-node-use","title":"Usee Node.js client","description":"Create a producer","sidebar":"docsSidebar"},"client-libraries-producers":{"id":"client-libraries-producers","title":"Work with producer","description":"After setting up your clients, you can explore more to start working with producers.","sidebar":"docsSidebar"},"client-libraries-python":{"id":"client-libraries-python","title":"Pulsar Python client","description":"You can use a Pulsar Python client to create Pulsar producers, consumers, and readers in Python. All the methods in Pulsar Python clients are thread-safe.","sidebar":"docsSidebar"},"client-libraries-python-initialize":{"id":"client-libraries-python-initialize","title":"Initialize Python client","description":"You can instantiate a Client object using just a URL for the target Pulsar cluster like this:","sidebar":"docsSidebar"},"client-libraries-python-setup":{"id":"client-libraries-python-setup","title":"Set up Python client","description":"Install Python client library","sidebar":"docsSidebar"},"client-libraries-python-use":{"id":"client-libraries-python-use","title":"Use Python client","description":"Create a producer","sidebar":"docsSidebar"},"client-libraries-readers":{"id":"client-libraries-readers","title":"Work with reader","description":"After setting up your clients, you can explore more to start working with readers.","sidebar":"docsSidebar"},"client-libraries-rest":{"id":"client-libraries-rest","title":"Pulsar REST","description":"Pulsar not only provides REST endpoints to manage resources in Pulsar clusters, but also provides methods to query the state for those resources. In addition, Pulsar REST provides a simple way to interact with Pulsar without using client libraries, which is convenient for applications to use HTTP to interact with Pulsar.","sidebar":"docsSidebar"},"client-libraries-schema":{"id":"client-libraries-schema","title":"Work with schema","description":"Get started with schema","sidebar":"docsSidebar"},"client-libraries-tableviews":{"id":"client-libraries-tableviews","title":"Work with TableView","description":"After setting up your clients, you can explore more to start working with TableView.","sidebar":"docsSidebar"},"client-libraries-websocket":{"id":"client-libraries-websocket","title":"Pulsar WebSocket API","description":"Pulsar WebSocket API provides a simple way to interact with Pulsar using languages that do not have an official client library. You can use Pulsar WebSocket API with any WebSocket client library. See Python and Node.js examples for more details.","sidebar":"docsSidebar"},"concepts-architecture-overview":{"id":"concepts-architecture-overview","title":"Architecture Overview","description":"At the highest level, a Pulsar instance is composed of one or more Pulsar clusters. Clusters within an instance can replicate data amongst themselves.","sidebar":"docsSidebar"},"concepts-authentication":{"id":"concepts-authentication","title":"Authentication and Authorization","description":"Pulsar supports a pluggable authentication mechanism which can be configured at the proxy and/or the broker. Pulsar also supports a pluggable authorization mechanism. These mechanisms work together to identify the client and its access rights on topics, namespaces and tenants.","sidebar":"docsSidebar"},"concepts-broker-load-balancing-benefits":{"id":"concepts-broker-load-balancing-benefits","title":"Benefits","description":"The broker load balancer plays a key role in preventing downtime and lost productivity. It not only ensures efficient use of all resources, but it also optimizes cluster performance, reliability, and capacity with lower latency. It delivers a number of benefits, including but not limited to the following.","sidebar":"docsSidebar"},"concepts-broker-load-balancing-concepts":{"id":"concepts-broker-load-balancing-concepts","title":"Concepts","description":"Pulsar provides robust support for load balancing to ensure efficient utilization of resources across Pulsar clusters. Load balancing in Pulsar involves distributing messages and partitions evenly among brokers and consumers to prevent hotspots and optimize performance.","sidebar":"docsSidebar"},"concepts-broker-load-balancing-features":{"id":"concepts-broker-load-balancing-features","title":"Features","description":"In general, the main features of the broker load balancer are:","sidebar":"docsSidebar"},"concepts-broker-load-balancing-migration":{"id":"concepts-broker-load-balancing-migration","title":"Migration","description":"Pulsar has 3 types of broker load balancers, that is, simple, modular, and extensible.","sidebar":"docsSidebar"},"concepts-broker-load-balancing-overview":{"id":"concepts-broker-load-balancing-overview","title":"Overview","description":"Challenges of load balancing in distributed streaming systems","sidebar":"docsSidebar"},"concepts-broker-load-balancing-quick-start":{"id":"concepts-broker-load-balancing-quick-start","title":"Quick start","description":"Broker load balancing helps you distribute messages evenly among brokers and ensure efficient utilization of resources across Pulsar clusters.","sidebar":"docsSidebar"},"concepts-broker-load-balancing-types":{"id":"concepts-broker-load-balancing-types","title":"Types","description":"Pulsar provides three types of broker load balancers:","sidebar":"docsSidebar"},"concepts-broker-load-balancing-use-cases":{"id":"concepts-broker-load-balancing-use-cases","title":"Use cases","description":"Below you can review common use cases for the broker load balancer.","sidebar":"docsSidebar"},"concepts-clients":{"id":"concepts-clients","title":"Pulsar Clients","description":"Pulsar exposes a client API with language bindings for Java, C++, Go, Python, Node.js and C#. The client API optimizes and encapsulates Pulsar\'s client-broker communication protocol and exposes a simple and intuitive API for use by applications.","sidebar":"docsSidebar"},"concepts-cluster-level-failover":{"id":"concepts-cluster-level-failover","title":"Cluster-level failover","description":"This chapter describes the concept, benefits, use cases, constraints, usage, working principles, and more information about the cluster-level failover.","sidebar":"docsSidebar"},"concepts-messaging":{"id":"concepts-messaging","title":"Messaging","description":"Pulsar is built on the publish-subscribe pattern (often abbreviated to pub-sub). In this pattern, producers publish messages to topics; consumers subscribe to those topics, process incoming messages, and send acknowledgments to the broker when processing is finished.","sidebar":"docsSidebar"},"concepts-multi-tenancy":{"id":"concepts-multi-tenancy","title":"Multi Tenancy","description":"Pulsar was created from the ground up as a multi-tenant system. To support multi-tenancy, Pulsar has a concept of tenants. Tenants can be spread across clusters and can each have their own authentication and authorization scheme applied to them. They are also the administrative unit at which storage quotas, message TTL, and isolation policies can be managed.","sidebar":"docsSidebar"},"concepts-multiple-advertised-listeners":{"id":"concepts-multiple-advertised-listeners","title":"Multiple advertised listeners","description":"When a Pulsar cluster is deployed in the production environment, it may require to expose multiple advertised addresses for the broker. For example, when you deploy a Pulsar cluster in Kubernetes and want other clients, which are not in the same Kubernetes cluster, to connect to the Pulsar cluster, you need to assign a broker URL to external clients. But clients in the same Kubernetes cluster can still connect to the Pulsar cluster through the internal network of Kubernetes.","sidebar":"docsSidebar"},"concepts-overview":{"id":"concepts-overview","title":"Pulsar Overview","description":"Pulsar is a multi-tenant, high-performance solution for server-to-server messaging. Originally developed by Yahoo, Pulsar is under the stewardship of the Apache Software Foundation.","sidebar":"docsSidebar"},"concepts-proxy-sni-routing":{"id":"concepts-proxy-sni-routing","title":"Proxy support with SNI routing","description":"A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \\"traffic cop\\" in both forward and reverse proxy scenarios, and benefits your system such as load balancing, performance, security, auto-scaling, and so on.","sidebar":"docsSidebar"},"concepts-replication":{"id":"concepts-replication","title":"Geo Replication","description":"Regardless of industries, when an unforeseen event occurs and brings day-to-day operations to a halt, an organization needs a well-prepared disaster recovery plan to quickly restore service to clients. However, a disaster recovery plan usually requires a multi-datacenter deployment with geographically dispersed data centers. Such a multi-datacenter deployment requires a geo-replication mechanism to provide additional redundancy in case a data center fails.","sidebar":"docsSidebar"},"concepts-throttling":{"id":"concepts-throttling","title":"Message dispatch throttling","description":"Overview","sidebar":"docsSidebar"},"concepts-tiered-storage":{"id":"concepts-tiered-storage","title":"Tiered Storage","description":"Pulsar\'s segment-oriented architecture allows for topic backlogs to grow very large, effectively without limit. However, this can become expensive over time."},"concepts-topic-compaction":{"id":"concepts-topic-compaction","title":"Topic Compaction","description":"Pulsar was built with highly scalable persistent storage of message data as a primary objective. Pulsar topics enable you to persistently store as many unacknowledged messages as you need while preserving message ordering. By default, Pulsar stores all unacknowledged/unprocessed messages produced on a topic. Accumulating many unacknowledged messages on a topic is necessary for many Pulsar use cases but it can also be very time intensive for Pulsar consumers to \\"rewind\\" through the entire log of messages.","sidebar":"docsSidebar"},"cookbooks-bookkeepermetadata":{"id":"cookbooks-bookkeepermetadata","title":"BookKeeper Ledger Metadata","description":"Pulsar stores data on BookKeeper ledgers, you can understand the contents of a ledger by inspecting the metadata attached to the ledger.","sidebar":"docsSidebar"},"cookbooks-compaction":{"id":"cookbooks-compaction","title":"Topic compaction","description":"Pulsar\'s topic compaction feature enables you to create compacted topics in which older, \\"obscured\\" entries are pruned from the topic, allowing for faster reads through the topic\'s history (which messages are deemed obscured/outdated/irrelevant will depend on your use case).","sidebar":"docsSidebar"},"cookbooks-deduplication":{"id":"cookbooks-deduplication","title":"Message deduplication","description":"When Message deduplication is enabled, it ensures that each message produced on Pulsar topics is persisted to disk only once, even if the message is produced more than once. Message deduplication is handled automatically on the server side.","sidebar":"docsSidebar"},"cookbooks-encryption":{"id":"cookbooks-encryption","title":"Pulsar Encryption","description":""},"cookbooks-message-queue":{"id":"cookbooks-message-queue","title":"Use Pulsar as a message queue","description":"Message queues are essential components of many large-scale data architectures. If every single work object that passes through your system absolutely must be processed in spite of the slowness or downright failure of this or that system component, there\'s a good chance that you\'ll need a message queue to step in and ensure that unprocessed data is retained---with correct ordering---until the required actions are taken.","sidebar":"docsSidebar"},"cookbooks-non-persistent":{"id":"cookbooks-non-persistent","title":"Non-persistent messaging","description":"Non-persistent topics are Pulsar topics in which message data is never persistently stored and kept only in memory. This cookbook provides:","sidebar":"docsSidebar"},"cookbooks-partitioned":{"id":"cookbooks-partitioned","title":"Partitioned topics","description":"For details of the content, refer to manage topics."},"cookbooks-retention-expiry":{"id":"cookbooks-retention-expiry","title":"Message retention and expiry","description":"Pulsar brokers are responsible for handling messages that pass through Pulsar, including persistent storage of messages. By default, for each topic, brokers only retain messages that are in at least one backlog. A backlog is a set of unacknowledged messages for a particular subscription. As a topic can have multiple subscriptions, a topic can have multiple backlogs.","sidebar":"docsSidebar"},"cookbooks-tiered-storage":{"id":"cookbooks-tiered-storage","title":"Tiered Storage","description":"Pulsar\'s Tiered Storage feature allows older backlog data to be offloaded to long term storage, thereby freeing up space in BookKeeper and reducing storage costs. This cookbook walks you through using tiered storage in your Pulsar cluster."},"deploy-aws":{"id":"deploy-aws","title":"Deploy a Pulsar cluster on AWS using Terraform and Ansible","description":"For instructions on deploying a single Pulsar cluster manually rather than using Terraform and Ansible, see Deploying a Pulsar cluster on bare metal. For instructions on manually deploying a multi-cluster Pulsar instance, see Deploying a Pulsar instance on bare metal.","sidebar":"docsSidebar"},"deploy-bare-metal":{"id":"deploy-bare-metal","title":"Deploy a cluster on bare metal","description":"1. You can use single-cluster Pulsar installation in most use cases, such as experimenting with Pulsar or using Pulsar in a startup or in a single team. If you need to run a multi-cluster Pulsar instance, see the guide.","sidebar":"docsSidebar"},"deploy-bare-metal-multi-cluster":{"id":"deploy-bare-metal-multi-cluster","title":"Deploying a multi-cluster on bare metal","description":"1. You can use single-cluster Pulsar installation in most use cases, such as experimenting with Pulsar or using Pulsar in a startup or a single team. If you need to run a multi-cluster Pulsar instance, see the guide.","sidebar":"docsSidebar"},"deploy-docker":{"id":"deploy-docker","title":"Deploy a cluster on Docker","description":"To deploy a Pulsar cluster on Docker using Docker commands, you need to complete the following steps:","sidebar":"docsSidebar"},"deploy-ibm":{"id":"deploy-ibm","title":"Apache Pulsar Installation on IBM Kubernetes Cluster through Helm chart","description":"This tutorial uses Apache Pulsar 2.9.3 as an example. If you want to upgrade Pulsar version, follow the instructions in Helm Upgrade Guide.","sidebar":"docsSidebar"},"deploy-kubernetes":{"id":"deploy-kubernetes","title":"Overview","description":"The Apache Pulsar Helm Chart provides one of the most convenient ways to deploy and operate Pulsar on Kubernetes. With all the required components, the Helm Chart is scalable and thus suitable for large-scale deployments.","sidebar":"docsSidebar"},"deploy-monitoring":{"id":"deploy-monitoring","title":"Monitor","description":"You can use different ways to monitor a Pulsar cluster, exposing both metrics related to the usage of topics and the overall health of the individual components of the cluster.","sidebar":"docsSidebar"},"develop-load-manager":{"id":"develop-load-manager","title":"Broker load balancer","description":"If you want to develop a broker load balancer, check out the following docs.","sidebar":"docsSidebar"},"develop-plugin":{"id":"develop-plugin","title":"Pulsar plugin development","description":"You can develop various plugins for Pulsar, such as entry filters, protocol handlers, interceptors, and so on.","sidebar":"docsSidebar"},"develop-tools":{"id":"develop-tools","title":"Simulation tools","description":"It is sometimes necessary to create a test environment and incur artificial load to observe how well load managers","sidebar":"docsSidebar"},"developers-landing":{"id":"developers-landing","title":"Pulsar for Developers","description":"Popular topics","sidebar":"docsSidebar"},"developing-binary-protocol":{"id":"developing-binary-protocol","title":"Pulsar binary protocol specification","description":"Pulsar uses a custom binary protocol for communications between producers/consumers and brokers. This protocol is designed to support required features, such as acknowledgments and flow control, while ensuring maximum transport and implementation efficiency.","sidebar":"docsSidebar"},"functions-cli":{"id":"functions-cli","title":"Pulsar Functions CLI and YAML configs","description":"Pulsar admin CLI for Pulsar Functions","sidebar":"docsSidebar"},"functions-concepts":{"id":"functions-concepts","title":"Pulsar Functions concepts","description":"Fully Qualified Function Name","sidebar":"docsSidebar"},"functions-debug":{"id":"functions-debug","title":"Debug Pulsar Functions","description":"You can use the following methods to debug Pulsar Functions:","sidebar":"docsSidebar"},"functions-debug-cli":{"id":"functions-debug-cli","title":"Debug with Functions CLI","description":"With Pulsar Functions CLI, you can debug Pulsar Functions with the following subcommands:","sidebar":"docsSidebar"},"functions-debug-localrun":{"id":"functions-debug-localrun","title":"Debug with localrun mode","description":"In localrun mode, a function consumes and produces actual data to a Pulsar cluster, and mirrors how the function runs in a Pulsar cluster. This provides a way to test your function and allows you to launch a function instance on your local machine as a thread for easy debugging.","sidebar":"docsSidebar"},"functions-debug-log-topic":{"id":"functions-debug-log-topic","title":"Debug with log topic","description":"When using Pulsar Functions, you can generate logs predefined in functions to a specified log topic and configure consumers to consume messages from the log topic.","sidebar":"docsSidebar"},"functions-debug-stderr":{"id":"functions-debug-stderr","title":"Debug with captured stderr","description":"To debug why a function fails to start, you can find function startup information and captured stderr output in the logs/functions////-.log file.","sidebar":"docsSidebar"},"functions-debug-unit-test":{"id":"functions-debug-unit-test","title":"Debug with unit test","description":"Like any function with inputs and outputs, you can test Pulsar Functions in a similar way as you test any other function.","sidebar":"docsSidebar"},"functions-deploy":{"id":"functions-deploy","title":"Deploy Pulsar Functions","description":"Pulsar provides two modes to deploy a function:","sidebar":"docsSidebar"},"functions-deploy-arguments":{"id":"functions-deploy-arguments","title":"Default arguments of CLI","description":"You can use function-related commands in the pulsar-admin CLI to deploy functions. Pulsar provides a variety of commands, such as:","sidebar":"docsSidebar"},"functions-deploy-cluster":{"id":"functions-deploy-cluster","title":"Deploy a function in cluster mode","description":"Deploying a function in cluster mode uploads the function to a function worker, which means the function is scheduled by the worker.","sidebar":"docsSidebar"},"functions-deploy-cluster-builtin":{"id":"functions-deploy-cluster-builtin","title":"Use built-in functions","description":"Similar to built-in connectors, the code of Java functions packaged as NAR that are placed in the functions directory of the function worker are loaded at startup and can be referenced when creating a function.","sidebar":"docsSidebar"},"functions-deploy-cluster-encryption":{"id":"functions-deploy-cluster-encryption","title":"Enable end-to-end-encryption","description":"To perform end-to-end encryption, you can specify --producer-config and --input-specs in the pulsar-admin CLI with the public and private key pair configured by the application. Only the consumers with a valid key can decrypt the encrypted messages.","sidebar":"docsSidebar"},"functions-deploy-cluster-package":{"id":"functions-deploy-cluster-package","title":"Enable package management service","description":"Package management service enables both version management and simplified upgrade/rollback processes for functions, sinks, and sources. When using the same function, sink, and source in different namespaces, you can upload them to a common package management system.","sidebar":"docsSidebar"},"functions-deploy-cluster-parallelism":{"id":"functions-deploy-cluster-parallelism","title":"Enable parallel processing","description":"In cluster mode, you can specify the parallelism (the number of instances to run) to enable parallel processing for a function.","sidebar":"docsSidebar"},"functions-deploy-cluster-resource":{"id":"functions-deploy-cluster-resource","title":"Allocate resources to function instance","description":"When running functions in cluster mode, you can specify the resources that can be allocated to each function instance.","sidebar":"docsSidebar"},"functions-deploy-localrun":{"id":"functions-deploy-localrun","title":"Deploy a function in localrun mode","description":"When you deploy a function in localrun mode, it runs on the machine where you enter the commands \u2013 on your laptop, for example, or in an AWS EC2 instance.","sidebar":"docsSidebar"},"functions-deploy-trigger":{"id":"functions-deploy-trigger","title":"Trigger a function","description":"Triggering a function means that you invoke a function by producing a message to one of the input topics via the CLI. You can use the trigger command to trigger a function at any time.","sidebar":"docsSidebar"},"functions-develop":{"id":"functions-develop","title":"Develop Pulsar Functions","description":"You can develop functions in Java, Python, or Go.","sidebar":"docsSidebar"},"functions-develop-admin-api":{"id":"functions-develop-admin-api","title":"Call Pulsar admin APIs","description":"Pulsar Functions that use the Java SDK have access to the Pulsar admin client, which allows the Pulsar admin client to manage API calls to your Pulsar clusters.","sidebar":"docsSidebar"},"functions-develop-api":{"id":"functions-develop-api","title":"Use APIs","description":"The following table outlines the APIs that you can use to develop Pulsar Functions in Java, Python, and Go.","sidebar":"docsSidebar"},"functions-develop-log":{"id":"functions-develop-log","title":"Produce function logs","description":"Produce logs for Java functions","sidebar":"docsSidebar"},"functions-develop-metrics":{"id":"functions-develop-metrics","title":"Use metrics to monitor functions","description":"To ensure that running functions are healthy at any time, you can configure functions to publish arbitrary metrics to the metrics interface that can be queried.","sidebar":"docsSidebar"},"functions-develop-schema-registry":{"id":"functions-develop-schema-registry","title":"Use schema registry","description":"Pulsar has a built-in schema registry and is bundled with popular schema types. Pulsar Functions can leverage the existing schema information from input topics and derive the input type. The schema registry applies to output topics as well.","sidebar":"docsSidebar"},"functions-develop-security":{"id":"functions-develop-security","title":"Enable security on functions","description":"Prerequisites","sidebar":"docsSidebar"},"functions-develop-serde":{"id":"functions-develop-serde","title":"Use SerDe","description":"Pulsar Functions use SerDe (Serialization and Deserialization) when publishing data to or consuming data from Pulsar topics. How SerDe works by default depends on the language you use (Java or Python) for a particular function. In both languages, however, you can write custom SerDe logic for more complex, application-specific types.","sidebar":"docsSidebar"},"functions-develop-state":{"id":"functions-develop-state","title":"Configure state storage","description":"Pulsar Functions use Apache BookKeeper as a state storage interface. Pulsar integrates with BookKeeper table service to store state for functions. For example, a WordCount function can store the state of its counters into BookKeeper table service via State APIs.","sidebar":"docsSidebar"},"functions-develop-tutorial":{"id":"functions-develop-tutorial","title":"Tutorials","description":"Write a function for word count","sidebar":"docsSidebar"},"functions-develop-user-defined-configs":{"id":"functions-develop-user-defined-configs","title":"Pass user-defined configurations","description":"When you run or update functions created via SDK, you can pass arbitrary key/value pairs to them by using CLI with the --user-config flag. Key/value pairs must be specified as JSON.","sidebar":"docsSidebar"},"functions-overview":{"id":"functions-overview","title":"Pulsar Functions overview","description":"This section introduces the following content:","sidebar":"docsSidebar"},"functions-package":{"id":"functions-package","title":"Package Pulsar Functions","description":"If you want to submit and run functions in cluster mode, you need to package your functions first.","sidebar":"docsSidebar"},"functions-package-go":{"id":"functions-package-go","title":"Package Go Functions","description":"Currently, Go functions can be implemented only using SDK and the interface of functions is exposed in the form of SDK. Before using Go functions, you need to import github.com/apache/pulsar/pulsar-function-go/pf.","sidebar":"docsSidebar"},"functions-package-java":{"id":"functions-package-java","title":"Package Java Functions","description":"There are two methods to package Java Functions, that is uber JAR and NAR.","sidebar":"docsSidebar"},"functions-package-python":{"id":"functions-package-python","title":"Package Python Functions","description":"Python functions support the following three packaging formats:","sidebar":"docsSidebar"},"functions-quickstart":{"id":"functions-quickstart","title":"Getting started with Pulsar Functions","description":"This hands-on tutorial provides step-by-step instructions and examples on how to create and validate functions in a standalone Pulsar, including stateful functions and window functions.","sidebar":"docsSidebar"},"functions-runtime":{"id":"functions-runtime","title":"Configure function runtime","description":"Pulsar supports three types of function runtime with different costs and isolation guarantees to maximize the deployment flexibility of your functions.","sidebar":"docsSidebar"},"functions-runtime-java-options":{"id":"functions-runtime-java-options","title":"Customize Java runtime options","description":"This setting only applies to process runtime and Kubernetes runtime.","sidebar":"docsSidebar"},"functions-runtime-kubernetes":{"id":"functions-runtime-kubernetes","title":"Configure Kubernetes runtime","description":"The Kubernetes runtime works when a function worker generates and applies Kubernetes manifests. The manifests generated by a function worker include:","sidebar":"docsSidebar"},"functions-runtime-process":{"id":"functions-runtime-process","title":"Configure process runtime","description":"You can use the default configurations of process runtime in the conf/functions_worker.yml file.","sidebar":"docsSidebar"},"functions-runtime-thread":{"id":"functions-runtime-thread","title":"Configure thread runtime","description":"You can use the default configurations of thread runtime in the conf/functions_worker.yml file.","sidebar":"docsSidebar"},"functions-worker":{"id":"functions-worker","title":"Set up function workers","description":"You have two ways to set up function workers.","sidebar":"docsSidebar"},"functions-worker-corun":{"id":"functions-worker-corun","title":"Run function workers with brokers","description":"The following diagram illustrates the deployment of function workers running along with brokers.","sidebar":"docsSidebar"},"functions-worker-for-geo-replication":{"id":"functions-worker-for-geo-replication","title":"Configure function workers for geo-replicated clusters","description":"When running multiple clusters tied together with geo replication, you need to use a different function namespace for each cluster. Otherwise, all functions share one namespace and potentially schedule assignments across clusters.","sidebar":"docsSidebar"},"functions-worker-run-separately":{"id":"functions-worker-run-separately","title":"Run function workers separately","description":"The following diagram illustrates how function workers run as a separate process in separate machines.","sidebar":"docsSidebar"},"functions-worker-stateful":{"id":"functions-worker-stateful","title":"Enable stateful functions","description":"When the stateful APIs of Pulsar Functions are required \u2013 for example, putState() and queryState() related interfaces \u2013 you need to enable the stateful function feature in function workers.","sidebar":"docsSidebar"},"functions-worker-temp-file-path":{"id":"functions-worker-temp-file-path","title":"Configure temporary file path","description":"Function workers use java.io.tmpdir in the JVM as the default temporary file path, which is also used as the default extraction file path for each NAR package. NAR packages require a local file path to extract and load to the Java class loader.","sidebar":"docsSidebar"},"functions-worker-troubleshooting":{"id":"functions-worker-troubleshooting","title":"Troubleshooting","description":"Error message: Namespace missing local cluster name in clusters list","sidebar":"docsSidebar"},"get-started-pulsar-admin":{"id":"get-started-pulsar-admin","title":"Get started with pulsar-admin CLI tool","description":"This tutorial guides you through every step of using pulsar-admin CLI to manage topics. It includes the following steps:"},"getting-started-docker":{"id":"getting-started-docker","title":"Run a standalone Pulsar cluster in Docker","description":"For local development and testing, you can run Pulsar in standalone mode on your own machine within a Docker container.","sidebar":"docsSidebar"},"getting-started-docker-compose":{"id":"getting-started-docker-compose","title":"Run a Pulsar cluster locally with Docker Compose","description":"Configure the compose.yml template","sidebar":"docsSidebar"},"getting-started-helm":{"id":"getting-started-helm","title":"Run a standalone Pulsar cluster in Kubernetes","description":"This section guides you through every step of installing and running Apache Pulsar with Helm on Kubernetes quickly, including the following sections:","sidebar":"docsSidebar"},"getting-started-home":{"id":"getting-started-home","title":"Get started","description":"Getting up and running with Pulsar is simple. Download it, install it, and try it out.","sidebar":"docsSidebar"},"getting-started-standalone":{"id":"getting-started-standalone","title":"Run a standalone Pulsar cluster locally","description":"For local development and testing, you can run Pulsar in standalone mode on your machine. The standalone mode runs all components inside a single Java Virtual Machine (JVM) process.","sidebar":"docsSidebar"},"helm-deploy":{"id":"helm-deploy","title":"Deploy a Pulsar cluster on Kubernetes","description":"Before deploying a Pulsar cluster, you need to prepare Kubernetes resources and then continue with the following steps.","sidebar":"docsSidebar"},"helm-install":{"id":"helm-install","title":"Install Apache Pulsar using Helm","description":""},"helm-overview":{"id":"helm-overview","title":"Apache Pulsar Helm Chart","description":""},"helm-prepare":{"id":"helm-prepare","title":"Prepare Kubernetes resources","description":"For a fully functional Pulsar cluster, you need a few resources before deploying the Apache Pulsar Helm Chart. This section provides the information about the preparations you need to do before deploying the Pulsar Helm Chart.","sidebar":"docsSidebar"},"helm-tools":{"id":"helm-tools","title":"Required tools for deploying Pulsar Helm Chart","description":""},"helm-upgrade":{"id":"helm-upgrade","title":"Upgrade Pulsar Helm release","description":"To upgrade Apache Pulsar Helm to a newer version, complete the following steps:","sidebar":"docsSidebar"},"how-to-landing":{"id":"how-to-landing","title":"How-to","description":"Learning new software can be an overwhelming task, but relax \u2013 most aspects of Pulsar can be easily configured in just a few steps. These tutorials will show you how to quickly create topics, tenants, and namespaces, produce and consume messages, and more!","sidebar":"docsSidebar"},"install-deploy-upgrade-landing":{"id":"install-deploy-upgrade-landing","title":"Install, Deploy and Upgrade Pulsar","description":"Any developer can install, deploy, and upgrade Apache Pulsar in a few simple steps and start building scalable, real-time applications quickly. The resources below will kickstart your deployment!","sidebar":"docsSidebar"},"io-aerospike":{"id":"io-aerospike","title":"Aerospike Sink Connector","description":""},"io-aerospike-sink":{"id":"io-aerospike-sink","title":"Aerospike sink connector","description":"You can download all the Pulsar connectors on download page."},"io-alluxio":{"id":"io-alluxio","title":"Alluxio sink connector","description":"You can download all the Pulsar connectors on download page."},"io-canal-source":{"id":"io-canal-source","title":"Canal source connector","description":"You can download all the Pulsar connectors on download page."},"io-cassandra":{"id":"io-cassandra","title":"Cassandra Sink Connector","description":""},"io-cassandra-sink":{"id":"io-cassandra-sink","title":"Cassandra sink connector","description":"You can download all the Pulsar connectors on download page."},"io-cdc":{"id":"io-cdc","title":"CDC connector","description":"CDC source connectors capture log changes of databases (such as MySQL, MongoDB, and PostgreSQL) into Pulsar.","sidebar":"docsSidebar"},"io-cdc-canal":{"id":"io-cdc-canal","title":"CDC Canal Connector","description":""},"io-cdc-debezium":{"id":"io-cdc-debezium","title":"Debezium source connector","description":"You can download all the Pulsar connectors on download page."},"io-cli":{"id":"io-cli","title":"Connector Admin CLI","description":"This page is deprecated and not updated anymore. For the latest and complete information about Pulsar-admin, including commands, flags, descriptions, and more, see Pulsar admin docs."},"io-connectors":{"id":"io-connectors","title":"Built-in connector","description":"Pulsar distribution includes a set of common connectors that have been packaged and tested with the rest of Apache Pulsar. These connectors import and export data from some of the most commonly used data systems.","sidebar":"docsSidebar"},"io-debezium-source":{"id":"io-debezium-source","title":"Debezium source connector","description":"You can download all the Pulsar connectors on download page."},"io-debug":{"id":"io-debug","title":"How to debug Pulsar connectors","description":"This guide explains how to debug connectors in localrun or cluster mode and gives a debugging checklist.","sidebar":"docsSidebar"},"io-develop":{"id":"io-develop","title":"How to develop Pulsar connectors","description":"This guide describes how to develop Pulsar connectors to move data","sidebar":"docsSidebar"},"io-dynamodb":{"id":"io-dynamodb","title":"AWS DynamoDB Connector","description":""},"io-dynamodb-source":{"id":"io-dynamodb-source","title":"AWS DynamoDB source connector","description":"You can download all the Pulsar connectors on download page."},"io-elasticsearch":{"id":"io-elasticsearch","title":"Elasticsearch Connector","description":""},"io-elasticsearch-sink":{"id":"io-elasticsearch-sink","title":"Elasticsearch sink connector","description":"You can download all the Pulsar connectors on download page."},"io-file":{"id":"io-file","title":"File Connector","description":""},"io-file-source":{"id":"io-file-source","title":"File source connector","description":"You can download all the Pulsar connectors on download page."},"io-flume-sink":{"id":"io-flume-sink","title":"Flume sink connector","description":"You can download all the Pulsar connectors on download page."},"io-flume-source":{"id":"io-flume-source","title":"Flume source connector","description":"You can download all the Pulsar connectors on download page."},"io-hbase":{"id":"io-hbase","title":"hbase Connector","description":""},"io-hbase-sink":{"id":"io-hbase-sink","title":"HBase sink connector","description":"You can download all the Pulsar connectors on download page."},"io-hdfs":{"id":"io-hdfs","title":"Hdfs Connector","description":""},"io-hdfs2-sink":{"id":"io-hdfs2-sink","title":"HDFS2 sink connector","description":"You can download all the Pulsar connectors on download page."},"io-hdfs3-sink":{"id":"io-hdfs3-sink","title":"HDFS3 sink connector","description":"You can download all the Pulsar connectors on download page."},"io-http-sink":{"id":"io-http-sink","title":"HTTP sink connector","description":"You can download all the Pulsar connectors on download page."},"io-influxdb":{"id":"io-influxdb","title":"InfluxDB Connector","description":""},"io-influxdb-sink":{"id":"io-influxdb-sink","title":"InfluxDB sink connector","description":"You can download all the Pulsar connectors on download page."},"io-jdbc":{"id":"io-jdbc","title":"JDBC Connector","description":""},"io-jdbc-sink":{"id":"io-jdbc-sink","title":"JDBC sink connector","description":"You can download all the Pulsar connectors on download page."},"io-kafka":{"id":"io-kafka","title":"Kafka Connector","description":""},"io-kafka-sink":{"id":"io-kafka-sink","title":"Kafka sink connector","description":"You can download all the Pulsar connectors on download page."},"io-kafka-source":{"id":"io-kafka-source","title":"Kafka source connector","description":"You can download all the Pulsar connectors on download page."},"io-kinesis":{"id":"io-kinesis","title":"AWS Kinesis Connector","description":""},"io-kinesis-sink":{"id":"io-kinesis-sink","title":"Kinesis sink connector","description":"You can download all the Pulsar connectors on download page."},"io-kinesis-source":{"id":"io-kinesis-source","title":"Kinesis source connector","description":"You can download all the Pulsar connectors on download page."},"io-mongo":{"id":"io-mongo","title":"MongoDB Connector","description":""},"io-mongo-sink":{"id":"io-mongo-sink","title":"MongoDB sink connector","description":"You can download all the Pulsar connectors on download page."},"io-mongo-source":{"id":"io-mongo-source","title":"MongoDB source connector","description":"You can download all the Pulsar connectors on download page."},"io-netty":{"id":"io-netty","title":"Netty Tcp or Udp Connector","description":""},"io-netty-source":{"id":"io-netty-source","title":"Netty source connector","description":"You can download all the Pulsar connectors on download page."},"io-nsq":{"id":"io-nsq","title":"NSQ Connector","description":""},"io-nsq-source":{"id":"io-nsq-source","title":"NSQ source connector","description":"You can download all the Pulsar connectors on download page."},"io-overview":{"id":"io-overview","title":"Pulsar connector overview","description":"Messaging systems are most powerful when you can easily use them with external systems like databases and other messaging systems.","sidebar":"docsSidebar"},"io-quickstart":{"id":"io-quickstart","title":"How to connect Pulsar to database","description":"This tutorial provides a hands-on look at how you can move data out of Pulsar without writing a single line of code.","sidebar":"docsSidebar"},"io-rabbitmq":{"id":"io-rabbitmq","title":"RabbitMQ Connector","description":""},"io-rabbitmq-sink":{"id":"io-rabbitmq-sink","title":"RabbitMQ sink connector","description":"You can download all the Pulsar connectors on download page."},"io-rabbitmq-source":{"id":"io-rabbitmq-source","title":"RabbitMQ source connector","description":"You can download all the Pulsar connectors on download page."},"io-redis":{"id":"io-redis","title":"redis Connector","description":""},"io-redis-sink":{"id":"io-redis-sink","title":"Redis sink connector","description":"You can download all the Pulsar connectors on download page."},"io-solr":{"id":"io-solr","title":"solr Connector","description":""},"io-solr-sink":{"id":"io-solr-sink","title":"Solr sink connector","description":"You can download all the Pulsar connectors on download page."},"io-tcp":{"id":"io-tcp","title":"Netty Tcp Connector","description":""},"io-twitter":{"id":"io-twitter","title":"Twitter Firehose Connector","description":""},"io-twitter-source":{"id":"io-twitter-source","title":"Twitter Firehose source connector","description":"You can download all the Pulsar connectors on download page."},"io-use":{"id":"io-use","title":"How to use Pulsar connectors","description":"This guide describes how to use Pulsar connectors.","sidebar":"docsSidebar"},"kubernetes-helm":{"id":"kubernetes-helm","title":"Get started in Kubernetes","description":"This page has been deprecated and is no longer updated. For the latest and complete information about running Pulsar in Kubernetes, see the quick start guide."},"performance-pulsar-perf":{"id":"performance-pulsar-perf","title":"Pulsar Perf","description":"The Pulsar Perf is a built-in performance test tool for Apache Pulsar. You can use the Pulsar Perf to test message writing or reading performance. For detailed information about performance tuning, see here.","sidebar":"docsSidebar"},"pulsar-api-overview":{"id":"pulsar-api-overview","title":"Pulsar APIs","description":"Pulsar is a messaging and streaming platform that scales across organizations of all sizes.","sidebar":"docsSidebar"},"reference-cli-tools":{"id":"reference-cli-tools","title":"Pulsar command-line tools","description":"Pulsar offers several command-line tools that you can use for managing Pulsar installations, performance testing, using command-line producers and consumers, and more.","sidebar":"docsSidebar"},"reference-configuration":{"id":"reference-configuration","title":"Pulsar Configuration","description":"For a complete list of Pulsar configuration, visit the Pulsar Reference website.","sidebar":"docsSidebar"},"reference-connector-admin":{"id":"reference-connector-admin","title":"Connector Admin CLI","description":"For the latest and complete information about Pulsar admin, including commands, flags, descriptions, and more information, see Pulsar admin docs."},"reference-landing":{"id":"reference-landing","title":"Reference","description":"This reference section provides an overview of Apache Pulsar\'s key concepts, terminology, and features. You\'ll find more detailed information in the resources listed below. Happy streaming!","sidebar":"docsSidebar"},"reference-metrics":{"id":"reference-metrics","title":"Pulsar metrics","description":"Pulsar exposes the following metrics in Prometheus format. You can monitor your clusters with those metrics.","sidebar":"docsSidebar"},"reference-pulsar-admin":{"id":"reference-pulsar-admin","title":"Pulsar admin CLI","description":"This page is deprecated and not updated anymore. For the latest and complete information about Pulsar admin, including commands, flags, descriptions, and more, see Pulsar admin doc."},"reference-rest-api-overview":{"id":"reference-rest-api-overview","title":"Pulsar REST APIs","description":"A REST API (also known as RESTful API, REpresentational State Transfer Application Programming Interface) is a set of definitions and protocols for building and integrating application software, using HTTP requests to GET, PUT, POST, and DELETE data following the REST standards. In essence, REST API is a set of remote calls using standard methods to request and return data in a specific format between two systems.","sidebar":"docsSidebar"},"reference-terminology":{"id":"reference-terminology","title":"Pulsar Terminology","description":"Here is a glossary of terms related to Apache Pulsar:","sidebar":"docsSidebar"},"schema-evolution-compatibility":{"id":"schema-evolution-compatibility","title":"Schema evolution and compatibility","description":""},"schema-get-started":{"id":"schema-get-started","title":"Get started","description":"This hands-on tutorial provides instructions and examples on how to construct schemas. For instructions on administrative tasks, see Manage schema.","sidebar":"docsSidebar"},"schema-manage":{"id":"schema-manage","title":"Manage schema","description":""},"schema-overview":{"id":"schema-overview","title":"Overview","description":"This section introduces the following content:","sidebar":"docsSidebar"},"schema-understand":{"id":"schema-understand","title":"Understand schema","description":"This section explains the basic concepts of Pulsar schema and provides additional references.","sidebar":"docsSidebar"},"security-athenz":{"id":"security-athenz","title":"Authentication using Athenz","description":"Athenz is a role-based authentication/authorization system. In Pulsar, you can use Athenz role tokens (also known as z-tokens) to establish the identity of the client.","sidebar":"docsSidebar"},"security-authorization":{"id":"security-authorization","title":"Authentication and authorization in Pulsar","description":"In Pulsar, the authentication provider is responsible for properly identifying clients and associating the clients with role tokens. If you only enable authentication, an authenticated role token can access all resources in the cluster. Authorization is the process that determines what clients can do.","sidebar":"docsSidebar"},"security-basic-auth":{"id":"security-basic-auth","title":"Authentication using HTTP basic","description":"Basic authentication is a simple authentication scheme built into the HTTP protocol, which uses base64-encoded username and password pairs as credentials.","sidebar":"docsSidebar"},"security-bouncy-castle":{"id":"security-bouncy-castle","title":"Bouncy Castle Providers","description":"BouncyCastle Introduce","sidebar":"docsSidebar"},"security-encryption":{"id":"security-encryption","title":"End-to-End Encryption","description":"Applications can use Pulsar end-to-end encryption (E2EE) to encrypt messages on the producer side and decrypt messages on the consumer side. You can use the public and private key pair that the application configures to perform encryption and decryption. Only the consumers with a valid key can decrypt the encrypted messages.","sidebar":"docsSidebar"},"security-extending":{"id":"security-extending","title":"Extend Authentication and Authorization in Pulsar","description":"Pulsar provides a way to use custom authentication and authorization mechanisms.","sidebar":"docsSidebar"},"security-jwt":{"id":"security-jwt","title":"Authentication using tokens based on JSON Web Tokens","description":"Pulsar supports authenticating clients using security tokens based on JSON Web Tokens (RFC-7519), including all the algorithms that the Java JWT library supports.","sidebar":"docsSidebar"},"security-kerberos":{"id":"security-kerberos","title":"Authentication using Kerberos","description":"Kerberos is a network authentication protocol designed to provide strong authentication for client applications and server applications by using secret-key cryptography.","sidebar":"docsSidebar"},"security-oauth2":{"id":"security-oauth2","title":"Authentication using OAuth 2.0 access tokens","description":"Pulsar supports authenticating clients using OAuth 2.0 access tokens. Using an access token obtained from an OAuth 2.0 authorization service (acts as a token issuer), you can identify a Pulsar client and associate it with a \\"principal\\" (or \\"role\\") that is permitted to do some actions, such as publishing messages to a topic or consuming messages from a topic.","sidebar":"docsSidebar"},"security-openid-connect":{"id":"security-openid-connect","title":"Authentication using OpenID Connect","description":"Apache Pulsar supports authenticating clients using OpenID Connect, which is an implementation of the OAuth 2.0 Protocol. Using an access token obtained from an OpenID Connect compliant Identity Provider service acting as the token issuer, you can identify a Pulsar client and associate it with a \\"principal\\" (or \\"role\\") that is permitted to do some actions, such as publishing messages to a topic or performing some admin operation.","sidebar":"docsSidebar"},"security-overview":{"id":"security-overview","title":"Pulsar security overview","description":"As the central message bus for a business, Apache Pulsar is frequently used for storing mission-critical data. Therefore, enabling security features in Pulsar is crucial. This chapter describes the main security controls that Pulsar uses to help protect your data.","sidebar":"docsSidebar"},"security-tls-authentication":{"id":"security-tls-authentication","title":"Authentication using mTLS","description":"mTLS authentication overview","sidebar":"docsSidebar"},"security-tls-transport":{"id":"security-tls-transport","title":"TLS Encryption","description":"TLS overview","sidebar":"docsSidebar"},"security-token-admin":{"id":"security-token-admin","title":"Token authentication admin","description":"Token Authentication Overview"},"sql-deployment-configurations":{"id":"sql-deployment-configurations","title":"Pulsar SQL configuration and deployment","description":"You can configure the Pulsar Trino plugin and deploy a cluster with the following instruction.","sidebar":"docsSidebar"},"sql-getting-started":{"id":"sql-getting-started","title":"Query data with Pulsar SQL","description":"Before querying data in Pulsar, you need to install Pulsar and built-in connectors.","sidebar":"docsSidebar"},"sql-overview":{"id":"sql-overview","title":"Pulsar SQL Overview","description":"Apache Pulsar is used to store streams of event data, and the event data is structured with predefined fields. With the implementation of the Schema Registry, you can store structured data in Pulsar and query the data by using Trino (formerly Presto SQL).","sidebar":"docsSidebar"},"sql-rest-api":{"id":"sql-rest-api","title":"Pulsar SQL REST APIs","description":"This section lists resources that make up the Trino REST API v1.","sidebar":"docsSidebar"},"standalone":{"id":"standalone","title":"Set up a standalone Pulsar locally","description":""},"standalone-docker":{"id":"standalone-docker","title":"Set up a standalone Pulsar in Docker","description":"For local development and testing, you can run Pulsar in standalone mode on your own machine within a Docker container."},"tiered-storage-aliyun":{"id":"tiered-storage-aliyun","title":"Use Aliyun OSS offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the Aliyun Object Storage Service (OSS) offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-aws":{"id":"tiered-storage-aws","title":"Use AWS S3 offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the AWS S3 offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-azure":{"id":"tiered-storage-azure","title":"Use Azure BlobStore offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the Azure BlobStore offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-filesystem":{"id":"tiered-storage-filesystem","title":"Use filesystem offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the filesystem offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-gcs":{"id":"tiered-storage-gcs","title":"Use GCS offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the GCS offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-overview":{"id":"tiered-storage-overview","title":"Overview of tiered storage","description":"Pulsar\'s Tiered Storage feature allows older backlog data to be moved from BookKeeper to long-term and cheaper storage, while still allowing clients to access the backlog as if nothing has changed.","sidebar":"docsSidebar"},"tiered-storage-s3":{"id":"tiered-storage-s3","title":"Use S3 offloader with Pulsar","description":"S3 offloader is introduced to serve S3-compatible storage, which means that the storage employs the S3 API as its \\"language\\" and applications that speak the S3 API are able to plug and play with S3-compatible storage.","sidebar":"docsSidebar"},"transactions":{"id":"transactions","title":"Transactions","description":"Transactional semantics enable event streaming applications to consume, process, and produce messages in one atomic operation. In Pulsar, a producer or consumer can work with messages across multiple topics and partitions and ensure those messages are processed as a single unit."},"transactions-api":{"id":"transactions-api","title":"Transactions API","description":"All messages in a transaction are available only to consumers after the transaction has been committed. If a transaction has been aborted, all the writes and acknowledgments in this transaction roll back."},"transactions-guarantee":{"id":"transactions-guarantee","title":"Transactions Guarantee","description":"Pulsar transactions support the following guarantee."},"tutorials-namespace":{"id":"tutorials-namespace","title":"Create a namespace","description":"Pulsar namespaces are logical groupings of topics.","sidebar":"docsSidebar"},"tutorials-produce-consume":{"id":"tutorials-produce-consume","title":"Produce and consume messages","description":"In this tutorial, we will:","sidebar":"docsSidebar"},"tutorials-tenant":{"id":"tutorials-tenant","title":"How to set up a tenant","description":"Pulsar is a powerful messaging system you can use to process and route high volumes of data. Each tenant provides a distinct unit of isolation with its own set of roles, permissions, configuration settings, and bookmarks.","sidebar":"docsSidebar"},"tutorials-topic":{"id":"tutorials-topic","title":"How to create a topic","description":"Apache Pulsar is a distributed messaging system that supports high performance and low latency. Topics are the primary way to structure data in Apache Pulsar. A Pulsar topic is a unit of storage that organizes messages into a stream. Each message in a topic has an offset, which uniquely identifies the message within the topic.","sidebar":"docsSidebar"},"txn-advanced-features":{"id":"txn-advanced-features","title":"Advanced features","description":"You can use the following advanced features with transactions in Pulsar.","sidebar":"docsSidebar"},"txn-how":{"id":"txn-how","title":"How transactions work?","description":"This section describes transaction components and how the components work together. For the complete design details, see PIP-31: Transactional Streaming.","sidebar":"docsSidebar"},"txn-monitor":{"id":"txn-monitor","title":"How to monitor transactions?","description":"You can monitor the status of the transactions in Prometheus and Grafana using the transaction metrics.","sidebar":"docsSidebar"},"txn-use":{"id":"txn-use","title":"Get started","description":"Pulsar transaction is primarily a server-side and protocol-level feature. This tutorial guides you through every step of how to use the Pulsar transaction API to send and receive messages in a Java client.","sidebar":"docsSidebar"},"txn-what":{"id":"txn-what","title":"What are transactions?","description":"Transactions strengthen the message delivery semantics of Apache Pulsar and processing guarantees of Pulsar Functions. The Pulsar Transaction API supports atomic writes and acknowledgments across multiple topics.","sidebar":"docsSidebar"},"txn-why":{"id":"txn-why","title":"Why transactions?","description":"Pulsar transactions (txn) enable event streaming applications to consume, process, and produce messages in one atomic operation. The reason for developing this feature can be summarized as below.","sidebar":"docsSidebar"},"window-functions-context":{"id":"window-functions-context","title":"Window Functions Context","description":"Java SDK provides access to a window context object that can be used by a window function. This context object provides a wide variety of information and functionality for Pulsar window functions as below.","sidebar":"docsSidebar"}}}}')}}]);
"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[55139],{55061:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"getting-started-docker-compose","title":"Run a Pulsar cluster locally with Docker Compose","description":"Get started with Apache Pulsar on your local machine using Docker Compose.","source":"@site/versioned_docs/version-3.2.x/getting-started-docker-compose.md","sourceDirName":".","slug":"/getting-started-docker-compose","permalink":"/docs/3.2.x/getting-started-docker-compose","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-3.2.x/getting-started-docker-compose.md","tags":[],"version":"3.2.x","frontMatter":{"id":"getting-started-docker-compose","title":"Run a Pulsar cluster locally with Docker Compose","sidebar_label":"Run Pulsar locally with Docker Compose","description":"Get started with Apache Pulsar on your local machine using Docker Compose."},"sidebar":"docsSidebar","previous":{"title":"Run Pulsar in Kubernetes","permalink":"/docs/3.2.x/getting-started-helm"},"next":{"title":"Overview","permalink":"/docs/3.2.x/concepts-overview"}}');var t=n(74848),a=n(28453);const s={id:"getting-started-docker-compose",title:"Run a Pulsar cluster locally with Docker Compose",sidebar_label:"Run Pulsar locally with Docker Compose",description:"Get started with Apache Pulsar on your local machine using Docker Compose."},i=void 0,c={},l=[{value:"Step 1: Configure the <code>compose.yml</code> template",id:"step-1-configure-the-composeyml-template",level:2},{value:"Step 2: Create a Pulsar cluster",id:"step-2-create-a-pulsar-cluster",level:2},{value:"Step 3: Destroy the Pulsar cluster",id:"step-3-destroy-the-pulsar-cluster",level:2}];function p(e){const o={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.p,{children:"To run Pulsar loccally with Docker Compose, follow the steps below."}),"\n",(0,t.jsxs)(o.h2,{id:"step-1-configure-the-composeyml-template",children:["Step 1: Configure the ",(0,t.jsx)(o.code,{children:"compose.yml"})," template"]}),"\n",(0,t.jsxs)(o.p,{children:["To get up and run a Pulsar cluster quickly, you can use the following template to create a ",(0,t.jsx)(o.code,{children:"compose.yml"})," file by modifying or adding the configurations in the ",(0,t.jsx)(o.strong,{children:"environment"})," section."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yaml",children:'version: \'3\'\nnetworks:\n  pulsar:\n    driver: bridge\nservices:\n  # Start zookeeper\n  zookeeper:\n    image: apachepulsar/pulsar:latest\n    container_name: zookeeper\n    restart: on-failure\n    networks:\n      - pulsar\n    volumes:\n      - ./data/zookeeper:/pulsar/data/zookeeper\n    environment:\n      - metadataStoreUrl=zk:zookeeper:2181\n      - PULSAR_MEM=-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m\n    command: |\n      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \\\n             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \\\n             exec bin/pulsar zookeeper"\n    healthcheck:\n      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]\n      interval: 10s\n      timeout: 5s\n      retries: 30\n\n  # Init cluster metadata\n  pulsar-init:\n    container_name: pulsar-init\n    hostname: pulsar-init\n    image: apachepulsar/pulsar:latest\n    networks:\n      - pulsar\n    command: |\n      bin/pulsar initialize-cluster-metadata \\\n               --cluster cluster-a \\\n               --zookeeper zookeeper:2181 \\\n               --configuration-store zookeeper:2181 \\\n               --web-service-url http://broker:8080 \\\n               --broker-service-url pulsar://broker:6650\n    depends_on:\n      zookeeper:\n        condition: service_healthy\n\n  # Start bookie\n  bookie:\n    image: apachepulsar/pulsar:latest\n    container_name: bookie\n    restart: on-failure\n    networks:\n      - pulsar\n    environment:\n      - clusterName=cluster-a\n      - zkServers=zookeeper:2181\n      - metadataServiceUri=metadata-store:zk:zookeeper:2181\n      # otherwise every time we run docker compose uo or down we fail to start due to Cookie\n      # See: https://github.com/apache/bookkeeper/blob/405e72acf42bb1104296447ea8840d805094c787/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java#L57-68\n      - advertisedAddress=bookie\n      - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m\n    depends_on:\n      zookeeper:\n        condition: service_healthy\n      pulsar-init:\n        condition: service_completed_successfully\n    # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.\n    volumes:\n      - ./data/bookkeeper:/pulsar/data/bookkeeper\n    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"\n\n  # Start broker\n  broker:\n    image: apachepulsar/pulsar:latest\n    container_name: broker\n    hostname: broker\n    restart: on-failure\n    networks:\n      - pulsar\n    environment:\n      - metadataStoreUrl=zk:zookeeper:2181\n      - zookeeperServers=zookeeper:2181\n      - clusterName=cluster-a\n      - managedLedgerDefaultEnsembleSize=1\n      - managedLedgerDefaultWriteQuorum=1\n      - managedLedgerDefaultAckQuorum=1\n      - advertisedAddress=broker\n      - advertisedListeners=external:pulsar://127.0.0.1:6650\n      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m\n    depends_on:\n      zookeeper:\n        condition: service_healthy\n      bookie:\n        condition: service_started\n    ports:\n      - "6650:6650"\n      - "8080:8080"\n    command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"\n'})}),"\n",(0,t.jsx)(o.h2,{id:"step-2-create-a-pulsar-cluster",children:"Step 2: Create a Pulsar cluster"}),"\n",(0,t.jsx)(o.p,{children:"As preparation, create data directories and change the data directory ownership to uid(10000) which is the default user id used in the Pulsar Docker container."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"sudo mkdir -p ./data/zookeeper ./data/bookkeeper\n# this step might not be necessary on other than Linux platforms\nsudo chown -R 10000 data\n"})}),"\n",(0,t.jsxs)(o.p,{children:["To create a Pulsar cluster by using the ",(0,t.jsx)(o.code,{children:"compose.yml"})," file, run the following command."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"docker compose up -d\n"})}),"\n",(0,t.jsx)(o.h2,{id:"step-3-destroy-the-pulsar-cluster",children:"Step 3: Destroy the Pulsar cluster"}),"\n",(0,t.jsx)(o.p,{children:"If you want to destroy the Pulsar cluster with all the containers, run the following command. It will also delete the network that the containers are connected to."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-bash",children:"docker compose down\n"})})]})}function d(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>i});var r=n(96540);const t={},a=r.createContext(t);function s(e){const o=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:o},e.children)}}}]);
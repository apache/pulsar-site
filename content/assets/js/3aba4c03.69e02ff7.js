"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[2372],{59495:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"versioned/pulsar-cs-0.11.0","title":"Pulsar DotPulsar","description":"Added","source":"@site/release-notes/versioned/pulsar-cs-0.11.0.md","sourceDirName":"versioned","slug":"/versioned/pulsar-cs-0.11.0","permalink":"/release-notes/versioned/pulsar-cs-0.11.0","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/release-notes/versioned/pulsar-cs-0.11.0.md","tags":[],"version":"current","frontMatter":{"id":"pulsar-cs-0.11.0","title":"Pulsar DotPulsar","sidebar_label":"Pulsar DotPulsar"}}');var l=a(74848),s=a(28453);const o={id:"pulsar-cs-0.11.0",title:"Pulsar DotPulsar",sidebar_label:"Pulsar DotPulsar"},r=void 0,i={},d=[{value:"Added",id:"added",level:2},{value:"Changed",id:"changed",level:2},{value:"Fixed",id:"fixed",level:2}];function c(e){const n={a:"a",h2:"h2",li:"li",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"added",children:"Added"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The Consumer and Reader now share the IReceive interface for receiving a single message: ValueTask<Message> Receive(CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"The Consumer and Reader now share the ISeek interface for seeking on message-id and publish time"}),"\n",(0,l.jsx)(n.li,{children:"The Consumer and Reader now share the IGetLastMessageId interface for getting the last message-id on a topic"}),"\n",(0,l.jsx)(n.li,{children:"The Consumer, Reader, and Producer now share the IState interface adding 'OnStateChangeFrom' and 'OnStateChangeTo'"}),"\n",(0,l.jsx)(n.li,{children:"The PulsarClient, Consumer, Reader, and Producer now have the read-only property 'ServiceUrl'"}),"\n",(0,l.jsx)(n.li,{children:"The Consumer now have the read-only property 'SubscriptionName'"}),"\n",(0,l.jsxs)(n.li,{children:["All message compression types are now supported (listed below). Please read this ",(0,l.jsx)(n.a,{href:"https://github.com/apache/pulsar-dotpulsar/wiki/Compression",children:"compression how-to"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"LZ4"}),"\n",(0,l.jsx)(n.li,{children:"SNAPPY"}),"\n",(0,l.jsx)(n.li,{children:"ZLIB"}),"\n",(0,l.jsx)(n.li,{children:"ZSTD"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"changed",children:"Changed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'MessageId.ToString() now returns a string matching that of other clients: "{LedgerId}:{EntryId}:{Partition}:{BatchIndex}"'}),"\n",(0,l.jsxs)(n.li,{children:["A lot of methods were made into extension methods and now require a using statement for 'DotPulsar.Extensions'","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Producer.StateChangedTo(ProducerState state, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Producer.StateChangedFrom(ProducerState state, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Producer.Send(byte[] data, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Producer.Send(ReadOnlyMemory<byte> data, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Producer.Send(MessageMetadata metadata, byte[] data, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Producer.Send(MessageMetadata metadata, ReadOnlyMemory<byte> data, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Consumer.Acknowledge(Message message, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Consumer.AcknowledgeCumulative(Message message, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Consumer.StateChangedTo(ConsumerState state, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Consumer.StateChangedFrom(ConsumerState state, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Consumer.Messages(CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Consumer.Seek(DateTime publishTime, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Consumer.Seek(DateTimeOffset publishTime, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Reader.StateChangedTo(ReaderState state, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Reader.StateChangedFrom(ReaderState state, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Reader.Messages(CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Reader.Seek(DateTime publishTime, CancellationToken cancellationToken)"}),"\n",(0,l.jsx)(n.li,{children:"Reader.Seek(DateTimeOffset publishTime, CancellationToken cancellationToken)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"fixed",children:"Fixed"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Before the Consumer and Reader would throw an ArgumentOutOfRangeException if they encountered a compressed message. Now they will throw a CompressionException if the compression type is not supported"}),"\n",(0,l.jsx)(n.li,{children:"DotPulsarEventSource (performance counters) was only enabled for .NET Standard 2.1. Now it's enabled for all target frameworks except .NET Standard 2.0"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>r});var t=a(96540);const l={},s=t.createContext(l);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);
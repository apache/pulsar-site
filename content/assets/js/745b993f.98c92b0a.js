"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[74950],{39124:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"versioned/client-cpp-2.7.1","title":"Client CPP 2.7.1","description":"- C++] Add \'encrypted\' option in commands.newproducer() [#9542","source":"@site/release-notes/versioned/client-cpp-2.7.1.md","sourceDirName":"versioned","slug":"/versioned/client-cpp-2.7.1","permalink":"/release-notes/versioned/client-cpp-2.7.1","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/release-notes/versioned/client-cpp-2.7.1.md","tags":[],"version":"current","frontMatter":{"id":"client-cpp-2.7.1","title":"Client CPP 2.7.1","sidebar_label":"Client CPP 2.7.1"}}');var i=t(74848),r=t(28453);const l={id:"client-cpp-2.7.1",title:"Client CPP 2.7.1",sidebar_label:"Client CPP 2.7.1"},c=void 0,a={},p=[];function o(e){const n={a:"a",li:"li",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["[C++] Add 'encrypted' option in commands.newproducer() ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/9542",children:"#9542"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Remove namespace check for MultiTopicsConsumerImpl ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/9520",children:"#9520"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Fix broken replication msg to specific cluster ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/9372",children:"#9372"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Fix compilation issue caused by non-virtual destructor ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/9106",children:"#9106"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Expose cpp end to end encryption interface ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/9074",children:"#9074"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Fix Consumer send redeliverMessages repeatedly ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/9072",children:"#9072"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Add consumer's configs for reader ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/8905",children:"#8905"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Add reader internal subscription name setter ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/8823",children:"#8823"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Fix race condition in BlockingQueue ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/8765",children:"#8765"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Fix cpp client do AcknowledgeCumulative not clean up previous message ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/8606",children:"#8606"})]}),"\n",(0,i.jsxs)(n.li,{children:["[C++] Implement batch aware producer router ",(0,i.jsx)(n.a,{href:"https://github.com/apache/pulsar/pull/8395",children:"#8395"})]}),"\n"]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var s=t(96540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
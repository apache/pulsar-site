"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[889],{68478:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"client-libraries-node","title":"The Pulsar Node.js client","description":"You can use a Pulsar Node.js client to create producers, consumers, and readers. For Pulsar features that Python clients support, see Client Feature Matrix.","source":"@site/versioned_docs/version-2.11.x/client-libraries-node.md","sourceDirName":".","slug":"/client-libraries-node","permalink":"/docs/2.11.x/client-libraries-node","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.11.x/client-libraries-node.md","tags":[],"version":"2.11.x","frontMatter":{"id":"client-libraries-node","title":"The Pulsar Node.js client","sidebar_label":"Node.js"},"sidebar":"docsSidebar","previous":{"title":"C++","permalink":"/docs/2.11.x/client-libraries-cpp"},"next":{"title":"WebSocket","permalink":"/docs/2.11.x/client-libraries-websocket"}}');var n=s(74848),i=s(28453);const r={id:"client-libraries-node",title:"The Pulsar Node.js client",sidebar_label:"Node.js"},c=void 0,d={},o=[{value:"Installation",id:"installation",level:2},{value:"Connection URLs",id:"connection-urls",level:2},{value:"Release notes",id:"release-notes",level:2},{value:"Create a client",id:"create-a-client",level:2},{value:"Client configuration",id:"client-configuration",level:3},{value:"Producers",id:"producers",level:2},{value:"Promise operation",id:"promise-operation",level:4},{value:"Producer operations",id:"producer-operations",level:3},{value:"Producer configuration",id:"producer-configuration",level:3},{value:"Producer example",id:"producer-example",level:3},{value:"Consumers",id:"consumers",level:2},{value:"Promise operation",id:"promise-operation-1",level:4},{value:"Consumer operations",id:"consumer-operations",level:3},{value:"Consumer configuration",id:"consumer-configuration",level:3},{value:"Consumer example",id:"consumer-example",level:3},{value:"Readers",id:"readers",level:2},{value:"Reader operations",id:"reader-operations",level:3},{value:"Reader configuration",id:"reader-configuration",level:3},{value:"Reader example",id:"reader-example",level:3},{value:"Messages",id:"messages",level:2},{value:"Message object operations",id:"message-object-operations",level:3},{value:"Message ID object operations",id:"message-id-object-operations",level:3},{value:"End-to-end encryption",id:"end-to-end-encryption",level:2}];function a(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["You can use a Pulsar Node.js client to create producers, consumers, and readers. For Pulsar features that Python clients support, see ",(0,n.jsx)(t.a,{href:"https://docs.google.com/spreadsheets/d/1YHYTkIXR8-Ql103u-IMI18TXLlGStK8uJjDsOOA0T20/edit#gid=1784579914",children:"Client Feature Matrix"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["For 1.3.0 or later versions, ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar-client-node/blob/master/index.d.ts",children:"type definitions"})," used in TypeScript are available."]}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsxs)(t.p,{children:["Install the ",(0,n.jsx)(t.a,{href:"https://www.npmjs.com/package/pulsar-client",children:(0,n.jsx)(t.code,{children:"pulsar-client"})})," library via ",(0,n.jsx)(t.a,{href:"https://www.npmjs.com/",children:"npm"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"npm install pulsar-client\n"})}),"\n",(0,n.jsxs)(t.p,{children:["For more information, see ",(0,n.jsx)(t.a,{href:"https://github.com/apache/pulsar-client-node/blob/master/README.md",children:"README"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["This library only works in Node.js 10.x or later versions because it uses the ",(0,n.jsx)(t.a,{href:"https://github.com/nodejs/node-addon-api",children:(0,n.jsx)(t.code,{children:"node-addon-api"})})," module."]})}),"\n",(0,n.jsx)(t.h2,{id:"connection-urls",children:"Connection URLs"}),"\n",(0,n.jsxs)(t.p,{children:["To connect to Pulsar using client libraries, you need to specify a ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/developing-binary-protocol",children:"Pulsar protocol"})," URL."]}),"\n",(0,n.jsxs)(t.p,{children:["You can assign Pulsar protocol URLs to specific clusters and use the ",(0,n.jsx)(t.code,{children:"pulsar"})," scheme. The following is an example of ",(0,n.jsx)(t.code,{children:"localhost"})," with the default port ",(0,n.jsx)(t.code,{children:"6650"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",children:"pulsar://localhost:6650\n"})}),"\n",(0,n.jsxs)(t.p,{children:["If you have multiple brokers, separate ",(0,n.jsx)(t.code,{children:"IP:port"})," by commas:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",children:"pulsar://localhost:6550,localhost:6651,localhost:6652\n"})}),"\n",(0,n.jsxs)(t.p,{children:["If you use ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/security-tls-authentication",children:"mTLS authentication"}),", add ",(0,n.jsx)(t.code,{children:"+ssl"})," in the scheme:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-http",children:"pulsar+ssl://pulsar.us-west.example.com:6651\n"})}),"\n",(0,n.jsx)(t.h2,{id:"release-notes",children:"Release notes"}),"\n",(0,n.jsxs)(t.p,{children:["For the changelog of Pulsar Node.js clients, see ",(0,n.jsx)(t.a,{href:"/release-notes/#nodejs",children:"release notes"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"create-a-client",children:"Create a client"}),"\n",(0,n.jsxs)(t.p,{children:["To interact with Pulsar, you first need a client object. You can create a client instance using a ",(0,n.jsx)(t.code,{children:"new"})," operator and the ",(0,n.jsx)(t.code,{children:"Client"})," method, passing in a client options object (more on configuration ",(0,n.jsx)(t.a,{href:"#client-configuration",children:"below"}),")."]}),"\n",(0,n.jsx)(t.p,{children:"Here is an example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const Pulsar = require('pulsar-client');\n\n(async () => {\n  const client = new Pulsar.Client({\n    serviceUrl: 'pulsar://localhost:6650',\n  });\n\n  await client.close();\n})();\n"})}),"\n",(0,n.jsx)(t.h3,{id:"client-configuration",children:"Client configuration"}),"\n",(0,n.jsx)(t.p,{children:"The following configurable parameters are available for Pulsar clients:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"serviceUrl"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The connection URL for the Pulsar cluster. See ",(0,n.jsx)(t.a,{href:"#connection-urls",children:"above"})," for more info."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"authentication"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Configure the authentication provider. (default: no authentication). See ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/security-tls-authentication",children:"mTLS authentication"})," for more info."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"operationTimeoutSeconds"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The timeout for Node.js client operations (creating producers, subscribing to and unsubscribing from ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#topic",children:"topics"}),"). Retries occur until this threshold is reached, at which point the operation fails."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"30"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"ioThreads"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The number of threads to use for handling connections to Pulsar ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#broker",children:"brokers"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"1"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"messageListenerThreads"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The number of threads used by message listeners (",(0,n.jsx)(t.a,{href:"#consumers",children:"consumers"})," and ",(0,n.jsx)(t.a,{href:"#readers",children:"readers"}),")."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"1"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"concurrentLookupRequest"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The number of concurrent lookup requests that can be sent on each broker connection. Setting a maximum helps to keep from overloading brokers. You should set values over the default of 50000 only if the client needs to produce and/or subscribe to thousands of Pulsar topics."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"50000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"tlsTrustCertsFilePath"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The file path for the trusted TLS certificate."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"tlsValidateHostname"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The boolean value of setup whether to enable TLS hostname verification."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"false"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"tlsAllowInsecureConnection"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The boolean value of setup whether the Pulsar client accepts untrusted TLS certificate from broker."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"false"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"statsIntervalInSeconds"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Interval between each stat info. Stats is activated with positive statsInterval. The value should be set to 1 second at least"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"600"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"log"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"A function that is used for logging."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"console.log"})})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"producers",children:"Producers"}),"\n",(0,n.jsxs)(t.p,{children:["Pulsar producers publish messages to Pulsar topics. You can ",(0,n.jsx)(t.a,{href:"#producer-configuration",children:"configure"})," Node.js producers using a producer configuration object."]}),"\n",(0,n.jsx)(t.p,{children:"Here is an example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const producer = await client.createProducer({\n  topic: 'my-topic', // or 'my-tenant/my-namespace/my-topic' to specify topic's tenant and namespace\n});\n\nawait producer.send({\n  data: Buffer.from(\"Hello, Pulsar\"),\n});\n\nawait producer.close();\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.h4,{id:"promise-operation",children:"Promise operation"}),"\n",(0,n.jsxs)(t.p,{children:["When you create a new Pulsar producer, the operation returns ",(0,n.jsx)(t.code,{children:"Promise"})," object and get producer instance or an error through executor function.\nIn this example, use await operator instead of executor function."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"producer-operations",children:"Producer operations"}),"\n",(0,n.jsx)(t.p,{children:"Pulsar Node.js producers have the following methods available:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Return type"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"send(Object)"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Publishes a ",(0,n.jsx)(t.a,{href:"#messages",children:"message"})," to the producer's topic. When the message is successfully acknowledged by the Pulsar broker, or an error is thrown, the Promise object whose result is the message ID runs executor function."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<Object>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"flush()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Sends message from send queue to Pulsar broker. When the message is successfully acknowledged by the Pulsar broker, or an error is thrown, the Promise object runs executor function."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<null>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"close()"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Closes the producer and releases all resources allocated to it. Once ",(0,n.jsx)(t.code,{children:"close()"})," is called, no more messages are accepted from the publisher. This method returns a Promise object. It runs the executor function when all pending publish requests are persisted by Pulsar. If an error is thrown, no pending writes are retried."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<null>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getProducerName()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of the producer name."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getTopic()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of the name of the topic."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"producer-configuration",children:"Producer configuration"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"topic"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The Pulsar ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#topic",children:"topic"})," to which the producer publishes messages. The topic format is ",(0,n.jsx)(t.code,{children:"<topic-name>"})," or ",(0,n.jsx)(t.code,{children:"<tenant-name>/<namespace-name>/<topic-name>"}),". For example, ",(0,n.jsx)(t.code,{children:"sample/ns1/my-topic"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"producerName"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["A name for the producer. If you do not explicitly assign a name, Pulsar automatically generates a globally unique name.  If you choose to explicitly assign a name, it needs to be unique across ",(0,n.jsx)(t.em,{children:"all"})," Pulsar clusters, otherwise the creation operation throws an error."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"sendTimeoutMs"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["When publishing a message to a topic, the producer waits for an acknowledgment from the responsible Pulsar ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#broker",children:"broker"}),". If a message is not acknowledged within the threshold set by this parameter, an error is thrown. If you set ",(0,n.jsx)(t.code,{children:"sendTimeoutMs"})," to -1, the timeout is set to infinity (and thus removed). Removing the send timeout is recommended when using Pulsar's ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/cookbooks-deduplication",children:"message de-duplication"})," feature."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"30000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"initialSequenceId"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The initial sequence ID of the message. When producer send message, add sequence ID to message. The ID is increased each time to send."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"maxPendingMessages"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The maximum size of the queue holding pending messages (i.e. messages waiting to receive an acknowledgment from the ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#broker",children:"broker"}),"). By default, when the queue is full all calls to the ",(0,n.jsx)(t.code,{children:"send"})," method fails ",(0,n.jsx)(t.em,{children:"unless"})," ",(0,n.jsx)(t.code,{children:"blockIfQueueFull"})," is set to ",(0,n.jsx)(t.code,{children:"true"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"1000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"maxPendingMessagesAcrossPartitions"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The maximum size of the sum of partition's  pending queue."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"50000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"blockIfQueueFull"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["If set to ",(0,n.jsx)(t.code,{children:"true"}),", the producer's ",(0,n.jsx)(t.code,{children:"send"})," method waits when the outgoing message queue is full rather than failing and throwing an error (the size of that queue is dictated by the ",(0,n.jsx)(t.code,{children:"maxPendingMessages"})," parameter); if set to ",(0,n.jsx)(t.code,{children:"false"})," (the default), ",(0,n.jsx)(t.code,{children:"send"})," operations fails and throw a error when the queue is full."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"false"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"messageRoutingMode"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The message routing logic (for producers on ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/concepts-messaging#partitioned-topics",children:"partitioned topics"}),"). This logic is applied only when no key is set on messages. The available options are: round robin (",(0,n.jsx)(t.code,{children:"RoundRobinDistribution"}),"), or publishing all messages to a single partition (",(0,n.jsx)(t.code,{children:"UseSinglePartition"}),", the default)."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"UseSinglePartition"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"hashingScheme"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The hashing function that determines the partition on which a particular message is published (partitioned topics only). The available options are: ",(0,n.jsx)(t.code,{children:"JavaStringHash"})," (the equivalent of ",(0,n.jsx)(t.code,{children:"String.hashCode()"})," in Java), ",(0,n.jsx)(t.code,{children:"Murmur3_32Hash"})," (applies the ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/MurmurHash",children:"Murmur3"})," hashing function), or ",(0,n.jsx)(t.code,{children:"BoostHash"})," (applies the hashing function from C++'s ",(0,n.jsx)(t.a,{href:"https://www.boost.org/doc/libs/1_62_0/doc/html/hash.html",children:"Boost"})," library)."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"BoostHash"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"compressionType"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The message data compression type used by the producer. The available options are ",(0,n.jsx)(t.a,{href:"https://github.com/lz4/lz4",children:(0,n.jsx)(t.code,{children:"LZ4"})}),", and ",(0,n.jsx)(t.a,{href:"https://zlib.net/",children:(0,n.jsx)(t.code,{children:"Zlib"})}),", ",(0,n.jsx)(t.a,{href:"https://github.com/facebook/zstd/",children:"ZSTD"}),", ",(0,n.jsx)(t.a,{href:"https://github.com/google/snappy/",children:"SNAPPY"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Compression None"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"batchingEnabled"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["If set to ",(0,n.jsx)(t.code,{children:"true"}),", the producer send message as batch."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"true"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"batchingMaxPublishDelayMs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The maximum time of delay sending message in batching."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"10"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"batchingMaxMessages"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The maximum size of sending message in each time of batching."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"1000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"properties"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The metadata of producer."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"producer-example",children:"Producer example"}),"\n",(0,n.jsxs)(t.p,{children:["This example creates a Node.js producer for the ",(0,n.jsx)(t.code,{children:"my-topic"})," topic and sends 10 messages to that topic:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const Pulsar = require('pulsar-client');\n\n(async () => {\n  // Create a client\n  const client = new Pulsar.Client({\n    serviceUrl: 'pulsar://localhost:6650',\n  });\n\n  // Create a producer\n  const producer = await client.createProducer({\n    topic: 'my-topic',\n  });\n\n  // Send messages\n  for (let i = 0; i < 10; i += 1) {\n    const msg = `my-message-${i}`;\n    producer.send({\n      data: Buffer.from(msg),\n    });\n    console.log(`Sent message: ${msg}`);\n  }\n  await producer.flush();\n\n  await producer.close();\n  await client.close();\n})();\n"})}),"\n",(0,n.jsx)(t.h2,{id:"consumers",children:"Consumers"}),"\n",(0,n.jsxs)(t.p,{children:["Pulsar consumers subscribe to one or more Pulsar topics and listen for incoming messages produced on that topic/those topics. You can ",(0,n.jsx)(t.a,{href:"#consumer-configuration",children:"configure"})," Node.js consumers using a consumer configuration object."]}),"\n",(0,n.jsx)(t.p,{children:"Here is an example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const consumer = await client.subscribe({\n  topic: 'my-topic',\n  subscription: 'my-subscription',\n});\n\nconst msg = await consumer.receive();\nconsole.log(msg.getData().toString());\nconsumer.acknowledge(msg);\n\nawait consumer.close();\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.h4,{id:"promise-operation-1",children:"Promise operation"}),"\n",(0,n.jsxs)(t.p,{children:["When you create a new Pulsar consumer, the operation returns ",(0,n.jsx)(t.code,{children:"Promise"})," object and get consumer instance or an error through executor function.\nIn this example, use await operator instead of executor function."]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"consumer-operations",children:"Consumer operations"}),"\n",(0,n.jsx)(t.p,{children:"Pulsar Node.js consumers have the following methods available:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Return type"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"receive()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Receives a single message from the topic. When the message is available, the Promise object run executor function and get message object."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<Object>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"receive(Number)"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Receives a single message from the topic with specific timeout in milliseconds."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<Object>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"acknowledge(Object)"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#acknowledgment-ack",children:"Acknowledges"})," a message to the Pulsar ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#broker",children:"broker"})," by message object."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"void"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"acknowledgeId(Object)"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#acknowledgment-ack",children:"Acknowledges"})," a message to the Pulsar ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#broker",children:"broker"})," by message ID object."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"void"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"acknowledgeCumulative(Object)"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#acknowledgment-ack",children:"Acknowledges"})," ",(0,n.jsx)(t.em,{children:"all"})," the messages in the stream, up to and including the specified message. The ",(0,n.jsx)(t.code,{children:"acknowledgeCumulative"})," method returns void, and send the ack to the broker asynchronously. After that, the messages are ",(0,n.jsx)(t.em,{children:"not"})," redelivered to the consumer. Cumulative acking can not be used with a ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/concepts-messaging#shared",children:"shared"})," subscription type."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"void"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"acknowledgeCumulativeId(Object)"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#acknowledgment-ack",children:"Acknowledges"})," ",(0,n.jsx)(t.em,{children:"all"})," the messages in the stream, up to and including the specified message ID."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"void"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"negativeAcknowledge(Message)"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#negative-acknowledgment-nack",children:"Negatively acknowledges"}),"  a message to the Pulsar broker by message object."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"void"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"negativeAcknowledgeId(MessageId)"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#negative-acknowledgment-nack",children:"Negatively acknowledges"})," a message to the Pulsar broker by message ID object."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"void"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"close()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Closes the consumer, disabling its ability to receive messages from the broker."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<null>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"unsubscribe()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Unsubscribes the subscription."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<null>"})})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"consumer-configuration",children:"Consumer configuration"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"topic"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The Pulsar topic on which the consumer establishes a subscription and listen for messages."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"topics"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The array of topics."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"topicsPattern"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The regular expression for topics."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"subscription"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The subscription name for this consumer."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"subscriptionType"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Available options are ",(0,n.jsx)(t.code,{children:"Exclusive"}),", ",(0,n.jsx)(t.code,{children:"Shared"}),", ",(0,n.jsx)(t.code,{children:"Key_Shared"}),", and ",(0,n.jsx)(t.code,{children:"Failover"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Exclusive"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"subscriptionInitialPosition"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Initial position at which to set cursor when subscribing to a topic at first time."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"SubscriptionInitialPosition.Latest"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"ackTimeoutMs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Acknowledge timeout in milliseconds."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"0"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"nAckRedeliverTimeoutMs"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Delay to wait before redelivering messages that failed to be processed."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"60000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"receiverQueueSize"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Sets the size of the consumer's receiver queue, i.e. the number of messages that can be accumulated by the consumer before the application calls ",(0,n.jsx)(t.code,{children:"receive"}),". A value higher than the default of 1000 could increase consumer throughput, though at the expense of more memory utilization."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"1000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"receiverQueueSizeAcrossPartitions"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Set the max total receiver queue size across partitions. This setting is used to reduce the receiver queue size for individual partitions if the total exceeds this value."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"50000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"consumerName"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The name of consumer. Currently(v2.4.1), ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/concepts-messaging#failover",children:"failover"})," mode use consumer name in ordering."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"properties"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The metadata of consumer."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"listener"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"A listener that is called for a message received."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"readCompacted"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["If enabling ",(0,n.jsx)(t.code,{children:"readCompacted"}),", a consumer reads messages from a compacted topic rather than reading a full message backlog of a topic.",(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),"A consumer only sees the latest value for each key in the compacted topic, up until reaching the point in the topic message when compacting backlog. Beyond that point, send messages as normal.",(0,n.jsx)("br",{}),(0,n.jsx)("br",{})," ",(0,n.jsx)(t.code,{children:"readCompacted"})," can only be enabled on subscriptions to persistent topics, which have a single active consumer (like failure or exclusive subscriptions).",(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),"Attempting to enable it on subscriptions to non-persistent topics or on shared subscriptions leads to a subscription call throwing a ",(0,n.jsx)(t.code,{children:"PulsarClientException"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"false"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"consumer-example",children:"Consumer example"}),"\n",(0,n.jsxs)(t.p,{children:["This example creates a Node.js consumer with the ",(0,n.jsx)(t.code,{children:"my-subscription"})," subscription on the ",(0,n.jsx)(t.code,{children:"my-topic"})," topic, receives messages, prints the content that arrive, and acknowledges each message to the Pulsar broker for 10 times:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const Pulsar = require('pulsar-client');\n\n(async () => {\n  // Create a client\n  const client = new Pulsar.Client({\n    serviceUrl: 'pulsar://localhost:6650',\n  });\n\n  // Create a consumer\n  const consumer = await client.subscribe({\n    topic: 'my-topic',\n    subscription: 'my-subscription',\n    subscriptionType: 'Exclusive',\n  });\n\n  // Receive messages\n  for (let i = 0; i < 10; i += 1) {\n    const msg = await consumer.receive();\n    console.log(msg.getData().toString());\n    consumer.acknowledge(msg);\n  }\n\n  await consumer.close();\n  await client.close();\n})();\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Instead, a consumer can be created with ",(0,n.jsx)(t.code,{children:"listener"})," to process messages."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"// Create a consumer\nconst consumer = await client.subscribe({\n  topic: 'my-topic',\n  subscription: 'my-subscription',\n  subscriptionType: 'Exclusive',\n  listener: (msg, msgConsumer) => {\n    console.log(msg.getData().toString());\n    msgConsumer.acknowledge(msg);\n  },\n});\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Pulsar Node.js client uses ",(0,n.jsx)(t.a,{href:"https://github.com/nodejs/node-addon-api/blob/main/doc/async_worker",children:"AsyncWorker"}),". Asynchronous operations such as creating consumers/producers and receiving/sending messages are performed in worker threads.\nUntil completion of these operations, worker threads are blocked.\nSince there are only 4 worker threads by default, a called method may never be complete.\nTo avoid this situation, you can set ",(0,n.jsx)(t.code,{children:"UV_THREADPOOL_SIZE"})," to increase the number of worker threads, or define ",(0,n.jsx)(t.code,{children:"listener"})," instead of calling ",(0,n.jsx)(t.code,{children:"receive()"})," many times."]})}),"\n",(0,n.jsx)(t.h2,{id:"readers",children:"Readers"}),"\n",(0,n.jsxs)(t.p,{children:["Pulsar readers process messages from Pulsar topics. Readers are different from consumers because with readers you need to explicitly specify which message in the stream you want to begin with (consumers, on the other hand, automatically begin with the most recently unacked message). You can ",(0,n.jsx)(t.a,{href:"#reader-configuration",children:"configure"})," Node.js readers using a reader configuration object."]}),"\n",(0,n.jsx)(t.p,{children:"Here is an example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const reader = await client.createReader({\n  topic: 'my-topic',\n  startMessageId: Pulsar.MessageId.earliest(),\n});\n\nconst msg = await reader.readNext();\nconsole.log(msg.getData().toString());\n\nawait reader.close();\n"})}),"\n",(0,n.jsx)(t.h3,{id:"reader-operations",children:"Reader operations"}),"\n",(0,n.jsx)(t.p,{children:"Pulsar Node.js readers have the following methods available:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Return type"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"readNext()"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Receives the next message on the topic (analogous to the ",(0,n.jsx)(t.code,{children:"receive"})," method for ",(0,n.jsx)(t.a,{href:"#consumer-operations",children:"consumers"}),"). When the message is available, the Promise object run executor function and get message object."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<Object>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"readNext(Number)"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Receives a single message from the topic with specific timeout in milliseconds."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<Object>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"hasNext()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Return whether the broker has next message in target topic."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Boolean"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"close()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Closes the reader, disabling its ability to receive messages from the broker."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Promise<null>"})})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"reader-configuration",children:"Reader configuration"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Default"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"topic"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The Pulsar ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/reference-terminology#topic",children:"topic"})," on which the reader establishes a subscription and listen for messages."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"startMessageId"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["The initial reader position, i.e. the message at which the reader begins processing messages. The options are ",(0,n.jsx)(t.code,{children:"Pulsar.MessageId.earliest"})," (the earliest available message on the topic), ",(0,n.jsx)(t.code,{children:"Pulsar.MessageId.latest"})," (the latest available message on the topic), or a message ID object for a position that is not earliest or latest."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"receiverQueueSize"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Sets the size of the reader's receiver queue, i.e. the number of messages that can be accumulated by the reader before the application calls ",(0,n.jsx)(t.code,{children:"readNext"}),". A value higher than the default of 1000 could increase reader throughput, though at the expense of more memory utilization."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"1000"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"readerName"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The name of the reader."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"subscriptionRolePrefix"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The subscription role prefix."}),(0,n.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"readCompacted"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["If enabling ",(0,n.jsx)(t.code,{children:"readCompacted"}),", a consumer reads messages from a compacted topic rather than reading a full message backlog of a topic.",(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),"A consumer only sees the latest value for each key in the compacted topic, up until reaching the point in the topic message when compacting backlog. Beyond that point, send messages as normal.",(0,n.jsx)("br",{}),(0,n.jsx)("br",{})," ",(0,n.jsx)(t.code,{children:"readCompacted"})," can only be enabled on subscriptions to persistent topics, which have a single active consumer (like failure or exclusive subscriptions).",(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),"Attempting to enable it on subscriptions to non-persistent topics or on shared subscriptions leads to a subscription call throwing a ",(0,n.jsx)(t.code,{children:"PulsarClientException"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"false"})})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"reader-example",children:"Reader example"}),"\n",(0,n.jsxs)(t.p,{children:["This example creates a Node.js reader with the ",(0,n.jsx)(t.code,{children:"my-topic"})," topic, reads messages, and prints the content that arrive for 10 times:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const Pulsar = require('pulsar-client');\n\n(async () => {\n  // Create a client\n  const client = new Pulsar.Client({\n    serviceUrl: 'pulsar://localhost:6650',\n    operationTimeoutSeconds: 30,\n  });\n\n  // Create a reader\n  const reader = await client.createReader({\n    topic: 'my-topic',\n    startMessageId: Pulsar.MessageId.earliest(),\n  });\n\n  // read messages\n  for (let i = 0; i < 10; i += 1) {\n    const msg = await reader.readNext();\n    console.log(msg.getData().toString());\n  }\n\n  await reader.close();\n  await client.close();\n})();\n"})}),"\n",(0,n.jsx)(t.h2,{id:"messages",children:"Messages"}),"\n",(0,n.jsx)(t.p,{children:"In Pulsar Node.js client, you have to construct producer message objects for producers."}),"\n",(0,n.jsx)(t.p,{children:"Here is an example of a message:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"const msg = {\n  data: Buffer.from('Hello, Pulsar'),\n  partitionKey: 'key1',\n  properties: {\n    'foo': 'bar',\n  },\n  eventTimestamp: Date.now(),\n  replicationClusters: [\n    'cluster1',\n    'cluster2',\n  ],\n}\n\nawait producer.send(msg);\n"})}),"\n",(0,n.jsx)(t.p,{children:"The following keys are available for producer message objects:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"data"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The actual data payload of the message."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"properties"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"A Object for any application-specific metadata attached to the message."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"eventTimestamp"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The timestamp associated with the message."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"sequenceId"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The sequence ID of the message."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"partitionKey"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The optional key associated with the message (particularly useful for things like topic compaction)."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"replicationClusters"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The clusters to which this message is replicated. Pulsar brokers handle message replication automatically; you should only change this setting if you want to override the broker default."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"deliverAt"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The absolute timestamp at or after which the message is delivered."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"deliverAfter"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"The relative delay after which the message is delivered."})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"message-object-operations",children:"Message object operations"}),"\n",(0,n.jsx)(t.p,{children:"In Pulsar Node.js client, you can receive (or read) message objects as consumers (or readers)."}),"\n",(0,n.jsx)(t.p,{children:"The message object has the following methods available:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Return type"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getTopicName()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of topic name."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"String"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getProperties()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of properties."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Array<Object>"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getData()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of message data."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Buffer"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getMessageId()"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Getter method of ",(0,n.jsx)(t.a,{href:"#message-id-object-operations",children:"message id object"}),"."]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Object"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getPublishTimestamp()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of publish timestamp."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Number"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getEventTimestamp()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of event timestamp."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Number"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getRedeliveryCount()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of redelivery count."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Number"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"getPartitionKey()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Getter method of partition key."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"String"})})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"message-id-object-operations",children:"Message ID object operations"}),"\n",(0,n.jsx)(t.p,{children:"In Pulsar Node.js client, you can get message id objects from message objects."}),"\n",(0,n.jsx)(t.p,{children:"The message id object has the following methods available:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Return type"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"serialize()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Serialize the message id into a Buffer for storing."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Buffer"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"toString()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Get message id as String."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"String"})})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:["The client has a static method of message id object. You can access it as ",(0,n.jsx)(t.code,{children:"Pulsar.MessageId.someStaticMethod"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"The following static methods are available for the message id object:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Method"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Return type"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"earliest()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"MessageId representing the earliest, or oldest available message stored in the topic."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Object"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"latest()"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"MessageId representing the latest, or last published message in the topic."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Object"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"deserialize(Buffer)"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Deserialize a message id object from a Buffer."}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"Object"})})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"end-to-end-encryption",children:"End-to-end encryption"}),"\n",(0,n.jsxs)(t.p,{children:["Pulsar encryption allows applications to encrypt messages at producers and decrypt messages at consumers. See ",(0,n.jsx)(t.a,{href:"/docs/2.11.x/security-encryption#get-started",children:"Get started"})," for more details."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>c});var l=s(96540);const n={},i=l.createContext(n);function r(e){const t=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),l.createElement(i.Provider,{value:t},e.children)}}}]);
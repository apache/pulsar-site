"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[40599],{60738:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"release-process","title":"Release process","description":"This page contains instructions for Pulsar committers on how to perform a release.","source":"@site/contribute/release-process.md","sourceDirName":".","slug":"/release-process","permalink":"/contribute/release-process","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/contribute/release-process.md","tags":[],"version":"current","lastUpdatedBy":"Lari Hotari","lastUpdatedAt":1740505345000,"frontMatter":{"id":"release-process","title":"Release process"},"sidebar":"sidebarDevelopment","previous":{"title":"Release policy","permalink":"/contribute/release-policy"},"next":{"title":"Creating GPG keys","permalink":"/contribute/create-gpg-keys"}}');var r=s(74848),t=s(28453);const l={id:"release-process",title:"Release process"},i=void 0,o={},c=[{value:"Preparation",id:"preparation",level:2},{value:"Prepare the release branch",id:"prepare-the-release-branch",level:2},{value:"Set environment variables to be used across the commands",id:"env-vars",level:2},{value:"Create a release candidate",id:"create-a-release-candidate",level:2},{value:"Create the release branch",id:"create-the-release-branch",level:3},{value:"Cherry-picking changes scheduled for the release",id:"cherry-picking-changes-scheduled-for-the-release",level:3},{value:"Create a GitHub label for the next release and move PRs labeled with the current release to the new label",id:"create-a-github-label-for-the-next-release-and-move-prs-labeled-with-the-current-release-to-the-new-label",level:3},{value:"Update project version and tag",id:"update-project-version-and-tag",level:3},{value:"Specify MAVEN_OPTS",id:"specify-maven_opts",level:2},{value:"Cleaning up locally compiled BookKeeper artifacts",id:"cleaning-up-locally-compiled-bookkeeper-artifacts",level:2},{value:"Build release artifacts",id:"build-release-artifacts",level:3},{value:"Check licenses",id:"check-licenses",level:3},{value:"Create and publish the GPG key if you haven&#39;t already done this",id:"create-and-publish-the-gpg-key-if-you-havent-already-done-this",level:3},{value:"Sign and stage the artifacts to local SVN directory",id:"sign-and-stage-the-artifacts-to-local-svn-directory",level:3},{value:"Validate the release files",id:"validate-the-release-files",level:3},{value:"Commit and upload the staged files in the local SVN directory to ASF SVN server",id:"commit-and-upload-the-staged-files-in-the-local-svn-directory-to-asf-svn-server",level:3},{value:"Stage Maven modules",id:"stage-maven-modules",level:3},{value:"Stage Docker images",id:"stage-docker-images",level:3},{value:"Release before Pulsar 3.0",id:"release-before-pulsar-30",level:4},{value:"Release Pulsar 3.0 and later",id:"release-pulsar-30-and-later",level:3},{value:"Call for the vote to release a version based on the release candidate",id:"call-for-the-vote-to-release-a-version-based-on-the-release-candidate",level:2},{value:"LTS Preview release steps (this only applies to preview releases such as 4.0.0-preview.1)",id:"lts-preview-release-steps-this-only-applies-to-preview-releases-such-as-400-preview1",level:2},{value:"Summarize the voting for the release",id:"summarize-the-voting-for-the-release",level:2},{value:"Promote the release",id:"promote-the-release",level:2},{value:"Publish the final tag",id:"publish-the-final-tag",level:3},{value:"Create release notes in GitHub",id:"create-release-notes-in-github",level:3},{value:"Release the artifacts on SVN",id:"release-the-artifacts-on-svn",level:3},{value:"Release Maven modules",id:"release-maven-modules",level:3},{value:"Release Docker images",id:"release-docker-images",level:3},{value:"Release Helm Chart",id:"release-helm-chart",level:3},{value:"Release Homebrew libpulsar package",id:"release-homebrew-libpulsar-package",level:3},{value:"Release Python client",id:"release-python-client",level:3},{value:"Linux",id:"linux",level:4},{value:"macOS",id:"macos",level:4},{value:"Update the document",id:"update-the-document",level:2},{value:"Release notes",id:"release-notes",level:3},{value:"Swagger files",id:"swagger-files",level:3},{value:"Javadoc",id:"javadoc",level:3},{value:"Reference",id:"reference",level:3},{value:"Update <code>/docs</code> redirect",id:"update-docs-redirect",level:2},{value:"Update <code>/docs</code> version list dropdown",id:"update-docs-version-list-dropdown",level:2},{value:"Announce the release",id:"announce-the-release",level:2},{value:"Write a blog post (optional)",id:"write-a-blog-post-optional",level:2},{value:"Remove old releases",id:"remove-old-releases",level:2},{value:"Move to next version in pom.xml",id:"move-to-next-version-in-pomxml",level:2},{value:"Feature releases (master branch)",id:"feature-releases-master-branch",level:3},{value:"For maintenance branches",id:"for-maintenance-branches",level:3}];function h(e){const a={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.p,{children:"This page contains instructions for Pulsar committers on how to perform a release."}),"\n",(0,r.jsx)(a.p,{children:"The term feature/patch releases used throughout this document is defined as follows:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Feature releases contain 2.10.0, 2.11.0, 3.0.0, and so on."}),"\n",(0,r.jsx)(a.li,{children:"Patch releases refer to bug-fix releases, such as 2.10.1, 2.10.2, and so on."}),"\n",(0,r.jsx)(a.li,{children:"Preview release refer to LTS release preview releases that happen in the releasing of a LTS version."}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"preparation",children:"Preparation"}),"\n",(0,r.jsxs)(a.p,{children:["Open a discussion on ",(0,r.jsx)(a.a,{href:"mailto:dev@pulsar.apache.org",children:"dev@pulsar.apache.org"})," to notify others that you volunteer to be the release manager of a specific release. If there are no disagreements, you can start the release process."]}),"\n",(0,r.jsxs)(a.p,{children:["For LTS and feature releases, you should create a new branch named ",(0,r.jsx)(a.code,{children:"branch-X.Y"})," once all PRs with the X.Y.0 milestone are merged. If some PRs with the X.Y.0 milestone are still working in progress and might take much time to complete, you can move them to the next milestone if they are not important. In this case, you'd better notify the author in the PR."]}),"\n",(0,r.jsxs)(a.p,{children:["For preview releases of a LTS release, a branch ",(0,r.jsx)(a.code,{children:"branch-X.0-preview"})," is created. This branch will is used to hold the commit to change the version to the preview version. Preview releases will be tagged in this branch."]}),"\n",(0,r.jsxs)(a.p,{children:["For patch releases, if there are no disagreements, you should cherry-pick all merged PRs labeled with ",(0,r.jsx)(a.code,{children:"release/X.Y.Z"})," into ",(0,r.jsx)(a.code,{children:"branch-X.Y"}),". After these PRs are cherry-picked, you should add the ",(0,r.jsx)(a.code,{children:"cherry-picked/branch-X.Y"})," labels."]}),"\n",(0,r.jsxs)(a.p,{children:["Sometimes some PRs cannot be cherry-picked cleanly, you might need to create a separate PR and move the ",(0,r.jsx)(a.code,{children:"release/X.Y.Z"})," label from the original PR to it. In this case, you can ask the author to help create the new PR."]}),"\n",(0,r.jsx)(a.p,{children:"For PRs that are still open, you can choose to delay them to the next release or ping others to review so that they can be merged."}),"\n",(0,r.jsxs)(a.p,{children:["If you haven't already done it, ",(0,r.jsx)(a.a,{href:"/contribute/create-gpg-keys",children:"create and publish the GPG key"}),". You will use the key to sign the release artifacts."]}),"\n",(0,r.jsx)(a.p,{children:"Before you start the next release steps, make sure you have installed these software:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["Amazon Corretto OpenJDK","\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["JDK 21 for Pulsar version >= 3.3","\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"code will be compiled for Java 17 with Java 21"}),"\n",(0,r.jsx)(a.li,{children:"Pulsar docker images are running Java 21 since 3.3.0"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(a.li,{children:"JDK 17 for Pulsar version >= 2.11"}),"\n",(0,r.jsx)(a.li,{children:"JDK 11 for earlier versions"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["Maven 3.9.9 (most recent stable Maven 3.9.x version)","\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["Install using ",(0,r.jsx)(a.code,{children:"sdkman i maven 3.9.9"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(a.li,{children:"Zip"}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["Please refer to ",(0,r.jsx)(a.a,{href:"/contribute/setup-buildtools",children:'"Setting up JDKs and Maven using SDKMAN"'})," for details on how to install JDKs and Maven using SDKMAN."]}),"\n",(0,r.jsx)(a.h2,{id:"prepare-the-release-branch",children:"Prepare the release branch"}),"\n",(0,r.jsxs)(a.p,{children:["Before starting a release, besides handling the PRs, it's necessary to check that there aren't open critical security vulnerabilities in the dependencies. This can be checked from GitHub Security Alerts and the ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar/actions/workflows/ci-owasp-dependency-check.yaml",children:"OWASP Dependency Check workflow run logs"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["In addition, it's useful to check whether there's ",(0,r.jsx)(a.a,{href:"https://netty.io/news/index.html",children:"a new release of Netty available"})," with important fixes."]}),"\n",(0,r.jsxs)(a.p,{children:["To verify the release branch is not broken, you should trigger a Pulsar CI builds for the ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar/actions/workflows/pulsar-ci.yaml",children:"pulsar-ci.yaml"})," and ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar/actions/workflows/pulsar-ci-flaky.yaml",children:"pulsar-ci-flaky.yaml"})," workflows. The builds must pass before a release is performed."]}),"\n",(0,r.jsx)(a.h2,{id:"env-vars",children:"Set environment variables to be used across the commands"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"export VERSION_RC=3.0.4-candidate-1\nexport VERSION_WITHOUT_RC=${VERSION_RC%-candidate-*}\nexport NEXT_VERSION_WITHOUT_RC=3.0.5\nexport VERSION_BRANCH=branch-3.0\nexport UPSTREAM_REMOTE=origin\nexport SDKMAN_JAVA_VERSION=17\n"})}),"\n",(0,r.jsx)(a.p,{children:"Example for preview releases:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"export VERSION_RC=4.0.0-preview.1\nexport VERSION_WITHOUT_RC=${VERSION_RC%-candidate-*}\nexport VERSION_BRANCH=branch-4.0-preview\nexport UPSTREAM_REMOTE=origin\nexport SDKMAN_JAVA_VERSION=21\n"})}),"\n",(0,r.jsx)(a.p,{children:"Set your ASF user id"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"export APACHE_USER=<your ASF userid>\n"})}),"\n",(0,r.jsxs)(a.p,{children:["In addition, you will need to set ",(0,r.jsx)(a.code,{children:"PULSAR_PATH"})," to point to the cleanly checked out working directory for the release branch."]}),"\n",(0,r.jsx)(a.p,{children:"If you run into problems with GPG signing set this"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"export GPG_TTY=$(tty)\n"})}),"\n",(0,r.jsxs)(a.p,{children:["For some commands, a template is copied to the clipboard using ",(0,r.jsx)(a.code,{children:"pbcopy"}),".\nThis is already available on MacOS. For Linux, create a shell alias:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'# Linux only\n# install xsel if it is missing\nsudo apt install xsel\n# create alias pbcopy for copying stdin to clipboard\nalias pbcopy="xsel --clipboard --input"\n'})}),"\n",(0,r.jsx)(a.h2,{id:"create-a-release-candidate",children:"Create a release candidate"}),"\n",(0,r.jsx)(a.h3,{id:"create-the-release-branch",children:"Create the release branch"}),"\n",(0,r.jsx)(a.p,{children:"We are going to create a release branch where the tag will be generated and where new fixes will be applied as part of the maintenance for the release."}),"\n",(0,r.jsxs)(a.p,{children:["The branch needs only to be created for feature releases, and not for patch releases like ",(0,r.jsx)(a.code,{children:"3.3.2"}),". For patch releases, go to the next step."]}),"\n",(0,r.jsxs)(a.p,{children:["For example, when working on ",(0,r.jsx)(a.code,{children:"3.3.0"})," release, the branch ",(0,r.jsx)(a.code,{children:"branch-3.3"})," will be created; but for ",(0,r.jsx)(a.code,{children:"3.3.1"}),", the existing ",(0,r.jsx)(a.code,{children:"branch-3.3"})," will be used."]}),"\n",(0,r.jsx)(a.p,{children:"It is recommended to create a fresh clone of the repository to avoid any local files interfering in the process:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"git clone https://github.com/apache/pulsar\ncd pulsar\nexport PULSAR_PATH=$(pwd)\ngit checkout -b $VERSION_BRANCH origin/master\n"})}),"\n",(0,r.jsx)(a.p,{children:"Alternatively, you can use a git workspace to create a new, clean directory on your machine without needing to re-download the project."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"git worktree add ../pulsar-release-$VERSION_BRANCH $VERSION_BRANCH\ncd ../pulsar-release-$VERSION_BRANCH\nexport PULSAR_PATH=$(pwd)\n"})}),"\n",(0,r.jsx)(a.p,{children:"if you get an error that the branch is already checked out, go to that directory detach it from the branch. After this the above command should succeed"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"git checkout --detach HEAD\n"})}),"\n",(0,r.jsx)(a.p,{children:"After the release, you can cleanup the worktree in the main repository directory"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"git worktree remove ../pulsar-release-$VERSION_BRANCH\n"})}),"\n",(0,r.jsxs)(a.p,{children:["If you created a new branch, update the ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar/blob/master/.github/workflows/ci-owasp-dependency-check.yaml",children:"CI - OWASP Dependency Check"})," workflow so that it will run on the new branch. Note that you should also remove the branches for previous Pulsar versions that are no longer ",(0,r.jsx)(a.a,{href:"https://pulsar.apache.org/contribute/release-policy/#supported-versions",children:"supported for security updates"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"cherry-picking-changes-scheduled-for-the-release",children:"Cherry-picking changes scheduled for the release"}),"\n",(0,r.jsxs)(a.p,{children:["Please read the ",(0,r.jsx)(a.a,{href:"/contribute/maintenance-process",children:"separate guide about maintenance tasks and cherry-picking"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"create-a-github-label-for-the-next-release-and-move-prs-labeled-with-the-current-release-to-the-new-label",children:"Create a GitHub label for the next release and move PRs labeled with the current release to the new label"}),"\n",(0,r.jsx)(a.p,{children:"In the previous cherry-picking step, all PRs labeled with the current release were cherry-picked to the release branch."}),"\n",(0,r.jsx)(a.p,{children:"Now, we need to create a new label for the next release. From now on, PRs should be labeled with the new release label instead of the current release label."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'gh label create "release/$NEXT_VERSION_WITHOUT_RC" --color "#1D76DB"\n'})}),"\n",(0,r.jsxs)(a.p,{children:["If there are any PRs that are still labeled with the current release label, you need to move them to the new release label. Please check the ",(0,r.jsx)(a.a,{href:"/contribute/maintenance-process",children:"cherry-picking guide"})," to find out how to search for them."]}),"\n",(0,r.jsx)(a.h3,{id:"update-project-version-and-tag",children:"Update project version and tag"}),"\n",(0,r.jsx)(a.p,{children:'During the release process, you are going to initially create "candidate" tags, that after verification and approval will get promoted to the "real" final tag.'}),"\n",(0,r.jsx)(a.p,{children:"In this process, the maven version of the project will always be the final one."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'# Bump to the release version\ncd $PULSAR_PATH\n./src/set-project-version.sh $VERSION_WITHOUT_RC\n\n# Commit\ngit commit -m "Release $VERSION_WITHOUT_RC" -a\n'})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'# Create a "candidate" tag\ngit tag -u $APACHE_USER@apache.org v$VERSION_RC -m "Release $VERSION_RC"\n\n# Verify that you signed your tag before pushing it:\ngit tag -v v$VERSION_RC\n\n# Push both the branch and the tag to Github repo\ngit push $UPSTREAM_REMOTE $VERSION_BRANCH\ngit push $UPSTREAM_REMOTE v$VERSION_RC\n'})}),"\n",(0,r.jsx)(a.p,{children:"If there's a need to restart the release with more commits, you can delete the tag."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# only if you restart the release before it has been published for voting. Don't run this after that!\n# delete local tag\ngit tag -d v$VERSION_RC\n# delete tag in remote\ngit push $UPSTREAM_REMOTE :v$VERSION_RC\n"})}),"\n",(0,r.jsx)(a.h2,{id:"specify-maven_opts",children:"Specify MAVEN_OPTS"}),"\n",(0,r.jsxs)(a.p,{children:["Set ",(0,r.jsx)(a.code,{children:"MAVEN_OPTS"})," to avoid issues in the build process."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'export MAVEN_OPTS="-Xss1500k -Xmx3072m -XX:+UnlockDiagnosticVMOptions -XX:GCLockerRetryAllocationCount=100"\n'})}),"\n",(0,r.jsx)(a.h2,{id:"cleaning-up-locally-compiled-bookkeeper-artifacts",children:"Cleaning up locally compiled BookKeeper artifacts"}),"\n",(0,r.jsxs)(a.p,{children:["It is necessary to make sure that BookKeeper artifacts are fetched from the Maven repository instead of using locally compiled BookKeeper artifacts (",(0,r.jsx)(a.a,{href:"https://lists.apache.org/thread/gsbh95b2d9xtcg5fmtxpm9k9q6w68gd2",children:"reference"}),")."]}),"\n",(0,r.jsx)(a.p,{children:"Cleaning up the local Maven repository Bookkeeper artifacts for the version used by Pulsar:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'cd $PULSAR_PATH\nsdk u java $SDKMAN_JAVA_VERSION\nBOOKKEEPER_VERSION=$(command mvn initialize help:evaluate -Dexpression=bookkeeper.version -pl . -q -DforceStdout)\necho "BookKeeper version is $BOOKKEEPER_VERSION"\n[ -n "$BOOKKEEPER_VERSION" ] && ls -G -d ~/.m2/repository/org/apache/bookkeeper/**/"${BOOKKEEPER_VERSION}" 2> /dev/null | xargs -r rm -rf\n'})}),"\n",(0,r.jsx)(a.h3,{id:"build-release-artifacts",children:"Build release artifacts"}),"\n",(0,r.jsx)(a.p,{children:"Run the following command to build the artifacts:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"cd $PULSAR_PATH\n# ensure the correct JDK version is used for building\nsdk u java $SDKMAN_JAVA_VERSION\n# build the binaries\ncommand mvn clean install -DskipTests\n"})}),"\n",(0,r.jsx)(a.p,{children:"After the build, you should find the following tarballs, zip files, and the connectors directory with all the Pulsar IO nar files:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"distribution/server/target/apache-pulsar-3.X.Y-bin.tar.gz"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"distribution/offloaders/target/apache-pulsar-offloaders-3.X.Y-bin.tar.gz"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"distribution/shell/target/apache-pulsar-shell-3.X.Y-bin.tar.gz"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"distribution/shell/target/apache-pulsar-shell-3.X.Y-bin.zip"})}),"\n",(0,r.jsxs)(a.li,{children:["directory ",(0,r.jsx)(a.code,{children:"distribution/io/target/apache-pulsar-io-connectors-3.X.Y-bin"})]}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"check-licenses",children:"Check licenses"}),"\n",(0,r.jsxs)(a.p,{children:["First, check that the ",(0,r.jsx)(a.code,{children:"LICENSE"})," and ",(0,r.jsx)(a.code,{children:"NOTICE"})," files cover all included jars for the bin package. You can use script to cross-validate ",(0,r.jsx)(a.code,{children:"LICENSE"})," file with included jars:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"cd $PULSAR_PATH\nsrc/check-binary-license.sh distribution/server/target/apache-pulsar-*-bin.tar.gz\nsrc/check-binary-license.sh distribution/shell/target/apache-pulsar-*-bin.tar.gz\n"})}),"\n",(0,r.jsxs)(a.p,{children:["In some older branches, the script is called ",(0,r.jsx)(a.code,{children:"src/check-binary-license"})," instead of ",(0,r.jsx)(a.code,{children:"src/check-binary-license.sh"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"create-and-publish-the-gpg-key-if-you-havent-already-done-this",children:"Create and publish the GPG key if you haven't already done this"}),"\n",(0,r.jsxs)(a.p,{children:["If you haven't already done it, ",(0,r.jsx)(a.a,{href:"/contribute/create-gpg-keys",children:"create and publish the GPG key"}),". You will use the key to sign the release artifacts."]}),"\n",(0,r.jsxs)(a.p,{children:["Before running the script below, make sure that the ",(0,r.jsx)(a.code,{children:"<yourname>@apache.org"})," code signing key is the default gpg signing key."]}),"\n",(0,r.jsxs)(a.p,{children:["One way to ensure this is to create/edit file ",(0,r.jsx)(a.code,{children:"~/.gnupg/gpg.conf"})," and add a line:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"default-key <key fingerprint>\n"})}),"\n",(0,r.jsxs)(a.p,{children:["... where ",(0,r.jsx)(a.code,{children:"<key fingerprint>"})," should be replaced with the private key fingerprint for the ",(0,r.jsx)(a.code,{children:"<yourname>@apache.org"})," key. The key fingerprint can be found in ",(0,r.jsx)(a.code,{children:"gpg -K"})," output."]}),"\n",(0,r.jsx)(a.p,{children:"This can be automated with this command:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'# KEY_ID is in short format, subset key id visible in gpg -K\nKEY_ID=$(gpg --list-keys --with-colons $APACHE_USER@apache.org | egrep "^pub" | awk -F: \'{print $5}\')\necho "default-key $KEY_ID" >> ~/.gnupg/gpg.conf\n'})}),"\n",(0,r.jsx)(a.h3,{id:"sign-and-stage-the-artifacts-to-local-svn-directory",children:"Sign and stage the artifacts to local SVN directory"}),"\n",(0,r.jsx)(a.p,{children:"The src and bin artifacts need to be signed and finally uploaded to the dist SVN repository for staging. This step should not run inside the $PULSAR_PATH."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# make sure to run svn mkdir commmand in a different dir(NOT IN $PULSAR_PATH).\nmkdir ~/pulsar-svn-release-$VERSION_RC\ncd ~/pulsar-svn-release-$VERSION_RC\n\n# create an empty directory in the SVN server\nsvn mkdir --username $APACHE_USER -m \"Add directory for pulsar $VERSION_RC release\" https://dist.apache.org/repos/dist/dev/pulsar/pulsar-$VERSION_RC\n# checkout the empty directory\nsvn co https://dist.apache.org/repos/dist/dev/pulsar/pulsar-$VERSION_RC\n\n# cd into the directory\ncd pulsar-$VERSION_RC\n\n# stage the release artifacts\n$PULSAR_PATH/src/stage-release.sh .\n\n# Please check the size of the files in the `pulsar-3.X.Y-candidate-1`.\n# If you build the artifacts without a clean workspace, the `apache-pulsar-3.X.Y-src.tar.gz` files\n# may be too large to be unable to upload.\nls -ltra\ndu -ms *\n\n# Verify the artifacts are correctly signed have correct checksums:\n( for i in **/*.(tar.gz|zip|nar); do echo $i; gpg --verify $i.asc $i || exit 1 ; done )\n( for i in **/*.(tar.gz|zip|nar); do echo $i; shasum -a 512 -c $i.sha512 || exit 1 ; done )\n\n# don't commit and upload yet, there's a separate step for handling that\n"})}),"\n",(0,r.jsx)(a.h3,{id:"validate-the-release-files",children:"Validate the release files"}),"\n",(0,r.jsxs)(a.p,{children:["Then use instructions in ",(0,r.jsx)(a.a,{href:"/contribute/validate-release-candidate",children:"verifying release candidates"})," page to do some sanity checks on the produced binary distributions."]}),"\n",(0,r.jsx)(a.p,{children:"Make sure to run Apache RAT to verify the license headers in the src package:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"cd /tmp\ntar -xvzf ~/pulsar-svn-release-${VERSION_RC}/pulsar-$VERSION_RC/apache-pulsar-*-src.tar.gz\ncd apache-pulsar-$VERSION_WITHOUT_RC-src\ncommand mvn apache-rat:check\n"})}),"\n",(0,r.jsx)(a.h3,{id:"commit-and-upload-the-staged-files-in-the-local-svn-directory-to-asf-svn-server",children:"Commit and upload the staged files in the local SVN directory to ASF SVN server"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'cd  ~/pulsar-svn-release-$VERSION_RC/pulsar-$VERSION_RC\nsvn add *\nsvn ci -m "Staging artifacts and signature for Pulsar release $VERSION_RC"\n'})}),"\n",(0,r.jsx)(a.h3,{id:"stage-maven-modules",children:"Stage Maven modules"}),"\n",(0,r.jsx)(a.p,{children:"Upload the artifacts to ASF Nexus:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'# add space before the "export APACHE_PASSWORD" so that the password doesn\'t get added to shell history\n# set your ASF password in the following line\n export APACHE_PASSWORD=""\n'})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"cd $PULSAR_PATH\n# ensure the correct JDK version is used for building\nsdk u java $SDKMAN_JAVA_VERSION\n# Confirm if there are no other new dirs or files in the $PULSAR_PATH because all files in $PULSAR_PATH will be compressed and uploaded to ASF Nexus.\ngit status\n\n# src/settings.xml from master branch to /tmp/mvn-apache-settings.xml since it's missing in some branches\ncurl -s -o /tmp/mvn-apache-settings.xml https://raw.githubusercontent.com/apache/pulsar/master/src/settings.xml\n\n# publish artifacts\ncommand mvn deploy -DskipTests -Papache-release --settings /tmp/mvn-apache-settings.xml\n# publish org.apache.pulsar.tests:integration and it's parent pom org.apache.pulsar.tests:tests-parent\ncommand mvn deploy -DskipTests -Papache-release --settings /tmp/mvn-apache-settings.xml -f tests/pom.xml -pl org.apache.pulsar.tests:tests-parent,org.apache.pulsar.tests:integration\n"})}),"\n",(0,r.jsx)(a.admonition,{type:"note",children:(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.code,{children:"GPG_TTY"}),' environment variable must be set for all the following steps. Otherwise, some operations might fail by "gpg failed to sign the data".']})}),"\n",(0,r.jsx)(a.p,{children:"This will ask for the GPG key passphrase and then upload it to the staging repository."}),"\n",(0,r.jsxs)(a.p,{children:["Log in to the ASF Nexus repository at ",(0,r.jsx)(a.a,{href:"https://repository.apache.org",children:"https://repository.apache.org"})]}),"\n",(0,r.jsxs)(a.p,{children:['Click on "Staging Repositories" on the left sidebar and then select the current Pulsar staging repo. This should be called something like ',(0,r.jsx)(a.code,{children:"orgapachepulsar-XYZ"}),"."]}),"\n",(0,r.jsx)(a.p,{children:'Add a version string such as "Apache Pulsar 3.0.4-candidate-1" to the clipboard with this command:'}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'printf "Apache Pulsar $VERSION_RC" |pbcopy\n'})}),"\n",(0,r.jsx)(a.p,{children:'Use the "Close" button to close the repository.'}),"\n",(0,r.jsx)(a.p,{children:'Enter the version string in the description field before clicking "Confirm".'}),"\n",(0,r.jsxs)(a.p,{children:['This operation will take few minutes. Once complete click "Refresh" and now a link to the staging repository should be available, something like ',(0,r.jsx)(a.a,{href:"https://repository.apache.org/content/repositories/orgapachepulsar-XYZ",children:"https://repository.apache.org/content/repositories/orgapachepulsar-XYZ"})]}),"\n",(0,r.jsx)(a.h3,{id:"stage-docker-images",children:"Stage Docker images"}),"\n",(0,r.jsx)(a.p,{children:"After that, the following images will be built and pushed to your own DockerHub account:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"pulsar"}),"\n",(0,r.jsx)(a.li,{children:"pulsar-all"}),"\n"]}),"\n",(0,r.jsx)(a.h4,{id:"release-before-pulsar-30",children:"Release before Pulsar 3.0"}),"\n",(0,r.jsxs)(a.p,{children:["This is supported only on Intel platforms. On Mac Apple Silicon, you can run Linux amd64 in a virtual machine or a physical machine outside the Apple laptop and use ",(0,r.jsx)(a.code,{children:"export DOCKER_HOST=tcp://x.x.x.x:port"})," to use use the remote docker engine for building the docker image. Don't forward the TCP/IP connection over an unencrypted channel.\nYou can start a socket proxy with ",(0,r.jsx)(a.code,{children:"socat TCP-LISTEN:2375,bind=0.0.0.0,reuseaddr,fork UNIX-CLIENT:/var/run/docker.sock"})," inside the Linux Intel machine.\nFor running the Linux Intel VM on Mac Apple Silicon, you could use ",(0,r.jsx)(a.code,{children:"limactl create --name=linux_amd64 --rosetta --arch x86_64"})," to create a VM using ",(0,r.jsx)(a.a,{href:"https://lima-vm.io/",children:"https://lima-vm.io/"}),".\nHowever, it is simpler to do the release on a Linux arm64 / x86_64 VM directly."]}),"\n",(0,r.jsx)(a.p,{children:"Run the following commands on a Linux machine (or with Mac where DOCKER_HOST points to a Linux amd64/Intel machine):"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"cd $PULSAR_PATH/docker\n# ensure the correct JDK version is used for building\nsdk u java $SDKMAN_JAVA_VERSION\n./build.sh\nDOCKER_USER=<your-username> DOCKER_PASSWORD=<your-password> DOCKER_ORG=<your-organization> ./publish.sh\n"})}),"\n",(0,r.jsx)(a.h3,{id:"release-pulsar-30-and-later",children:"Release Pulsar 3.0 and later"}),"\n",(0,r.jsx)(a.p,{children:"Before building docker images, clean up build history so that you don't run out of diskspace in the middle of the build.\nDocker buildx in Docker Desktop limits the build history size to 20GB by default."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# check total docker disk usage\ndocker system df\n# check total size of build cache\ndocker buildx du\n# cleanup disk space\n# this is mandatory, if usage shown in previous step is over 10GB\ndocker buildx prune\n"})}),"\n",(0,r.jsx)(a.p,{children:"For creating and publishing the docker images, run the following commands:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# set your dockerhub username\nDOCKER_USER=<your-dockerhub-username>\n"})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# login to dockerhub\ndocker login -u $DOCKER_USER\n"})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# ensure that you have the most recent base image locally\ndocker pull ubuntu:22.04 # for 3.0.x\ndocker pull alpine:3.21 # for 3.3.x+\n\ncd $PULSAR_PATH\n# ensure the correct JDK version is used for building\nsdk u java $SDKMAN_JAVA_VERSION\n\ncommand mvn install -pl docker/pulsar,docker/pulsar-all \\\n    -DskipTests \\\n    -Pmain,docker,docker-push \\\n    -Ddocker.platforms=linux/amd64,linux/arm64 \\\n    -Ddocker.organization=$DOCKER_USER \\\n    -Ddocker.noCache=true\n"})}),"\n",(0,r.jsx)(a.h2,{id:"call-for-the-vote-to-release-a-version-based-on-the-release-candidate",children:"Call for the vote to release a version based on the release candidate"}),"\n",(0,r.jsx)(a.p,{children:"Start a voting thread on the dev mailing list."}),"\n",(0,r.jsx)(a.p,{children:"Here is a way to render the template for the voting email."}),"\n",(0,r.jsx)(a.p,{children:"Set these shell variables"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'DOCKER_USER=<your-dockerhub-username>\nSTAGING_REPO="<enter staging repo from https://repository.apache.org/#stagingRepositories>"\nMY_NAME="Firstname Lastname"\nPREVIOUS_VERSION_WITHOUT_RC="3.0.3"\n'})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'echo "Go to https://hub.docker.com/r/$DOCKER_USER/pulsar/tags to find the layer URL for the pulsar image"\necho "Go to https://hub.docker.com/r/$DOCKER_USER/pulsar-all/tags to find the layer URL for the pulsar image"\n'})}),"\n",(0,r.jsx)(a.p,{children:"Set these additional shell variable after looking up the URLs"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'PULSAR_IMAGE_URL="<looked up in previous step>"\nPULSAR_ALL_IMAGE_URL="<looked up in previous step>"\n'})}),"\n",(0,r.jsx)(a.p,{children:"Set also these"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'PULSAR_IMAGE_NAME="$DOCKER_USER/pulsar:$VERSION_WITHOUT_RC-$(git rev-parse --short=7 v$VERSION_RC^{commit})"\nPULSAR_ALL_IMAGE_NAME="$DOCKER_USER/pulsar-all:$VERSION_WITHOUT_RC-$(git rev-parse --short=7 v$VERSION_RC^{commit})"\n'})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# check that Pulsar standalone starts (use CTRL-C to terminate) for both architectures\ndocker run --platform linux/arm64 --rm $PULSAR_IMAGE_NAME /pulsar/bin/pulsar standalone\ndocker run --platform linux/amd64 --rm $PULSAR_IMAGE_NAME /pulsar/bin/pulsar standalone\ndocker run --platform linux/arm64 --rm $PULSAR_ALL_IMAGE_NAME /pulsar/bin/pulsar standalone\ndocker run --platform linux/amd64 --rm $PULSAR_ALL_IMAGE_NAME /pulsar/bin/pulsar standalone\n"})}),"\n",(0,r.jsx)(a.p,{children:"Now you can render the template to the clipboard"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"VOTE_DURATION=72\ntee >(pbcopy) <<EOF\nTo: dev@pulsar.apache.org\nSubject: [VOTE] Release Apache Pulsar $VERSION_WITHOUT_RC based on $VERSION_RC\n\nHello Apache Pulsar Community,\n\nThis is a call for the vote to release the Apache Pulsar version $VERSION_WITHOUT_RC based on $VERSION_RC.\n\nIncluded changes since the previous release:\nhttps://github.com/apache/pulsar/compare/v$PREVIOUS_VERSION_WITHOUT_RC...v$VERSION_RC\n\n*** Please download, test and vote on this release. This vote will stay open\nfor at least $VOTE_DURATION hours ***\n\nOnly votes from PMC members are binding, but members of the community are\nencouraged to test the release and vote with \"(non-binding)\".\n\nNote that we are voting upon the source (tag), binaries are provided for\nconvenience.\n\nThe release candidate is available at:\nhttps://dist.apache.org/repos/dist/dev/pulsar/pulsar-$VERSION_RC/\n\nSHA-512 checksums:\n$(cat $HOME/pulsar-svn-release-$VERSION_RC/pulsar-$VERSION_RC/apache-pulsar-$VERSION_WITHOUT_RC-src.tar.gz.sha512 | sed 's|\\./||g')\n$(cat $HOME/pulsar-svn-release-$VERSION_RC/pulsar-$VERSION_RC/apache-pulsar-$VERSION_WITHOUT_RC-bin.tar.gz.sha512 | sed 's|\\./||g')\n\nMaven staging repo:\n$STAGING_REPO\n\nThe tag to be voted upon:\nv$VERSION_RC (commit $(git rev-parse v$VERSION_RC^{commit}))\nhttps://github.com/apache/pulsar/releases/tag/v$VERSION_RC\n\nPulsar's KEYS file containing PGP keys you use to sign the release:\nhttps://downloads.apache.org/pulsar/KEYS\n\nDocker images:\ndocker pull $PULSAR_IMAGE_NAME\n$PULSAR_IMAGE_URL\ndocker pull $PULSAR_ALL_IMAGE_NAME\n$PULSAR_ALL_IMAGE_URL\n\nPlease download the source package, and follow the README to build\nand run the Pulsar standalone service.\n\nMore advanced release validation instructions can be found at\nhttps://pulsar.apache.org/contribute/validate-release-candidate/\n\nThanks,\n\n$MY_NAME\nEOF\n"})}),"\n",(0,r.jsx)(a.p,{children:"The vote should be open for at least 72 hours (3 days). Votes from Pulsar PMC members will be considered binding, while anyone else is encouraged to verify the release and vote as well."}),"\n",(0,r.jsx)(a.p,{children:"If the release is approved here with 3 +1 binding votes, you can then proceed to the next step. Otherwise, you should repeat the previous steps and prepare another release candidate to vote."}),"\n",(0,r.jsx)(a.h2,{id:"lts-preview-release-steps-this-only-applies-to-preview-releases-such-as-400-preview1",children:"LTS Preview release steps (this only applies to preview releases such as 4.0.0-preview.1)"}),"\n",(0,r.jsx)(a.p,{children:"For preview releases there is no release voting. The preview release is directly announced on Pulsar user and dev mailing lists to get release feedback before the official LTS release."}),"\n",(0,r.jsx)(a.p,{children:"A preview release is not an official Apache release and it's comparable to a nightly build of a project.\nThe preview release artifacts will be made available on Maven central and Docker Hub so that users can practically use the artifacts in their existing build pipelines and provide feedback to the project. Binaries are complementary in Apache projects and don't state an official ASF release."}),"\n",(0,r.jsxs)(a.p,{children:["Before continuing, perform a local ",(0,r.jsx)(a.a,{href:"/contribute/validate-release-candidate",children:"release validation"}),' for the artifacts.\nAfter this, follow the steps "Release Maven modules" and "Release Docker images" to publish the preview release in Maven central and DockerHub. The preview release isn\'t an official release and therefore the sources should NOT be released on SVN.']}),"\n",(0,r.jsx)(a.p,{children:"Set the environment variables:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"PULSAR_IMAGE_NAME=apachepulsar/pulsar:$VERSION_WITHOUT_RC\nPULSAR_ALL_IMAGE_NAME=apachepulsar/pulsar-all:$VERSION_WITHOUT_RC\nLTS_RELEASE=4.0\n"})}),"\n",(0,r.jsx)(a.p,{children:"To announce a LTS preview release, you can use this template:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'tee >(pbcopy) <<EOF\nTo: dev@pulsar.apache.org, users@pulsar.apache.org\nSubject: Apache Pulsar $VERSION_WITHOUT_RC available for testing - Feedback requested\n\nDear Apache Pulsar Community,\n\nWe\'re excited to announce the availability of Apache Pulsar $VERSION_WITHOUT_RC, a preview release aimed at gathering user feedback for the upcoming Pulsar $LTS_RELEASE LTS release. This preview is not an official Apache release but provides an early look at the new features and changes.\n\nPreview artifacts are now available on Maven Central and Docker Hub, enabling users to integrate and test them in their build pipelines and environments. You can find downloadable artifacts at https://dist.apache.org/repos/dist/dev/pulsar/pulsar-$VERSION_RC/.\n\nRepository tag: v$VERSION_RC (commit $(git rev-parse v$VERSION_RC^{commit}))\nhttps://github.com/apache/pulsar/releases/tag/v$VERSION_RC\n\nChanges since $PREVIOUS_VERSION_WITHOUT_RC:\nhttps://github.com/apache/pulsar/compare/v$PREVIOUS_VERSION_WITHOUT_RC...v$VERSION_RC\n\nDocker images: $PULSAR_IMAGE_NAME and $PULSAR_ALL_IMAGE_NAME.\nDocker image tag is "$VERSION_WITHOUT_RC".\n\nFor Java client testing, we recommend using the Pulsar BOM in Maven or Gradle builds with version "$VERSION_WITHOUT_RC".\nPulsar BOM usage is explained at https://pulsar.apache.org/docs/next/client-libraries-java-setup/#pulsar-bom.\n\nWe urge you to test this preview in your environments and provide feedback. Please report any issues on our GitHub issue tracker at https://github.com/apache/pulsar/issues, checking for existing reports first.\nKnown blockers are tracked with the "release/blocker" label at https://github.com/apache/pulsar/labels/release%2Fblocker.\n\nPulsar $LTS_RELEASE timeline:\n$(date -I): $LTS_RELEASE preview 1\n$(date --date="10 days" -I): Target for $LTS_RELEASE preview 2\n$(date --date="10 days" -I): Code freeze for $LTS_RELEASE by branching branch-$LTS_RELEASE from the master branch\n$(date --date="13 days" -I): Target for $LTS_RELEASE release candidate 1\n$(date --date="18 days" -I): Reserved for $LTS_RELEASE release candidate 2 if needed\n$(date --date="20 days" -I): Planned $LTS_RELEASE.0 announcement (if release candidate 1 passes)\n\nYour participation is crucial in shaping the quality of Pulsar $LTS_RELEASE. We appreciate your support and feedback.\n\nBest regards,\n\n$MY_NAME\nEOF\n'})}),"\n",(0,r.jsx)(a.h2,{id:"summarize-the-voting-for-the-release",children:"Summarize the voting for the release"}),"\n",(0,r.jsxs)(a.p,{children:["Once the vote has been passed, you will need to send a result vote to ",(0,r.jsx)(a.a,{href:"mailto:dev@pulsar.apache.org",children:"dev@pulsar.apache.org"})," on the voting thread."]}),"\n",(0,r.jsx)(a.p,{children:"Message:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'tee >(pbcopy) <<EOF\nHello all,\n\nThe vote to release Apache Pulsar version ${VERSION_WITHOUT_RC} based on ${VERSION_RC} is now closed.\n\nThe vote PASSED with X binding "+1", Y non-binding "+1" and 0 "-1" votes:\n\n"+1" Binding votes:\n\n  - <name>\n\n"+1" Non-Binding votes:\n\n  - <name>\n\nI\'ll continue with the release process and the release announcement will follow shortly.\n\nThanks,\n<your name>\nEOF\n'})}),"\n",(0,r.jsx)(a.h2,{id:"promote-the-release",children:"Promote the release"}),"\n",(0,r.jsxs)(a.p,{children:["For commands below, you need to set the environment variables ",(0,r.jsx)(a.code,{children:"VERSION_RC"}),", ",(0,r.jsx)(a.code,{children:"VERSION_WITHOUT_RC"}),", ",(0,r.jsx)(a.code,{children:"UPSTREAM_REMOTE"})," and ",(0,r.jsx)(a.code,{children:"APACHE_USER"}),".\nPlease check the ",(0,r.jsx)(a.a,{href:"#env-vars",children:"environment variables step"})," for doing that."]}),"\n",(0,r.jsx)(a.h3,{id:"publish-the-final-tag",children:"Publish the final tag"}),"\n",(0,r.jsx)(a.p,{children:"Create and push the final Git tag:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'git tag -u $APACHE_USER@apache.org v$VERSION_WITHOUT_RC $(git rev-parse v$VERSION_RC^{}) -m "Release v$VERSION_WITHOUT_RC"\ngit push $UPSTREAM_REMOTE v$VERSION_WITHOUT_RC\n'})}),"\n",(0,r.jsx)(a.h3,{id:"create-release-notes-in-github",children:"Create release notes in GitHub"}),"\n",(0,r.jsxs)(a.p,{children:["Then, you can ",(0,r.jsx)(a.a,{href:"https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository#creating-a-release",children:"create a GitHub release"})," based on the tag."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'# open this URL and create release notes by clicking "Create release from tag"\necho https://github.com/apache/pulsar/releases/tag/v${VERSION_WITHOUT_RC}\n\n# cherry-picked changes template\necho "[""Cherry-picked changes](https://github.com/apache/pulsar/pulls?q=is%3Apr+is%3Amerged+label%3Arelease%2F${VERSION_WITHOUT_RC}+label%3Acherry-picked%2F${VERSION_BRANCH}+sort%3Acreated-asc)"|pbcopy\n'})}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsx)(a.li,{children:'Open the above URL in a browser and create release notes by clicking "Create release from tag".'}),"\n",(0,r.jsx)(a.li,{children:'Find "Previous tag: auto" in the UI above the text box and choose the previous release there.'}),"\n",(0,r.jsx)(a.li,{children:'Click "Generate release notes".'}),"\n",(0,r.jsx)(a.li,{children:"Review the generated release notes."}),"\n",(0,r.jsxs)(a.li,{children:["Since changes are cherry-picked, you will have to include a link such as ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar/pulls?q=is%3Apr+is%3Amerged+label%3Arelease%2F2.11.4+label%3Acherry-picked%2Fbranch-2.11+sort%3Acreated-asc",children:"Cherry-picked changes"}),". There's a ",(0,r.jsx)(a.a,{href:"/contribute/release-note-guide",children:"separate guide for generating automated release notes"}),"."]}),"\n",(0,r.jsx)(a.li,{children:'Unselect "Set as the latest release" (that should be only selected for the actual latest release of Pulsar)'}),"\n",(0,r.jsx)(a.li,{children:'Click "Publish release".'}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.a,{href:"/contribute/release-note-guide",children:"Writing release notes"}),' guide should be followed to generate a proper release notes. That is covered in the "Update the document" section.']}),"\n",(0,r.jsx)(a.h3,{id:"release-the-artifacts-on-svn",children:"Release the artifacts on SVN"}),"\n",(0,r.jsxs)(a.p,{children:["Promote the artifacts on the release SVN repo ",(0,r.jsx)(a.a,{href:"https://dist.apache.org/repos/dist/release",children:"https://dist.apache.org/repos/dist/release"}),". Note that this repo is limited to PMC members, You may need a PMC member's help if you are not one:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'svn move -m "Release Apache Pulsar $VERSION_WITHOUT_RC" \\\n  https://dist.apache.org/repos/dist/dev/pulsar/pulsar-$VERSION_RC \\\n  https://dist.apache.org/repos/dist/release/pulsar/pulsar-$VERSION_WITHOUT_RC\n'})}),"\n",(0,r.jsx)(a.h3,{id:"release-maven-modules",children:"Release Maven modules"}),"\n",(0,r.jsxs)(a.p,{children:["Promote the Maven staging repository for release. Login to ",(0,r.jsx)(a.a,{href:"https://repository.apache.org",children:"https://repository.apache.org"}),' and select the staging repository associated with the RC candidate that was approved.\nDouble check the staging repository name from the release vote email.\nSelect the repository and click on "Release". Artifacts will now be made available on Maven central.']}),"\n",(0,r.jsx)(a.h3,{id:"release-docker-images",children:"Release Docker images"}),"\n",(0,r.jsx)(a.p,{children:"This step is performed by a Apache Pulsar PMC member. Please request help from a PMC member for completing this step."}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.code,{children:"regctl"})," from ",(0,r.jsx)(a.a,{href:"https://github.com/regclient/regclient",children:"regclient"})," is needed for copying multi-arch images. Install with ",(0,r.jsx)(a.code,{children:"brew install regclient"})," or with ",(0,r.jsx)(a.a,{href:"https://github.com/regclient/regclient/blob/main/docs/install.md",children:"other installation options"})," of regclient. The benefit of ",(0,r.jsx)(a.code,{children:"regctl"})," over using ",(0,r.jsx)(a.code,{children:"docker pull/tag/push"})," is that it will handle copying both ",(0,r.jsx)(a.code,{children:"amd64"})," and the ",(0,r.jsx)(a.code,{children:"arm64"})," image."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"RELEASE_MANAGER_DOCKER_USER=otheruser\n"})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"CANDIDATE_TAG=${VERSION_WITHOUT_RC}-$(git rev-parse --short=7 v$VERSION_RC^{})\nregctl image copy ${RELEASE_MANAGER_DOCKER_USER}/pulsar:${CANDIDATE_TAG} apachepulsar/pulsar:$VERSION_WITHOUT_RC\nregctl image copy ${RELEASE_MANAGER_DOCKER_USER}/pulsar-all:${CANDIDATE_TAG} apachepulsar/pulsar-all:$VERSION_WITHOUT_RC\n"})}),"\n",(0,r.jsx)(a.p,{children:"Go to check the result:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"https://hub.docker.com/r/apachepulsar/pulsar/tags",children:"https://hub.docker.com/r/apachepulsar/pulsar/tags"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"https://hub.docker.com/r/apachepulsar/pulsar-all/tags",children:"https://hub.docker.com/r/apachepulsar/pulsar-all/tags"})}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"Ensure that newer than 3.x images support both amd64 and arm64. Older 2.x images should be amd64 only."}),"\n",(0,r.jsx)(a.admonition,{type:"caution",children:(0,r.jsx)(a.p,{children:"This step is for the latest release only."})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"regctl image copy apachepulsar/pulsar:$VERSION_WITHOUT_RC apachepulsar/pulsar:latest\nregctl image copy apachepulsar/pulsar-all:$VERSION_WITHOUT_RC apachepulsar/pulsar-all:latest\n"})}),"\n",(0,r.jsx)(a.h3,{id:"release-helm-chart",children:"Release Helm Chart"}),"\n",(0,r.jsx)(a.admonition,{type:"caution",children:(0,r.jsxs)(a.p,{children:["This step is for the latest ",(0,r.jsx)(a.em,{children:"LTS"})," release only"]})}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["Bump the image version in the Helm Chart: ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-helm-chart/blob/master/charts/pulsar/values.yaml",children:"charts/pulsar/values.yaml"})]}),"\n",(0,r.jsxs)(a.li,{children:["Bump the chart version and ",(0,r.jsx)(a.code,{children:"appVersion"})," in the Helm Chart to the released version: ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-helm-chart/blob/master/charts/pulsar/Chart.yaml",children:"charts/pulsar/Chart.yaml"})]}),"\n",(0,r.jsx)(a.li,{children:"Send a pull request for reviews and get it merged."}),"\n",(0,r.jsxs)(a.li,{children:["Once it is merged, the chart will be automatically released to GitHub releases at ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-helm-chart",children:"https://github.com/apache/pulsar-helm-chart"})," and updated to ",(0,r.jsx)(a.a,{href:"https://pulsar.apache.org/charts/index.yaml",children:"https://pulsar.apache.org/charts/index.yaml"}),"."]}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"release-homebrew-libpulsar-package",children:"Release Homebrew libpulsar package"}),"\n",(0,r.jsx)(a.p,{children:"For 2.8, 2.9 and 2.10 releases, you should release the libpulsar package on Homebrew."}),"\n",(0,r.jsx)(a.admonition,{type:"caution",children:(0,r.jsxs)(a.p,{children:["The C++ client is now developing in a ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-client-cpp",children:"separated repo"}),". You should check its own release guide if you're releasing version >= 3.0.0."]})}),"\n",(0,r.jsxs)(a.p,{children:["Release a new version of libpulsar for Homebrew, You can follow the example ",(0,r.jsx)(a.a,{href:"https://github.com/Homebrew/homebrew-core/pull/53514",children:"here"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"release-python-client",children:"Release Python client"}),"\n",(0,r.jsx)(a.p,{children:"For 2.8, 2.9 and 2.10 releases, you should release the Python client."}),"\n",(0,r.jsx)(a.admonition,{type:"note",children:(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["You need to create an account on PyPI: ",(0,r.jsx)(a.a,{href:"https://pypi.org/account/register/",children:"https://pypi.org/account/register/"})]}),"\n",(0,r.jsx)(a.li,{children:"Ask anyone that has been a release manager before to add you as a maintainer for pulsar-docker on PyPI"}),"\n",(0,r.jsxs)(a.li,{children:["Once you have completed the following steps in this section, you can check if the wheels are uploaded successfully in ",(0,r.jsx)(a.a,{href:"https://pypi.org/project/pulsar-client/#files",children:"Download files"}),". Remember to switch to the correct version in ",(0,r.jsx)(a.a,{href:"https://pypi.org/project/pulsar-client/#history",children:"Release history"}),"."]}),"\n"]})}),"\n",(0,r.jsx)(a.admonition,{type:"caution",children:(0,r.jsx)(a.p,{children:"Make sure you run following command at the release tag!"})}),"\n",(0,r.jsx)(a.admonition,{type:"caution",children:(0,r.jsxs)(a.p,{children:["The Python client is now developing in a ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-client-python",children:"separated repo"}),". You should check its own release guide if you're releasing version >= 3.0.0."]})}),"\n",(0,r.jsx)(a.h4,{id:"linux",children:"Linux"}),"\n",(0,r.jsx)(a.p,{children:"There is a script that builds and packages the Python client inside Docker images:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"pulsar-client-cpp/docker/build-wheels.sh\n"})}),"\n",(0,r.jsxs)(a.p,{children:["The wheel files will be left under ",(0,r.jsx)(a.code,{children:"pulsar-client-cpp/python/wheelhouse"}),". Make sure all the files have ",(0,r.jsx)(a.code,{children:"manylinux"})," in the filenames. Otherwise, those files will not be able to upload to PyPI."]}),"\n",(0,r.jsx)(a.p,{children:"Run the following command to push the built wheel files:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"cd pulsar-client-cpp/python/wheelhouse\npip install twine\ntwine upload pulsar_client-*.whl\n"})}),"\n",(0,r.jsx)(a.h4,{id:"macos",children:"macOS"}),"\n",(0,r.jsx)(a.p,{children:"There is a script that builds and packages the Python client inside Docker images:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"pulsar-client-cpp/python/build-mac-wheels.sh\n"})}),"\n",(0,r.jsxs)(a.p,{children:["The wheel files will be generated at each platform directory under ",(0,r.jsx)(a.code,{children:"pulsar-client-cpp/python/pkg/osx/"}),". Then you can run ",(0,r.jsx)(a.code,{children:"twin upload"})," to upload those wheel files."]}),"\n",(0,r.jsx)(a.h2,{id:"update-the-document",children:"Update the document"}),"\n",(0,r.jsx)(a.h3,{id:"release-notes",children:"Release notes"}),"\n",(0,r.jsxs)(a.p,{children:["This step is for every release. Read the specific guide for ",(0,r.jsx)(a.a,{href:"/contribute/release-note-guide",children:"writing release notes"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"swagger-files",children:"Swagger files"}),"\n",(0,r.jsx)(a.p,{children:"This step is for every release."}),"\n",(0,r.jsx)(a.p,{children:"First, build swagger files from apache/pulsar repo at the released tag:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# ensure the correct JDK version is used for building\nsdk u java $SDKMAN_JAVA_VERSION\ncommand mvn -ntp install -Pcore-modules,swagger,-main -DskipTests -DskipSourceReleaseAssembly=true -Dspotbugs.skip=true -Dlicense.skip=true\nPULSAR_PATH=$(pwd)\n"})}),"\n",(0,r.jsx)(a.p,{children:"Now, run the following script from the main branch of apache/pulsar-site repo:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"cd tools/pytools\npoetry install\npoetry run bin/rest-apidoc-generator.py --master-path=$PULSAR_PATH --version=$VERSION_WITHOUT_RC\n"})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'# commit files\n# move to pulsar-site root\ncd ../..\ngit add -u\ngit add static/swagger/$VERSION_WITHOUT_RC\ngit commit -m "update rest-apidoc for $VERSION_WITHOUT_RC"\n'})}),"\n",(0,r.jsxs)(a.p,{children:["Read more on the manual of ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-site/tree/main/tools/pytools/README.md",children:"pytools"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"javadoc",children:"Javadoc"}),"\n",(0,r.jsx)(a.admonition,{type:"caution",children:(0,r.jsx)(a.p,{children:"This step is for feature releases only, unless you're sure that significant Javadoc fixes are made against the patch release."})}),"\n",(0,r.jsx)(a.p,{children:"After publish Java libraries, run the following script from the main branch of apache/pulsar-site repo:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"cd tools/pytools\npoetry install\npoetry run bin/java-apidoc-generator.py $PULSAR_PATH\n"})}),"\n",(0,r.jsx)(a.p,{children:"Once the docs are generated, you can add them and submit them in a PR. The expected doc output is:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"static/api/admin"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"static/api/client"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.code,{children:"static/api/pulsar-functions"})}),"\n"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'cd ../..\ngit add static/api/*\ngit commit -m "update java-apidoc for $VERSION_WITHOUT_RC"\n'})}),"\n",(0,r.jsxs)(a.p,{children:["Read more on the manual of ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-site/tree/main/tools/pytools/README.md",children:"pytools"}),"."]}),"\n",(0,r.jsx)(a.h3,{id:"reference",children:"Reference"}),"\n",(0,r.jsx)(a.admonition,{type:"caution",children:(0,r.jsx)(a.p,{children:"This step is for feature releases only, unless you're sure that significant reference fixes are made against the patch release."})}),"\n",(0,r.jsx)(a.p,{children:"You can generate references of config and command-line tool by running the following script from the main branch of apache/pulsar-site repo:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# build Pulsar distributions under /path/to/pulsar-3.X.Y\ncd tools/pytools\npoetry install\npoetry run bin/reference-doc-generator.py --master-path=$PULSAR_PATH --version=$VERSION_WITHOUT_RC\n"})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'cd ../..\ngit add static/reference/*\ngit commit -m "update reference for $VERSION_WITHOUT_RC"\n'})}),"\n",(0,r.jsxs)(a.p,{children:["Once the docs are generated, you can add them and submit them in a PR. The expected doc output is ",(0,r.jsx)(a.code,{children:"static/reference/2.X.x"})]}),"\n",(0,r.jsxs)(a.p,{children:["Read more on the manual of ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-site/tree/main/tools/pytools/README.md",children:"pytools"}),"."]}),"\n",(0,r.jsxs)(a.h2,{id:"update-docs-redirect",children:["Update ",(0,r.jsx)(a.code,{children:"/docs"})," redirect"]}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://pulsar.apache.org/docs",children:"https://pulsar.apache.org/docs"})," should redirect to the latest feature release documentation."]}),"\n",(0,r.jsx)(a.p,{children:"If you're working on a patch release for an older feature version of Pulsar, you can skip this step."}),"\n",(0,r.jsxs)(a.p,{children:["Otherwise, you should update the version in this file: ",(0,r.jsx)(a.code,{children:"static/.htaccess"})]}),"\n",(0,r.jsxs)(a.h2,{id:"update-docs-version-list-dropdown",children:["Update ",(0,r.jsx)(a.code,{children:"/docs"})," version list dropdown"]}),"\n",(0,r.jsx)(a.p,{children:"The dropdown should have the following items:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Next"}),"\n",(0,r.jsxs)(a.li,{children:["Active versions ",(0,r.jsx)(a.a,{href:"/contribute/release-policy/#supported-versions",children:"still in support"})]}),"\n",(0,r.jsx)(a.li,{children:"Others"}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["LTS versions should be labeled this way: ",(0,r.jsx)(a.code,{children:"<version> LTS"}),"."]}),"\n",(0,r.jsx)("img",{alt:"docs version dropdown",src:"/img/version-dropdown.png",width:"320px"}),"\n",(0,r.jsx)(a.p,{children:"If you're working on a patch release for an older feature version of Pulsar, you can skip this step."}),"\n",(0,r.jsxs)(a.p,{children:["Otherwise, you should update the dropdown version list in this file: ",(0,r.jsx)(a.code,{children:"src/theme/DocsVersionDropdownNavbarItem.js"})]}),"\n",(0,r.jsx)(a.h2,{id:"announce-the-release",children:"Announce the release"}),"\n",(0,r.jsxs)(a.p,{children:["Once the release artifacts are available in the Apache Mirrors and the website is updated, you need to announce the release. You should email to ",(0,r.jsx)(a.a,{href:"mailto:dev@pulsar.apache.org",children:"dev@pulsar.apache.org"}),", ",(0,r.jsx)(a.a,{href:"mailto:users@pulsar.apache.org",children:"users@pulsar.apache.org"}),", and ",(0,r.jsx)(a.a,{href:"mailto:announce@apache.org",children:"announce@apache.org"}),". Here is a sample content:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"tee >(pbcopy) <<EOF\nTo: dev@pulsar.apache.org, users@pulsar.apache.org, announce@apache.org\nSubject: [ANNOUNCE] Apache Pulsar $VERSION_WITHOUT_RC released\n\nThe Apache Pulsar team is proud to announce Apache Pulsar version $VERSION_WITHOUT_RC.\n\nPulsar is a highly scalable, low latency messaging platform running on\ncommodity hardware. It provides simple pub-sub semantics over topics,\nguaranteed at-least-once delivery of messages, automatic cursor management for\nsubscribers, and cross-datacenter replication.\n\nFor Pulsar release details and downloads, visit:\n\nhttps://pulsar.apache.org/download\n\nRelease Notes are at:\nhttps://pulsar.apache.org/release-notes/versioned/pulsar-$VERSION_WITHOUT_RC/\n\nWe would like to thank the contributors that made the release possible.\n\nRegards,\n\nThe Pulsar Team\nEOF\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Send the email in plain text mode since the ",(0,r.jsx)(a.a,{href:"mailto:announce@apache.org",children:"announce@apache.org"})," mailing list will reject messages with text/html content."]}),"\n",(0,r.jsx)(a.p,{children:'In Gmail, there\'s an option to set "Plain text mode" in the "\u22ee" menu.'}),"\n",(0,r.jsx)(a.h2,{id:"write-a-blog-post-optional",children:"Write a blog post (optional)"}),"\n",(0,r.jsx)(a.p,{children:"It is encouraged to write a blog post to summarize the features introduced in this release, especially for feature releases."}),"\n",(0,r.jsxs)(a.p,{children:["You can follow the example ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar/pull/2308",children:"here"}),". Be aware that the source of blog is moved to ",(0,r.jsx)(a.a,{href:"https://github.com/apache/pulsar-site/tree/main/blog",children:"here"}),"."]}),"\n",(0,r.jsx)(a.h2,{id:"remove-old-releases",children:"Remove old releases"}),"\n",(0,r.jsx)(a.p,{children:"Remove the old releases (if any). You only need the latest release there, and older releases are available through the Apache archive:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"# Get the list of releases\nsvn ls https://dist.apache.org/repos/dist/release/pulsar\n\n# Delete each release (except for the last one)\nsvn rm https://dist.apache.org/repos/dist/release/pulsar/pulsar-3.X.X\n"})}),"\n",(0,r.jsx)(a.h2,{id:"move-to-next-version-in-pomxml",children:"Move to next version in pom.xml"}),"\n",(0,r.jsx)(a.h3,{id:"feature-releases-master-branch",children:"Feature releases (master branch)"}),"\n",(0,r.jsxs)(a.p,{children:["You need to move the master version to the next iteration ",(0,r.jsx)(a.code,{children:"Y"})," (",(0,r.jsx)(a.code,{children:"X + 1"}),")."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:"git checkout master\n./src/set-project-version.sh 3.Y.0-SNAPSHOT\ngit commit -a -s -m \"[cleanup][build] Bumped version to 3.Y.0-SNAPSHOT'\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Since this needs to be merged into ",(0,r.jsx)(a.code,{children:"master"}),", you need to follow the regular process and create a Pull Request on GitHub."]}),"\n",(0,r.jsxs)(a.p,{children:["For feature releases, since a new branch is created for the release, the new branch needs to be protected against force pushes to prevent corrupting the commit history. This is done by adding a rule to the branch protection settings for the new branch in ",(0,r.jsx)(a.code,{children:".asf.yaml"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-yaml",children:"export RELEASE_BRANCH=\"branch-X.Y\"\n# use yq to add the new branch to the .asf.yaml file\nyq -i '.github.protected_branches[strenv(RELEASE_BRANCH)]={}' .asf.yaml\n# commit the change to .asf.yaml\ngit add .asf.yaml\ngit commit -m \"[improve][ci] Protect $RELEASE_BRANCH from force pushes'\n"})}),"\n",(0,r.jsx)(a.p,{children:"This will prevent force pushing to the release branch, which is important to maintain the integrity of the commit history."}),"\n",(0,r.jsx)(a.h3,{id:"for-maintenance-branches",children:"For maintenance branches"}),"\n",(0,r.jsxs)(a.p,{children:["After the release process, you should bump the project version and append it with ",(0,r.jsx)(a.code,{children:"-SNAPSHOT"}),"."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-shell",children:'./src/set-project-version.sh x.x.x-SNAPSHOT\ngit add -u\ngit commit -m "Bump version to next snapshot version"\n'})})]})}function d(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,a,s)=>{s.d(a,{R:()=>l,x:()=>i});var n=s(96540);const r={},t=n.createContext(r);function l(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);
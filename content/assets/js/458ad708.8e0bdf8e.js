"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[51828],{79319:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"client-libraries-java","title":"Pulsar Java client","description":"You can use a Pulsar Java client to create the Java producer, consumer, and reader of messages and to perform administrative tasks. The current Java client version is 2.3.2.","source":"@site/versioned_docs/version-2.3.2/client-libraries-java.md","sourceDirName":".","slug":"/client-libraries-java","permalink":"/docs/2.3.2/client-libraries-java","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.3.2/client-libraries-java.md","tags":[],"version":"2.3.2","frontMatter":{"id":"client-libraries-java","title":"Pulsar Java client","sidebar_label":"Java"},"sidebar":"docsSidebar","previous":{"title":"Extend Authentication and Authorization","permalink":"/docs/2.3.2/security-extending"},"next":{"title":"Go","permalink":"/docs/2.3.2/client-libraries-go"}}');var i=n(74848),t=n(28453),l=n(89089),c=n(19365);const a={id:"client-libraries-java",title:"Pulsar Java client",sidebar_label:"Java"},o=void 0,d={},h=[{value:"Installation",id:"installation",level:2},{value:"Maven",id:"maven",level:3},{value:"Gradle",id:"gradle",level:3},{value:"Connection URLs",id:"connection-urls",level:2},{value:"Client",id:"client",level:2},{value:"Default broker URLs for standalone clusters",id:"default-broker-urls-for-standalone-clusters",level:3},{value:"Cluster-level failover",id:"cluster-level-failover",level:3},{value:"What is cluster-level failover",id:"what-is-cluster-level-failover",level:4},{value:"Concept of cluster-level failover",id:"concept-of-cluster-level-failover",level:5},{value:"Why use cluster-level failover?",id:"why-use-cluster-level-failover",level:5},{value:"When to use cluster-level failover?",id:"when-to-use-cluster-level-failover",level:5},{value:"When cluster-level failover is triggered?",id:"when-cluster-level-failover-is-triggered",level:5},{value:"Why does cluster-level failover fail?",id:"why-does-cluster-level-failover-fail",level:5},{value:"What are the limitations of cluster-level failover?",id:"what-are-the-limitations-of-cluster-level-failover",level:5},{value:"What are the relationships between cluster-level failover and geo-replication?",id:"what-are-the-relationships-between-cluster-level-failover-and-geo-replication",level:4},{value:"How to use cluster-level failover",id:"how-to-use-cluster-level-failover",level:4},{value:"How does cluster-level failover work?",id:"how-does-cluster-level-failover-work",level:4},{value:"Producer",id:"producer",level:2},{value:"Configure producer",id:"configure-producer",level:3},{value:"Message routing",id:"message-routing",level:3},{value:"Async send",id:"async-send",level:3},{value:"Configure messages",id:"configure-messages",level:3},{value:"Enable chunking",id:"enable-chunking",level:3},{value:"Consumer",id:"consumer",level:2},{value:"Configure consumer",id:"configure-consumer",level:3},{value:"Async receive",id:"async-receive",level:3},{value:"Batch receive",id:"batch-receive",level:3},{value:"Configure chunking",id:"configure-chunking",level:3},{value:"Negative acknowledgment redelivery backoff",id:"negative-acknowledgment-redelivery-backoff",level:3},{value:"Acknowledgement timeout redelivery backoff",id:"acknowledgement-timeout-redelivery-backoff",level:3},{value:"Multi-topic subscriptions",id:"multi-topic-subscriptions",level:3},{value:"Subscription types",id:"subscription-types",level:3},{value:"Exclusive",id:"exclusive",level:4},{value:"Failover",id:"failover",level:4},{value:"Shared",id:"shared",level:4},{value:"Key_shared",id:"key_shared",level:4},{value:"Reader",id:"reader",level:2},{value:"Configure reader",id:"configure-reader",level:3},{value:"Sticky key range reader",id:"sticky-key-range-reader",level:3},{value:"Configure chunking",id:"configure-chunking-1",level:3},{value:"Create reader with interceptor",id:"create-reader-with-interceptor",level:3},{value:"Schema",id:"schema",level:2},{value:"AvroBaseStructSchema example",id:"avrobasestructschema-example",level:3},{value:"ProtobufNativeSchema example",id:"protobufnativeschema-example",level:3},{value:"Authentication",id:"authentication",level:2},{value:"TLS Authentication",id:"tls-authentication",level:3},{value:"Athenz",id:"athenz",level:3},{value:"Supported pattern formats",id:"supported-pattern-formats",level:4}];function u(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["You can use a Pulsar Java client to create the Java ",(0,i.jsx)(s.a,{href:"#producer",children:"producer"}),", ",(0,i.jsx)(s.a,{href:"#consumer",children:"consumer"}),", and ",(0,i.jsx)(s.a,{href:"#reader",children:"reader"})," of messages and to perform ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/admin-api-overview",children:"administrative tasks"}),". The current Java client version is ",(0,i.jsx)(s.strong,{children:"2.3.2"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["All the methods in ",(0,i.jsx)(s.a,{href:"#producer",children:"producer"}),", ",(0,i.jsx)(s.a,{href:"#consumer",children:"consumer"}),", and ",(0,i.jsx)(s.a,{href:"#reader",children:"reader"})," of a Java client are thread-safe."]}),"\n",(0,i.jsx)(s.p,{children:"Javadoc for the Pulsar client is divided into two domains by package as follows."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{style:{textAlign:"left"},children:"Package"}),(0,i.jsx)(s.th,{style:{textAlign:"left"},children:"Description"}),(0,i.jsx)(s.th,{style:{textAlign:"left"},children:"Maven Artifact"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/2.3.2",children:(0,i.jsx)(s.code,{children:"org.apache.pulsar.client.api"})})}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/",children:"The producer and consumer API"})}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.a,{href:"http://search.maven.org/#artifactdetails%7Corg.apache.pulsar%7Cpulsar-client%7C2.3.2%7Cjar",children:"org.apache.pulsar:pulsar-client:2.3.2"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/admin/2.3.2",children:(0,i.jsx)(s.code,{children:"org.apache.pulsar.client.admin"})})}),(0,i.jsxs)(s.td,{style:{textAlign:"left"},children:["The Java ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/admin-api-overview",children:"admin API"})]}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.a,{href:"http://search.maven.org/#artifactdetails%7Corg.apache.pulsar%7Cpulsar-client-admin%7C2.3.2%7Cjar",children:"org.apache.pulsar:pulsar-client-admin:2.3.2"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.code,{children:"org.apache.pulsar.client.all"})}),(0,i.jsxs)(s.td,{style:{textAlign:"left"},children:["Include both ",(0,i.jsx)(s.code,{children:"pulsar-client"})," and ",(0,i.jsx)(s.code,{children:"pulsar-client-admin"}),(0,i.jsx)("br",{})," Both ",(0,i.jsx)(s.code,{children:"pulsar-client"})," and ",(0,i.jsx)(s.code,{children:"pulsar-client-admin"})," are shaded packages and they shade dependencies independently. Consequently, the applications using both ",(0,i.jsx)(s.code,{children:"pulsar-client"})," and ",(0,i.jsx)(s.code,{children:"pulsar-client-admin"})," have redundant shaded classes. It would be troublesome if you introduce new dependencies but forget to update shading rules. ",(0,i.jsx)("br",{})," In this case, you can use ",(0,i.jsx)(s.code,{children:"pulsar-client-all"}),", which shades dependencies only one time and reduces the size of dependencies."]}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:(0,i.jsx)(s.a,{href:"http://search.maven.org/#artifactdetails%7Corg.apache.pulsar%7Cpulsar-client-all%7C2.3.2%7Cjar",children:"org.apache.pulsar:pulsar-client-all:2.3.2"})})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:["This document focuses only on the client API for producing and consuming messages on Pulsar topics. For how to use the Java admin client, see ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/admin-api-overview",children:"Pulsar admin interface"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(s.p,{children:["The latest version of the Pulsar Java client library is available via ",(0,i.jsx)(s.a,{href:"http://search.maven.org/#artifactdetails%7Corg.apache.pulsar%7Cpulsar-client%7C2.3.2%7Cjar",children:"Maven Central"}),". To use the latest version, add the ",(0,i.jsx)(s.code,{children:"pulsar-client"})," library to your build configuration."]}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"https://search.maven.org/artifact/org.apache.pulsar/pulsar-client",children:(0,i.jsx)(s.code,{children:"pulsar-client"})})," and ",(0,i.jsx)(s.a,{href:"https://search.maven.org/artifact/org.apache.pulsar/pulsar-client-admin",children:(0,i.jsx)(s.code,{children:"pulsar-client-admin"})})," shade dependencies via ",(0,i.jsx)(s.a,{href:"https://maven.apache.org/plugins/maven-shade-plugin/",children:"maven-shade-plugin"})," to avoid conflicts of the underlying dependency packages (such as Netty). If you do not want to manage dependency conflicts manually, you can use them."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"https://search.maven.org/artifact/org.apache.pulsar/pulsar-client-original",children:(0,i.jsx)(s.code,{children:"pulsar-client-original"})})," and ",(0,i.jsx)(s.a,{href:"https://search.maven.org/artifact/org.apache.pulsar/pulsar-client-admin-original",children:(0,i.jsx)(s.code,{children:"pulsar-client-admin-original"})})," ",(0,i.jsx)(s.strong,{children:"does not"})," shade dependencies. If you want to manage dependencies manually, you can use them."]}),"\n"]})}),"\n",(0,i.jsx)(s.h3,{id:"maven",children:"Maven"}),"\n",(0,i.jsxs)(s.p,{children:["If you use Maven, add the following information to the ",(0,i.jsx)(s.code,{children:"pom.xml"})," file."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:"\n\x3c!-- in your <properties> block --\x3e\n<pulsar.version>2.3.2</pulsar.version>\n\n\x3c!-- in your <dependencies> block --\x3e\n<dependency>\n  <groupId>org.apache.pulsar</groupId>\n  <artifactId>pulsar-client</artifactId>\n  <version>${pulsar.version}</version>\n</dependency>\n\n"})}),"\n",(0,i.jsx)(s.h3,{id:"gradle",children:"Gradle"}),"\n",(0,i.jsxs)(s.p,{children:["If you use Gradle, add the following information to the ",(0,i.jsx)(s.code,{children:"build.gradle"})," file."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-groovy",children:"\ndef pulsarVersion = '2.3.2'\n\ndependencies {\n    compile group: 'org.apache.pulsar', name: 'pulsar-client', version: pulsarVersion\n}\n\n"})}),"\n",(0,i.jsx)(s.h2,{id:"connection-urls",children:"Connection URLs"}),"\n",(0,i.jsxs)(s.p,{children:["To connect to Pulsar using client libraries, you need to specify a ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/developing-binary-protocol",children:"Pulsar protocol"})," URL."]}),"\n",(0,i.jsxs)(s.p,{children:["You can assign Pulsar protocol URLs to specific clusters and use the ",(0,i.jsx)(s.code,{children:"pulsar"})," scheme. The default port is ",(0,i.jsx)(s.code,{children:"6650"}),". The following is an example of ",(0,i.jsx)(s.code,{children:"localhost"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-http",children:"\npulsar://localhost:6650\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"If you have multiple brokers, the URL is as follows."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-http",children:"\npulsar://localhost:6550,localhost:6651,localhost:6652\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"A URL for a production Pulsar cluster is as follows."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-http",children:"\npulsar://pulsar.us-west.example.com:6650\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["If you use ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/security-tls-authentication",children:"TLS"})," authentication, the URL is as follows."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-http",children:"\npulsar+ssl://pulsar.us-west.example.com:6651\n\n"})}),"\n",(0,i.jsx)(s.h2,{id:"client",children:"Client"}),"\n",(0,i.jsxs)(s.p,{children:["You can instantiate a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/PulsarClient",children:"PulsarClient"})," object using just a URL for the target Pulsar ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/reference-terminology#cluster",children:"cluster"})," like this:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nPulsarClient client = PulsarClient.builder()\n        .serviceUrl("pulsar://localhost:6650")\n        .build();\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"If you have multiple brokers, you can initiate a PulsarClient like this:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nPulsarClient client = PulsarClient.builder()\n        .serviceUrl("pulsar://localhost:6650,localhost:6651,localhost:6652")\n        .build();\n\n'})}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h3,{id:"default-broker-urls-for-standalone-clusters",children:"Default broker URLs for standalone clusters"}),"\n",(0,i.jsxs)(s.p,{children:["If you run a cluster in ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/getting-started-standalone",children:"standalone mode"}),", the broker is available at the ",(0,i.jsx)(s.code,{children:"pulsar://localhost:6650"})," URL by default."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["If you create a client, you can use the ",(0,i.jsx)(s.code,{children:"loadConf"})," configuration. The following parameters are available in ",(0,i.jsx)(s.code,{children:"loadConf"}),"."]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:(0,i.jsx)("div",{children:"Description"})}),(0,i.jsx)(s.th,{children:"Default"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"serviceUrl"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Service URL provider for Pulsar service"}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"authPluginClassName"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Name of the authentication plugin"}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"authParams"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsxs)(s.td,{children:["Parameters for the authentication plugin ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(s.strong,{children:"Example"}),(0,i.jsx)("br",{})," key1",":val1",",key2",":val2"]}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"operationTimeoutMs"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"operationTimeoutMs"})}),(0,i.jsx)(s.td,{children:"Operation timeout"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"statsIntervalSeconds"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsxs)(s.td,{children:["Interval between each stats information",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Stats is activated with positive ",(0,i.jsx)(s.code,{children:"statsInterval"}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Set ",(0,i.jsx)(s.code,{children:"statsIntervalSeconds"})," to 1 second at least."]}),(0,i.jsx)(s.td,{children:"60"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"numIoThreads"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"The number of threads used for handling connections to brokers"}),(0,i.jsx)(s.td,{children:"1"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"numListenerThreads"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:['The number of threads used for handling message listeners. The listener thread pool is shared across all the consumers and readers using the "listener" model to get messages. For a given consumer, the listener is always invoked from the same thread to ensure ordering. If you want multiple threads to process a single topic, you need to create a ',(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/docs/en/next/concepts-messaging/#shared",children:(0,i.jsx)(s.code,{children:"shared"})})," subscription and multiple consumers for this subscription. This does not ensure ordering."]}),(0,i.jsx)(s.td,{children:"1"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"useTcpNoDelay"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsx)(s.td,{children:"Whether to use TCP no-delay flag on the connection to disable Nagle algorithm"}),(0,i.jsx)(s.td,{children:"true"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"enableTls"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsxs)(s.td,{children:["Whether to use TLS encryption on the connection. Note that this parameter is ",(0,i.jsx)(s.strong,{children:"deprecated"}),". If you want to enable TLS, use ",(0,i.jsx)(s.code,{children:"pulsar+ssl://"})," in ",(0,i.jsx)(s.code,{children:"serviceUrl"})," instead."]}),(0,i.jsx)(s.td,{children:"false"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"tlsTrustCertsFilePath"})}),(0,i.jsx)(s.td,{children:"string"}),(0,i.jsx)(s.td,{children:"Path to the trusted TLS certificate file"}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"tlsAllowInsecureConnection"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsx)(s.td,{children:"Whether the Pulsar client accepts untrusted TLS certificate from broker"}),(0,i.jsx)(s.td,{children:"false"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"tlsHostnameVerificationEnable"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsx)(s.td,{children:"Whether to enable TLS hostname verification"}),(0,i.jsx)(s.td,{children:"false"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"concurrentLookupRequest"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"The number of concurrent lookup requests allowed to send on each broker connection to prevent overload on broker"}),(0,i.jsx)(s.td,{children:"5000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxLookupRequest"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"The maximum number of lookup requests allowed on each broker connection to prevent overload on broker"}),(0,i.jsx)(s.td,{children:"50000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxNumberOfRejectedRequestPerConnection"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"The maximum number of rejected requests of a broker in a certain time frame (30 seconds) after the current connection is closed and the client creates a new connection to connect to a different broker"}),(0,i.jsx)(s.td,{children:"50"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"keepAliveIntervalSeconds"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"Seconds of keeping alive interval for each client broker connection"}),(0,i.jsx)(s.td,{children:"30"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"connectionTimeoutMs"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:["Duration of waiting for a connection to a broker to be established ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"If the duration passes without a response from a broker, the connection attempt is dropped"]}),(0,i.jsx)(s.td,{children:"10000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"requestTimeoutMs"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"Maximum duration for completing a request"}),(0,i.jsx)(s.td,{children:"60000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"defaultBackoffIntervalNanos"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"Default duration for a backoff interval"}),(0,i.jsx)(s.td,{children:"TimeUnit.MILLISECONDS.toNanos(100);"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxBackoffIntervalNanos"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsx)(s.td,{children:"Maximum duration for a backoff interval"}),(0,i.jsx)(s.td,{children:"TimeUnit.SECONDS.toNanos(30)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"socks5ProxyAddress"})}),(0,i.jsx)(s.td,{children:"SocketAddress"}),(0,i.jsx)(s.td,{children:"SOCKS5 proxy address"}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"socks5ProxyUsername"})}),(0,i.jsx)(s.td,{children:"string"}),(0,i.jsx)(s.td,{children:"SOCKS5 proxy username"}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"socks5ProxyPassword"})}),(0,i.jsx)(s.td,{children:"string"}),(0,i.jsx)(s.td,{children:"SOCKS5 proxy password"}),(0,i.jsx)(s.td,{children:"None"})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:["Check out the Javadoc for the ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/PulsarClient",children:"PulsarClient"})," class for a full list of configurable parameters."]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["In addition to client-level configuration, you can also apply ",(0,i.jsx)(s.a,{href:"#configure-producer",children:"producer"})," and ",(0,i.jsx)(s.a,{href:"#configure-consumer",children:"consumer"})," specific configuration as described in sections below."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"cluster-level-failover",children:"Cluster-level failover"}),"\n",(0,i.jsx)(s.p,{children:"This chapter describes the concept, benefits, use cases, constraints, usage, working principles, and more information about the cluster-level failover. It contains the following sections:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#what-is-cluster-level-failover",children:"What is cluster-level failover?"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#concept-of-cluster-level-failover",children:"Concept of cluster-level failover"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#why-use-cluster-level-failover",children:"Why use cluster-level failover?"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#when-to-use-cluster-level-failover",children:"When to use cluster-level failover?"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#when-cluster-level-failover-is-triggered",children:"When cluster-level failover is triggered?"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#why-does-cluster-level-failover-fail",children:"Why does cluster-level failover fail?"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#what-are-the-limitations-of-cluster-level-failover",children:"What are the limitations of cluster-level failover?"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#what-are-the-relationships-between-cluster-level-failover-and-geo-replication",children:"What are the relationships between cluster-level failover and geo-replication?"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#how-to-use-cluster-level-failover",children:"How to use cluster-level failover?"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"#how-does-cluster-level-failover-work",children:"How does cluster-level failover work?"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h4,{id:"what-is-cluster-level-failover",children:"What is cluster-level failover"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"This chapter helps you better understand the concept of cluster-level failover."}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h5,{id:"concept-of-cluster-level-failover",children:"Concept of cluster-level failover"}),"\n"]}),"\n",(0,i.jsxs)(l.A,{defaultValue:"Automatic cluster-level failover",values:[{label:"Automatic cluster-level failover",value:"Automatic cluster-level failover"},{label:"Controlled cluster-level failover",value:"Controlled cluster-level failover"}],children:[(0,i.jsxs)(c.A,{value:"Automatic cluster-level failover",children:[(0,i.jsxs)(s.p,{children:["Automatic cluster-level failover supports Pulsar clients switching from a primary cluster to one or several backup clusters automatically and seamlessly when it detects a failover event based on the configured detecting policy set by ",(0,i.jsx)(s.strong,{children:"users"}),"."]}),(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Automatic cluster-level failover",src:n(79635).A+"",width:"1084",height:"640"})})]}),(0,i.jsxs)(c.A,{value:"Controlled cluster-level failover",children:[(0,i.jsxs)(s.p,{children:["Controlled cluster-level failover supports Pulsar clients switching from a primary cluster to one or several backup clusters. The switchover is manually set by ",(0,i.jsx)(s.strong,{children:"administrators"}),"."]}),(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Controlled cluster-level failover",src:n(84024).A+"",width:"1080",height:"652"})})]})]}),"\n",(0,i.jsx)(s.p,{children:"Once the primary cluster functions again, Pulsar clients can switch back to the primary cluster. Most of the time users won\u2019t even notice a thing. Users can keep using applications and services without interruptions or timeouts."}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h5,{id:"why-use-cluster-level-failover",children:"Why use cluster-level failover?"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The cluster-level failover provides fault tolerance, continuous availability, and high availability together. It brings a number of benefits, including but not limited to:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Reduced cost: services can be switched and recovered automatically with no data loss."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:'Simplified management: businesses can operate on an "always-on" basis since no immediate user intervention is required.'}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Improved stability and robustness: it ensures continuous performance and minimizes service downtime."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h5,{id:"when-to-use-cluster-level-failover",children:"When to use cluster-level failover?"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The cluster-level failover protects your environment in a number of ways, including but not limited to:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Disaster recovery: cluster-level failover can automatically and seamlessly transfer the production workload on a primary cluster to one or several backup clusters, which ensures minimum data loss and reduced recovery time."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Planned migration: if you want to migrate production workloads from an old cluster to a new cluster, you can improve the migration efficiency with cluster-level failover. For example, you can test whether the data migration goes smoothly in case of a failover event, identify possible issues and risks before the migration."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h5,{id:"when-cluster-level-failover-is-triggered",children:"When cluster-level failover is triggered?"}),"\n"]}),"\n",(0,i.jsxs)(l.A,{defaultValue:"Automatic cluster-level failover",values:[{label:"Automatic cluster-level failover",value:"Automatic cluster-level failover"},{label:"Controlled cluster-level failover",value:"Controlled cluster-level failover"}],children:[(0,i.jsxs)(c.A,{value:"Automatic cluster-level failover",children:[(0,i.jsx)(s.p,{children:"Automatic cluster-level failover is triggered when Pulsar clients cannot connect to the primary cluster for a prolonged period of time. This can be caused by any number of reasons including, but not limited to:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Network failure: internet connection is lost."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Power failure: shutdown time of a primary cluster exceeds time limits."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Service error: errors occur on a primary cluster (for example, the primary cluster does not function because of time limits)."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Crashed storage space: the primary cluster does not have enough storage space, but the corresponding storage space on the backup server functions normally."}),"\n"]}),"\n"]})]}),(0,i.jsx)(c.A,{value:"Controlled cluster-level failover",children:(0,i.jsx)(s.p,{children:"Controlled cluster-level failover is triggered when administrators set the switchover manually."})})]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h5,{id:"why-does-cluster-level-failover-fail",children:"Why does cluster-level failover fail?"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Obviously, the cluster-level failover does not succeed if the backup cluster is unreachable by active Pulsar clients. This can happen for many reasons, including but not limited to:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Power failure: the backup cluster is shut down or does not function normally."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Crashed storage space: primary and backup clusters do not have enough storage space."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"If the failover is initiated, but no cluster can assume the role of an available cluster due to errors, and the primary cluster is not able to provide service normally."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"If you manually initiate a switchover, but services cannot be switched to the backup cluster server, then the system will attempt to switch services back to the primary cluster."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Fail to authenticate or authorize between 1) primary and backup clusters, or 2) between two backup clusters."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h5,{id:"what-are-the-limitations-of-cluster-level-failover",children:"What are the limitations of cluster-level failover?"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Currently, cluster-level failover can perform probes to prevent data loss, but it can not check the status of backup clusters. If backup clusters are not healthy, you cannot produce or consume data."}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h4,{id:"what-are-the-relationships-between-cluster-level-failover-and-geo-replication",children:"What are the relationships between cluster-level failover and geo-replication?"}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["The cluster-level failover is an extension of ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-replication",children:"geo-replication"})," to improve stability and robustness. The cluster-level failover depends on geo-replication, and they have some ",(0,i.jsx)(s.strong,{children:"differences"})," as below."]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Influence"}),(0,i.jsx)(s.th,{children:"Cluster-level failover"}),(0,i.jsx)(s.th,{children:"Geo-replication"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Do administrators have heavy workloads?"}),(0,i.jsxs)(s.td,{children:["No or maybe.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"- For the ",(0,i.jsx)(s.strong,{children:"automatic"})," cluster-level failover, the cluster switchover is triggered automatically based on the policies set by ",(0,i.jsx)(s.strong,{children:"users"}),".",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"- For the ",(0,i.jsx)(s.strong,{children:"controlled"})," cluster-level failover, the switchover is triggered manually by ",(0,i.jsx)(s.strong,{children:"administrators"}),"."]}),(0,i.jsxs)(s.td,{children:["Yes.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"If a cluster fails, immediate administration intervention is required."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Result in data loss?"}),(0,i.jsxs)(s.td,{children:["No.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"For both ",(0,i.jsx)(s.strong,{children:"automatic"})," and ",(0,i.jsx)(s.strong,{children:"controlled"})," cluster-level failover, if the failed primary cluster doesn't replicate messages immediately to the backup cluster, the Pulsar client can't consume the non-replicated messages. After the primary cluster is restored and the Pulsar client switches back, the non-replicated data can still be consumed by the Pulsar client. Consequently, the data is not lost.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"- For the ",(0,i.jsx)(s.strong,{children:"automatic"})," cluster-level failover, services can be switched and recovered automatically with no data loss.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"- For the ",(0,i.jsx)(s.strong,{children:"controlled"})," cluster-level failover, services can be switched and recovered manually and data loss may happen."]}),(0,i.jsxs)(s.td,{children:["Yes.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Pulsar clients and DNS systems have caches. When administrators switch the DNS from a primary cluster to a backup cluster, it takes some time for cache trigger timeout, which delays client recovery time and fails to produce or consume messages."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Result in Pulsar client failure?"}),(0,i.jsxs)(s.td,{children:["No or maybe.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"- For ",(0,i.jsx)(s.strong,{children:"automatic"})," cluster-level failover, services can be switched and recovered automatically and the Pulsar client does not fail. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"- For ",(0,i.jsx)(s.strong,{children:"controlled"})," cluster-level failover, services can be switched and recovered manually, but the Pulsar client fails before administrators can take action."]}),(0,i.jsx)(s.td,{children:"Same as above."})]})]})]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h4,{id:"how-to-use-cluster-level-failover",children:"How to use cluster-level failover"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"This section guides you through every step on how to configure cluster-level failover."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Tip"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"You should configure cluster-level failover only when the cluster contains sufficient resources to handle all possible consequences. Workload intensity on the backup cluster may increase significantly."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Connect clusters to an uninterruptible power supply (UPS) unit to reduce the risk of unexpected power loss."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Requirements"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Pulsar client 2.10 or later versions."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"For backup clusters:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The number of BookKeeper nodes should be equal to or greater than the ensemble quorum."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The number of ZooKeeper nodes should be equal to or greater than 3."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Turn on geo-replication"})," between the primary cluster and any dependent cluster (primary to backup or backup to backup) to prevent data loss."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Set ",(0,i.jsx)(s.code,{children:"replicateSubscriptionState"})," to ",(0,i.jsx)(s.code,{children:"true"})," when creating consumers."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(l.A,{defaultValue:"Automatic cluster-level failover",values:[{label:"Automatic cluster-level failover",value:"Automatic cluster-level failover"},{label:"Controlled cluster-level failover",value:"Controlled cluster-level failover"}],children:[(0,i.jsxs)(c.A,{value:"Automatic cluster-level failover",children:[(0,i.jsx)(s.p,{children:"This is an example of how to construct a Java Pulsar client to use automatic cluster-level failover. The switchover is triggered automatically."}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n\xa0\xa0private PulsarClient getAutoFailoverClient() throws PulsarClientException {\n\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0ServiceUrlProvider failover = AutoClusterFailover.builder()\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0.primary("pulsar://localhost:6650")\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0.secondary(Collections.singletonList("pulsar://other1:6650","pulsar://other2:6650"))\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0.failoverDelay(30, TimeUnit.SECONDS)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0.switchBackDelay(60, TimeUnit.SECONDS)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0.checkInterval(1000, TimeUnit.MILLISECONDS)\n\t\xa0 \xa0 \t\xa0 \xa0 .secondaryTlsTrustCertsFilePath("/path/to/ca.cert.pem")\n\xa0\xa0\xa0\xa0.secondaryAuthentication("org.apache.pulsar.client.impl.auth.AuthenticationTls",\n"tlsCertFile:/path/to/my-role.cert.pem,tlsKeyFile:/path/to/my-role.key-pk8.pem")\n\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0.build();\n\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0PulsarClient pulsarClient = PulsarClient.builder()\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0.build();\n\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0failover.initialize(pulsarClient);\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0return pulsarClient;\n\xa0\xa0\xa0\xa0}\n\n'})}),(0,i.jsx)(s.p,{children:"Configure the following parameters:"}),(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Parameter"}),(0,i.jsx)(s.th,{children:"Default value"}),(0,i.jsx)(s.th,{children:"Required?"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"primary"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"Service URL of the primary cluster."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"secondary"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsxs)(s.td,{children:["Service URL(s) of one or several backup clusters.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"You can specify several backup clusters using a comma-separated list.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," Note that:",(0,i.jsx)("br",{}),"- The backup cluster is chosen in the sequence shown in the list. ",(0,i.jsx)("br",{}),"- If all backup clusters are available, the Pulsar client chooses the first backup cluster."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"failoverDelay"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsxs)(s.td,{children:["The delay before the Pulsar client switches from the primary cluster to the backup cluster.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Automatic failover is controlled by a probe task: ",(0,i.jsx)("br",{}),"1) The probe task first checks the health status of the primary cluster. ",(0,i.jsx)("br",{})," 2) If the probe task finds the continuous failure time of the primary cluster exceeds ",(0,i.jsx)(s.code,{children:"failoverDelayMs"}),", it switches the Pulsar client to the backup cluster."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"switchBackDelay"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsxs)(s.td,{children:["The delay before the Pulsar client switches from the backup cluster to the primary cluster.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Automatic failover switchover is controlled by a probe task: ",(0,i.jsx)("br",{})," 1) After the Pulsar client switches from the primary cluster to the backup cluster, the probe task continues to check the status of the primary cluster. ",(0,i.jsx)("br",{})," 2) If the primary cluster functions well and continuously remains active longer than ",(0,i.jsx)(s.code,{children:"switchBackDelay"}),", the Pulsar client switches back to the primary cluster."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"checkInterval"})}),(0,i.jsx)(s.td,{children:"30s"}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"Frequency of performing a probe task (in seconds)."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"secondaryTlsTrustCertsFilePath"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"Path to the trusted TLS certificate file of the backup cluster."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"secondaryAuthentication"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"Authentication of the backup cluster."})]})]})]})]}),(0,i.jsxs)(c.A,{value:"Controlled cluster-level failover",children:[(0,i.jsx)(s.p,{children:"This is an example of how to construct a Java Pulsar client to use controlled cluster-level failover. The switchover is triggered by administrators manually."}),(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note"}),": you can have one or several backup clusters but can only specify one."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n public PulsarClient getControlledFailoverClient() throws IOException {\nMap<String, String> header = new HashMap();\n  header.put("service_user_id", "my-user");\n  header.put("service_password", "tiger");\n  header.put("clusterA", "tokenA");\n  header.put("clusterB", "tokenB");\n\n  ServiceUrlProvider provider =\n      ControlledClusterFailover.builder()\n        .defaultServiceUrl("pulsar://localhost:6650")\n        .checkInterval(1, TimeUnit.MINUTES)\n        .urlProvider("http://localhost:8080/test")\n        .urlProviderHeader(header)\n        .build();\n\n  PulsarClient pulsarClient =\n     PulsarClient.builder()\n      .build();\n\n  provider.initialize(pulsarClient);\n  return pulsarClient;\n}\n\n'})}),(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Parameter"}),(0,i.jsx)(s.th,{children:"Default value"}),(0,i.jsx)(s.th,{children:"Required?"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"defaultServiceUrl"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"Pulsar service URL."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"checkInterval"})}),(0,i.jsx)(s.td,{children:"30s"}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"Frequency of performing a probe task (in seconds)."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"urlProvider"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"Yes"}),(0,i.jsx)(s.td,{children:"URL provider service."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"urlProviderHeader"})}),(0,i.jsx)(s.td,{children:"N/A"}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsxs)(s.td,{children:[(0,i.jsx)(s.code,{children:"urlProviderHeader"})," is a map containing tokens and credentials. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"If you enable authentication or authorization between Pulsar clients and primary and backup clusters, you need to provide ",(0,i.jsx)(s.code,{children:"urlProviderHeader"}),"."]})]})]})]}),(0,i.jsxs)(s.p,{children:["Here is an example of how ",(0,i.jsx)(s.code,{children:"urlProviderHeader"})," works."]}),(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"How urlProviderHeader works",src:n(5153).A+"",width:"1350",height:"680"})}),(0,i.jsx)(s.p,{children:"Assume that you want to connect Pulsar client 1 to cluster A."}),(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Pulsar client 1 sends the token ",(0,i.jsx)(s.em,{children:"t1"})," to the URL provider service."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The URL provider service returns the credential ",(0,i.jsx)(s.em,{children:"c1"})," and the cluster A URL to the Pulsar client."]}),"\n",(0,i.jsx)(s.p,{children:"The URL provider service manages all tokens and credentials. It returns different credentials based on different tokens and different target cluster URLs to different Pulsar clients."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note"}),": ",(0,i.jsx)(s.strong,{children:"the credential must be in a JSON file and contain parameters as shown"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n{\n"serviceUrl": "pulsar+ssl://target:6651",\n"tlsTrustCertsFilePath": "/security/ca.cert.pem",\n"authPluginClassName":"org.apache.pulsar.client.impl.auth.AuthenticationTls",\n"authParamsString": " \\"tlsCertFile\\": \\"/security/client.cert.pem\\"\n    \\"tlsKeyFile\\": \\"/security/client-pk8.pem\\" "\n}\n\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Pulsar client 1 connects to cluster A using credential ",(0,i.jsx)(s.em,{children:"c1"}),"."]}),"\n"]}),"\n"]})]})]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h4,{id:"how-does-cluster-level-failover-work",children:"How does cluster-level failover work?"}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["This chapter explains the working process of cluster-level failover. For more implementation details, see ",(0,i.jsx)(s.a,{href:"https://github.com/apache/pulsar/issues/13315",children:"PIP-121"}),"."]}),"\n",(0,i.jsxs)(l.A,{defaultValue:"Automatic cluster-level failover",values:[{label:"Automatic cluster-level failover",value:"Automatic cluster-level failover"},{label:"Controlled cluster-level failover",value:"Controlled cluster-level failover"}],children:[(0,i.jsxs)(c.A,{value:"Automatic cluster-level failover",children:[(0,i.jsx)(s.p,{children:"In an automatic failover cluster, the primary cluster and backup cluster are aware of each other's availability. The automatic failover cluster performs the following actions without administrator intervention:"}),(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The Pulsar client runs a probe task at intervals defined in ",(0,i.jsx)(s.code,{children:"checkInterval"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["If the probe task finds the failure time of the primary cluster exceeds the time set in the ",(0,i.jsx)(s.code,{children:"failoverDelay"})," parameter, it searches backup clusters for an available healthy cluster."]}),"\n",(0,i.jsxs)(s.p,{children:["2a) If there are healthy backup clusters, the Pulsar client switches to a backup cluster in the order defined in ",(0,i.jsx)(s.code,{children:"secondary"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"2b) If there is no healthy backup cluster, the Pulsar client does not perform the switchover, and the probe task continues to look for an available backup cluster."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"The probe task checks whether the primary cluster functions well or not."}),"\n",(0,i.jsxs)(s.p,{children:["3a) If the primary cluster comes back and the continuous healthy time exceeds the time set in ",(0,i.jsx)(s.code,{children:"switchBackDelay"}),", the Pulsar client switches back to the primary cluster."]}),"\n",(0,i.jsx)(s.p,{children:"3b) If the primary cluster does not come back, the Pulsar client does not perform the switchover."}),"\n"]}),"\n"]}),(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Workflow of automatic failover cluster",src:n(6670).A+"",width:"1150",height:"1746"})})]}),(0,i.jsxs)(c.A,{value:"Controlled cluster-level failover",children:[(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The Pulsar client runs a probe task at intervals defined in ",(0,i.jsx)(s.code,{children:"checkInterval"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["The probe task fetches the service URL configuration from the URL provider service, which is configured by ",(0,i.jsx)(s.code,{children:"urlProvider"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"2a) If the service URL configuration is changed, the probe task switches to the target cluster without checking the health status of the target cluster."}),"\n",(0,i.jsx)(s.p,{children:"2b) If the service URL configuration is not changed, the Pulsar client does not perform the switchover."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["If the Pulsar client switches to the target cluster, the probe task continues to fetch service URL configuration from the URL provider service at intervals defined in ",(0,i.jsx)(s.code,{children:"checkInterval"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"3a) If the service URL configuration is changed, the probe task switches to the target cluster without checking the health status of the target cluster."}),"\n",(0,i.jsx)(s.p,{children:"3b) If the service URL configuration is not changed, it does not perform the switchover."}),"\n"]}),"\n"]}),(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Workflow of controlled failover cluster",src:n(6167).A+"",width:"1066",height:"1292"})})]})]}),"\n",(0,i.jsx)(s.h2,{id:"producer",children:"Producer"}),"\n",(0,i.jsxs)(s.p,{children:["In Pulsar, producers write messages to topics. Once you've instantiated a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/PulsarClient",children:"PulsarClient"})," object (as in the section ",(0,i.jsx)(s.a,{href:"#client-configuration",children:"above"}),"), you can create a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/Producer",children:"Producer"})," for a specific Pulsar ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/reference-terminology#topic",children:"topic"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<byte[]> producer = client.newProducer()\n        .topic("my-topic")\n        .create();\n\n// You can then send messages to the broker and topic you specified:\nproducer.send("My message".getBytes());\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["By default, producers produce messages that consist of byte arrays. You can produce different types by specifying a message ",(0,i.jsx)(s.a,{href:"#schema",children:"schema"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<String> stringProducer = client.newProducer(Schema.STRING)\n        .topic("my-topic")\n        .create();\nstringProducer.send("My message");\n\n'})}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.p,{children:"Make sure that you close your producers, consumers, and clients when you do not need them."}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\nproducer.close();\nconsumer.close();\nclient.close();\n\n\n"})}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.p,{children:"Close operations can also be asynchronous:"}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nproducer.closeAsync()\n   .thenRun(() -> System.out.println("Producer closed"))\n   .exceptionally((ex) -> {\n       System.err.println("Failed to close producer: " + ex);\n       return null;\n   });\n\n\n'})}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"configure-producer",children:"Configure producer"}),"\n",(0,i.jsxs)(s.p,{children:["If you instantiate a ",(0,i.jsx)(s.code,{children:"Producer"})," object by specifying only a topic name as the example above, the default configuration of producer is used."]}),"\n",(0,i.jsxs)(s.p,{children:["If you create a producer, you can use the ",(0,i.jsx)(s.code,{children:"loadConf"})," configuration. The following parameters are available in ",(0,i.jsx)(s.code,{children:"loadConf"}),"."]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:(0,i.jsx)("div",{children:"Description"})}),(0,i.jsx)(s.th,{children:"Default"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"topicName"})}),(0,i.jsx)(s.td,{children:"string"}),(0,i.jsx)(s.td,{children:"Topic name"}),(0,i.jsx)(s.td,{children:"null"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"producerName"})}),(0,i.jsx)(s.td,{children:"string"}),(0,i.jsx)(s.td,{children:"Producer name"}),(0,i.jsx)(s.td,{children:"null"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"sendTimeoutMs"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsxs)(s.td,{children:["Message send timeout in ms.",(0,i.jsx)("br",{}),"If a message is not acknowledged by a server before the ",(0,i.jsx)(s.code,{children:"sendTimeout"})," expires, an error occurs."]}),(0,i.jsx)(s.td,{children:"30000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"blockIfQueueFull"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsxs)(s.td,{children:["If it is set to ",(0,i.jsx)(s.code,{children:"true"}),", when the outgoing message queue is full, the ",(0,i.jsx)(s.code,{children:"Send"})," and ",(0,i.jsx)(s.code,{children:"SendAsync"})," methods of producer block, rather than failing and throwing errors. ",(0,i.jsx)("br",{}),"If it is set to ",(0,i.jsx)(s.code,{children:"false"}),", when the outgoing message queue is full, the ",(0,i.jsx)(s.code,{children:"Send"})," and ",(0,i.jsx)(s.code,{children:"SendAsync"})," methods of producer fail and ",(0,i.jsx)(s.code,{children:"ProducerQueueIsFullError"})," exceptions occur.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"The ",(0,i.jsx)(s.code,{children:"MaxPendingMessages"})," parameter determines the size of the outgoing message queue."]}),(0,i.jsx)(s.td,{children:"false"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxPendingMessages"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:["The maximum size of a queue holding pending messages.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"For example, a message waiting to receive an acknowledgment from a ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/reference-terminology#broker",children:"broker"}),". ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"By default, when the queue is full, all calls to the ",(0,i.jsx)(s.code,{children:"Send"})," and ",(0,i.jsx)(s.code,{children:"SendAsync"})," methods fail ",(0,i.jsx)(s.strong,{children:"unless"})," you set ",(0,i.jsx)(s.code,{children:"BlockIfQueueFull"})," to ",(0,i.jsx)(s.code,{children:"true"}),"."]}),(0,i.jsx)(s.td,{children:"1000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxPendingMessagesAcrossPartitions"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:["The maximum number of pending messages across partitions. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Use the setting to lower the max pending messages for each partition (",(0,i.jsx)(s.code,{children:"#setMaxPendingMessages(int)"}),") if the total number exceeds the configured value."]}),(0,i.jsx)(s.td,{children:"50000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"messageRoutingMode"})}),(0,i.jsx)(s.td,{children:"MessageRoutingMode"}),(0,i.jsxs)(s.td,{children:["Message routing logic for producers on ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-architecture-overview#partitioned-topics",children:"partitioned topics"}),".",(0,i.jsx)("br",{})," Apply the logic only when setting no key on messages. ",(0,i.jsx)("br",{}),"Available options are as follows: ",(0,i.jsx)("br",{}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.code,{children:"pulsar.RoundRobinDistribution"}),": round robin"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.code,{children:"pulsar.UseSinglePartition"}),": publish all messages to a single partition"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.code,{children:"pulsar.CustomPartition"}),": a custom partitioning scheme"]})]}),(0,i.jsx)(s.td,{children:(0,i.jsx)("li",{children:(0,i.jsx)(s.code,{children:"pulsar.RoundRobinDistribution"})})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"hashingScheme"})}),(0,i.jsx)(s.td,{children:"HashingScheme"}),(0,i.jsxs)(s.td,{children:["Hashing function determining the partition where you publish a particular message (",(0,i.jsx)(s.strong,{children:"partitioned topics only"}),").",(0,i.jsx)("br",{}),"Available options are as follows:",(0,i.jsx)("br",{}),(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(s.code,{children:"pulsar.JavastringHash"}),": the equivalent of ",(0,i.jsx)(s.code,{children:"string.hashCode()"})," in Java"]}),(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(s.code,{children:"pulsar.Murmur3_32Hash"}),": applies the ",(0,i.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/MurmurHash",children:"Murmur3"})," hashing function"]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.code,{children:"pulsar.BoostHash"}),": applies the hashing function from C++'s ",(0,i.jsx)(s.a,{href:"https://www.boost.org/doc/libs/1_62_0/doc/html/hash.html",children:"Boost"})," library"]})]}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"HashingScheme.JavastringHash"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"cryptoFailureAction"})}),(0,i.jsx)(s.td,{children:"ProducerCryptoFailureAction"}),(0,i.jsxs)(s.td,{children:["Producer should take action when encryption fails.",(0,i.jsx)("br",{}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.strong,{children:"FAIL"}),": if encryption fails, unencrypted messages fail to send."]}),(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(s.strong,{children:"SEND"}),": if encryption fails, unencrypted messages are sent."]})]}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"ProducerCryptoFailureAction.FAIL"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"batchingMaxPublishDelayMicros"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsx)(s.td,{children:"Batching time period of sending messages."}),(0,i.jsx)(s.td,{children:"TimeUnit.MILLISECONDS.toMicros(1)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"batchingMaxMessages"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"The maximum number of messages permitted in a batch."}),(0,i.jsx)(s.td,{children:"1000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"batchingEnabled"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsx)(s.td,{children:"Enable batching of messages."}),(0,i.jsx)(s.td,{children:"true"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"chunkingEnabled"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsx)(s.td,{children:"Enable chunking of messages."}),(0,i.jsx)(s.td,{children:"false"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"compressionType"})}),(0,i.jsx)(s.td,{children:"CompressionType"}),(0,i.jsxs)(s.td,{children:["Message data compression type used by a producer. ",(0,i.jsx)("br",{}),"Available options:",(0,i.jsx)("li",{children:(0,i.jsx)(s.a,{href:"https://github.com/lz4/lz4",children:(0,i.jsx)(s.code,{children:"LZ4"})})}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.a,{href:"https://zlib.net/",children:(0,i.jsx)(s.code,{children:"ZLIB"})}),(0,i.jsx)("br",{})]}),(0,i.jsx)("li",{children:(0,i.jsx)(s.a,{href:"https://facebook.github.io/zstd/",children:(0,i.jsx)(s.code,{children:"ZSTD"})})}),(0,i.jsx)("li",{children:(0,i.jsx)(s.a,{href:"https://google.github.io/snappy/",children:(0,i.jsx)(s.code,{children:"SNAPPY"})})})]}),(0,i.jsx)(s.td,{children:"No compression"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"initialSubscriptionName"})}),(0,i.jsx)(s.td,{children:"string"}),(0,i.jsx)(s.td,{children:"Use this configuration to automatically create an initial subscription when creating a topic. If this field is not set, the initial subscription is not created."}),(0,i.jsx)(s.td,{children:"null"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:"You can configure parameters if you do not want to use the default configuration."}),"\n",(0,i.jsxs)(s.p,{children:["For a full list, see the Javadoc for the ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/ProducerBuilder",children:"ProducerBuilder"})," class. The following is an example."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<byte[]> producer = client.newProducer()\n    .topic("my-topic")\n    .batchingMaxPublishDelay(10, TimeUnit.MILLISECONDS)\n    .sendTimeout(10, TimeUnit.SECONDS)\n    .blockIfQueueFull(true)\n    .create();\n\n'})}),"\n",(0,i.jsx)(s.h3,{id:"message-routing",children:"Message routing"}),"\n",(0,i.jsxs)(s.p,{children:["When using partitioned topics, you can specify the routing mode whenever you publish messages using a producer. For more information on specifying a routing mode using the Java client, see the ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/cookbooks-partitioned",children:"Partitioned Topics cookbook"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"async-send",children:"Async send"}),"\n",(0,i.jsxs)(s.p,{children:["You can publish messages ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-messaging#send-modes",children:"asynchronously"})," using the Java client. With async send, the producer puts the message in a blocking queue and returns it immediately. Then the client library sends the message to the broker in the background. If the queue is full (max size configurable), the producer is blocked or fails immediately when calling the API, depending on arguments passed to the producer."]}),"\n",(0,i.jsx)(s.p,{children:"The following is an example."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nproducer.sendAsync("my-async-message".getBytes()).thenAccept(msgId -> {\n    System.out.println("Message with ID " + msgId + " successfully sent");\n});\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["As you can see from the example above, async send operations return a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/MessageId",children:"MessageId"})," wrapped in a ",(0,i.jsx)(s.a,{href:"http://www.baeldung.com/java-completablefuture",children:(0,i.jsx)(s.code,{children:"CompletableFuture"})}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"configure-messages",children:"Configure messages"}),"\n",(0,i.jsx)(s.p,{children:"In addition to a value, you can set additional items on a given message:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nproducer.newMessage()\n    .key("my-message-key")\n    .value("my-async-message".getBytes())\n    .property("my-key", "my-value")\n    .property("my-other-key", "my-other-value")\n    .send();\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["You can terminate the builder chain with ",(0,i.jsx)(s.code,{children:"sendAsync()"})," and get a future return."]}),"\n",(0,i.jsx)(s.h3,{id:"enable-chunking",children:"Enable chunking"}),"\n",(0,i.jsxs)(s.p,{children:["Message ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-messaging#chunking",children:"chunking"})," enables Pulsar to process large payload messages by splitting the message into chunks at the producer side and aggregating chunked messages on the consumer side."]}),"\n",(0,i.jsx)(s.p,{children:"The message chunking feature is OFF by default. The following is an example of how to enable message chunking when creating a producer."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\nProducer<byte[]> producer = client.newProducer()\n        .topic(topic)\n        .enableChunking(true)\n        .enableBatching(false)\n        .create();\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["By default, producer chunks the large message based on max message size (",(0,i.jsx)(s.code,{children:"maxMessageSize"}),") configured at broker (eg: 5MB). However, client can also configure max chunked size using producer configuration ",(0,i.jsx)(s.code,{children:"chunkMaxMessageSize"}),"."]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," To enable chunking, you need to disable batching (",(0,i.jsx)(s.code,{children:"enableBatching"}),"=",(0,i.jsx)(s.code,{children:"false"}),") concurrently."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"consumer",children:"Consumer"}),"\n",(0,i.jsxs)(s.p,{children:["In Pulsar, consumers subscribe to topics and handle messages that producers publish to those topics. You can instantiate a new ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/reference-terminology#consumer",children:"consumer"})," by first instantiating a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/PulsarClient",children:"PulsarClient"})," object and passing it a URL for a Pulsar broker (as ",(0,i.jsx)(s.a,{href:"#client-configuration",children:"above"}),")."]}),"\n",(0,i.jsxs)(s.p,{children:["Once you've instantiated a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/PulsarClient",children:"PulsarClient"})," object, you can create a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/Consumer",children:"Consumer"})," by specifying a ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/reference-terminology#topic",children:"topic"})," and a ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-messaging#subscription-types",children:"subscription"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .subscribe();\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"subscribe"})," method will auto-subscribe the consumer to the specified topic and subscription. One way to make the consumer listen on the topic is to set up a ",(0,i.jsx)(s.code,{children:"while"})," loop. In this example loop, the consumer listens for messages, prints the contents of any received message, and then ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/reference-terminology#acknowledgment-ack",children:"acknowledges"})," that the message has been processed. If the processing logic fails, you can use ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/reference-terminology#acknowledgment-ack",children:"negative acknowledgement"})," to redeliver the message later."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nwhile (true) {\n  // Wait for a message\n  Message msg = consumer.receive();\n\n  try {\n      // Do something with the message\n      System.out.println("Message received: " + new String(msg.getData()));\n\n      // Acknowledge the message\n      consumer.acknowledge(msg);\n  } catch (Exception e) {\n      // Message failed to process, redeliver later\n      consumer.negativeAcknowledge(msg);\n  }\n}\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["If you don't want to block your main thread but constantly listen for new messages, consider using a ",(0,i.jsx)(s.code,{children:"MessageListener"}),". The ",(0,i.jsx)(s.code,{children:"MessageListener"})," uses a thread pool inside the client. You can set the number of threads for message listeners in the ClientBuilder."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nMessageListener myMessageListener = (consumer, msg) -> {\n  try {\n      System.out.println("Message received: " + new String(msg.getData()));\n      consumer.acknowledge(msg);\n  } catch (Exception e) {\n      consumer.negativeAcknowledge(msg);\n  }\n}\n\nConsumer consumer = client.newConsumer()\n     .topic("my-topic")\n     .subscriptionName("my-subscription")\n     .messageListener(myMessageListener)\n     .subscribe();\n\n'})}),"\n",(0,i.jsx)(s.h3,{id:"configure-consumer",children:"Configure consumer"}),"\n",(0,i.jsxs)(s.p,{children:["If you instantiate a ",(0,i.jsx)(s.code,{children:"Consumer"})," object by specifying only a topic and subscription name as in the example above, the consumer uses the default configuration."]}),"\n",(0,i.jsxs)(s.p,{children:["When you create a consumer, you can use the ",(0,i.jsx)(s.code,{children:"loadConf"})," configuration. The following parameters are available in ",(0,i.jsx)(s.code,{children:"loadConf"}),"."]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:(0,i.jsx)("div",{children:"Description"})}),(0,i.jsx)(s.th,{children:"Default"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"topicNames"})}),(0,i.jsx)(s.td,{children:"Set<String>"}),(0,i.jsx)(s.td,{children:"Topic name"}),(0,i.jsx)(s.td,{children:"Sets.newTreeSet()"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"topicsPattern"})}),(0,i.jsx)(s.td,{children:"Pattern"}),(0,i.jsx)(s.td,{children:"Topic pattern"}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"subscriptionName"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Subscription name"}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"subscriptionType"})}),(0,i.jsx)(s.td,{children:"SubscriptionType"}),(0,i.jsxs)(s.td,{children:["Subscription type ",(0,i.jsx)("br",{}),"Four subscription types are available:",(0,i.jsx)("li",{children:"Exclusive"}),(0,i.jsx)("li",{children:"Failover"}),(0,i.jsx)("li",{children:"Shared"}),(0,i.jsx)("li",{children:"Key_Shared"})]}),(0,i.jsx)(s.td,{children:"SubscriptionType.Exclusive"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"receiverQueueSize"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:["Size of a consumer's receiver queue. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"For example, the number of messages accumulated by a consumer before an application calls ",(0,i.jsx)(s.code,{children:"Receive"}),". ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"A value higher than the default value increases consumer throughput, though at the expense of more memory utilization."]}),(0,i.jsx)(s.td,{children:"1000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"acknowledgementsGroupTimeMicros"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsxs)(s.td,{children:["Group a consumer acknowledgment for a specified time.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"By default, a consumer uses 100ms grouping time to send out acknowledgments to a broker.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Setting a group time of 0 sends out acknowledgments immediately. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"A longer ack group time is more efficient at the expense of a slight increase in message re-deliveries after a failure."]}),(0,i.jsx)(s.td,{children:"TimeUnit.MILLISECONDS.toMicros(100)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"negativeAckRedeliveryDelayMicros"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsxs)(s.td,{children:["Delay to wait before redelivering messages that failed to be processed.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," When an application uses ",(0,i.jsx)(s.code,{children:"Consumer#negativeAcknowledge(Message)"}),", failed messages are redelivered after a fixed timeout."]}),(0,i.jsx)(s.td,{children:"TimeUnit.MINUTES.toMicros(1)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxTotalReceiverQueueSizeAcrossPartitions"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:["The max total receiver queue size across partitions.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"This setting reduces the receiver queue size for individual partitions if the total receiver queue size exceeds this value."]}),(0,i.jsx)(s.td,{children:"50000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"consumerName"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Consumer name"}),(0,i.jsx)(s.td,{children:"null"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"ackTimeoutMillis"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsx)(s.td,{children:"Timeout of unacked messages"}),(0,i.jsx)(s.td,{children:"0"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"tickDurationMillis"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsxs)(s.td,{children:["Granularity of the ack-timeout redelivery.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Using an higher ",(0,i.jsx)(s.code,{children:"tickDurationMillis"})," reduces the memory overhead to track messages when setting ack-timeout to a bigger value (for example, 1 hour)."]}),(0,i.jsx)(s.td,{children:"1000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"priorityLevel"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:["Priority level for a consumer to which a broker gives more priority while dispatching messages in Shared subscription type. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"The broker follows descending priorities. For example, 0=max-priority, 1, 2,...",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"In Shared subscription type, the broker ",(0,i.jsx)(s.strong,{children:"first dispatches messages to the max priority level consumers if they have permits"}),". Otherwise, the broker considers next priority level consumers.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," ",(0,i.jsx)(s.strong,{children:"Example 1"}),(0,i.jsx)("br",{}),"If a subscription has consumerA with ",(0,i.jsx)(s.code,{children:"priorityLevel"})," 0 and consumerB with ",(0,i.jsx)(s.code,{children:"priorityLevel"})," 1, then the broker ",(0,i.jsx)(s.strong,{children:"only dispatches messages to consumerA until it runs out permits"})," and then starts dispatching messages to consumerB.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(s.strong,{children:"Example 2"}),(0,i.jsx)("br",{}),"Consumer Priority, Level, Permits",(0,i.jsx)("br",{}),"C1, 0, 2",(0,i.jsx)("br",{}),"C2, 0, 1",(0,i.jsx)("br",{}),"C3, 0, 1",(0,i.jsx)("br",{}),"C4, 1, 2",(0,i.jsx)("br",{}),"C5, 1, 1",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Order in which a broker dispatches messages to consumers is: C1, C2, C3, C1, C4, C5, C4."]}),(0,i.jsx)(s.td,{children:"0"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"cryptoFailureAction"})}),(0,i.jsx)(s.td,{children:"ConsumerCryptoFailureAction"}),(0,i.jsxs)(s.td,{children:["Consumer should take action when it receives a message that can not be decrypted.",(0,i.jsx)("br",{}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.strong,{children:"FAIL"}),": this is the default option to fail messages until crypto succeeds."]}),(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(s.strong,{children:"DISCARD"}),":silently"," acknowledge and not deliver message to an application."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.strong,{children:"CONSUME"}),": deliver encrypted messages to applications. It is the application's responsibility to decrypt the message."]}),(0,i.jsx)("br",{}),"The decompression of message fails. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"If messages contain batch messages, a client is not be able to retrieve individual messages in batch.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Delivered encrypted message contains ",(0,i.jsx)(s.code,{children:"EncryptionContext"})," which contains encryption and compression information in it using which application can decrypt consumed message payload."]}),(0,i.jsx)(s.td,{children:(0,i.jsx)("li",{children:"ConsumerCryptoFailureAction.FAIL"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"properties"})}),(0,i.jsx)(s.td,{children:"SortedMap<String, String>"}),(0,i.jsxs)(s.td,{children:["A name or value property of this consumer.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(s.code,{children:"properties"})," is application defined metadata attached to a consumer. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"When getting a topic stats, associate this metadata with the consumer stats for easier identification."]}),(0,i.jsx)(s.td,{children:"new TreeMap()"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"readCompacted"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsxs)(s.td,{children:["If enabling ",(0,i.jsx)(s.code,{children:"readCompacted"}),", a consumer reads messages from a compacted topic rather than reading a full message backlog of a topic.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," A consumer only sees the latest value for each key in the compacted topic, up until reaching the point in the topic message when compacting backlog. Beyond that point, send messages as normal.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Only enabling ",(0,i.jsx)(s.code,{children:"readCompacted"})," on subscriptions to persistent topics, which have a single active consumer (like failure or exclusive subscriptions). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Attempting to enable it on subscriptions to non-persistent topics or on shared subscriptions leads to a subscription call throwing a ",(0,i.jsx)(s.code,{children:"PulsarClientException"}),"."]}),(0,i.jsx)(s.td,{children:"false"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"subscriptionInitialPosition"})}),(0,i.jsx)(s.td,{children:"SubscriptionInitialPosition"}),(0,i.jsx)(s.td,{children:"Initial position at which to set cursor when subscribing to a topic at first time."}),(0,i.jsx)(s.td,{children:"SubscriptionInitialPosition.Latest"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"patternAutoDiscoveryPeriod"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:["Topic auto discovery period when using a pattern for topic's consumer.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"The default and minimum value is 1 minute."]}),(0,i.jsx)(s.td,{children:"1"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"regexSubscriptionMode"})}),(0,i.jsx)(s.td,{children:"RegexSubscriptionMode"}),(0,i.jsxs)(s.td,{children:["When subscribing to a topic using a regular expression, you can pick a certain type of topics.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.strong,{children:"PersistentOnly"}),": only subscribe to persistent topics."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.strong,{children:"NonPersistentOnly"}),": only subscribe to non-persistent topics."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.strong,{children:"AllTopics"}),": subscribe to both persistent and non-persistent topics."]})]}),(0,i.jsx)(s.td,{children:"RegexSubscriptionMode.PersistentOnly"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"deadLetterPolicy"})}),(0,i.jsx)(s.td,{children:"DeadLetterPolicy"}),(0,i.jsxs)(s.td,{children:["Dead letter policy for consumers.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"By default, some messages are probably redelivered many times, even to the extent that it never stops.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"By using the dead letter mechanism, messages have the max redelivery count. ",(0,i.jsx)(s.strong,{children:"When exceeding the maximum number of redeliveries, messages are sent to the Dead Letter Topic and acknowledged automatically"}),".",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"You can enable the dead letter mechanism by setting ",(0,i.jsx)(s.code,{children:"deadLetterPolicy"}),".",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(s.strong,{children:"Example"}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsxs)("code",{children:["client.newConsumer()",(0,i.jsx)("br",{}),".deadLetterPolicy(DeadLetterPolicy.builder().maxRedeliverCount(10).build())",(0,i.jsx)("br",{}),".subscribe();"]}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Default dead letter topic name is ",(0,i.jsx)(s.code,{children:"\\{TopicName\\}-\\{Subscription\\}-DLQ"}),".",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"To set a custom dead letter topic name:",(0,i.jsx)("br",{}),(0,i.jsxs)("code",{children:["client.newConsumer()",(0,i.jsx)("br",{}),".deadLetterPolicy(DeadLetterPolicy.builder().maxRedeliverCount(10)",(0,i.jsx)("br",{}),'.deadLetterTopic("your-topic-name").build())',(0,i.jsx)("br",{}),".subscribe();"]}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"When specifying the dead letter policy while not specifying ",(0,i.jsx)(s.code,{children:"ackTimeoutMillis"}),", you can set the ack timeout to 30000 millisecond."]}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"autoUpdatePartitions"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsxs)(s.td,{children:["If ",(0,i.jsx)(s.code,{children:"autoUpdatePartitions"})," is enabled, a consumer subscribes to partition increasement automatically.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(s.strong,{children:"Note"}),": this is only for partitioned consumers."]}),(0,i.jsx)(s.td,{children:"true"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"replicateSubscriptionState"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsxs)(s.td,{children:["If ",(0,i.jsx)(s.code,{children:"replicateSubscriptionState"})," is\xa0enabled, a subscription state is replicated to geo-replicated clusters."]}),(0,i.jsx)(s.td,{children:"false"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"negativeAckRedeliveryBackoff"})}),(0,i.jsx)(s.td,{children:"RedeliveryBackoff"}),(0,i.jsxs)(s.td,{children:["Interface for custom message is negativeAcked policy. You can specify ",(0,i.jsx)(s.code,{children:"RedeliveryBackoff"})," for a consumer."]}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"MultiplierRedeliveryBackoff"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"ackTimeoutRedeliveryBackoff"})}),(0,i.jsx)(s.td,{children:"RedeliveryBackoff"}),(0,i.jsxs)(s.td,{children:["Interface for custom message is ackTimeout policy. You can specify ",(0,i.jsx)(s.code,{children:"RedeliveryBackoff"})," for a consumer."]}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"MultiplierRedeliveryBackoff"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"autoAckOldestChunkedMessageOnQueueFull"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsxs)(s.td,{children:["Whether to automatically acknowledge pending chunked messages when the threashold of ",(0,i.jsx)(s.code,{children:"maxPendingChunkedMessage"})," is reached. If set to ",(0,i.jsx)(s.code,{children:"false"}),", these messages will be redelivered by their broker."]}),(0,i.jsx)(s.td,{children:"true"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"maxPendingChunkedMessage"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsx)(s.td,{children:"The maximum size of a queue holding pending chunked messages. When the threshold is reached, the consumer drops pending messages to optimize memory utilization."}),(0,i.jsx)(s.td,{children:"10"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"expireTimeOfIncompleteChunkedMessageMillis"})}),(0,i.jsx)(s.td,{children:"long"}),(0,i.jsx)(s.td,{children:"The time interval to expire incomplete chunks if a consumer fails to receive all the chunks in the specified time period. The default value is 1 minute."}),(0,i.jsx)(s.td,{children:"60000"})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:["You can configure parameters if you do not want to use the default configuration. For a full list, see the Javadoc for the ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/ConsumerBuilder",children:"ConsumerBuilder"})," class."]}),"\n",(0,i.jsx)(s.p,{children:"The following is an example."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .ackTimeout(10, TimeUnit.SECONDS)\n        .subscriptionType(SubscriptionType.Exclusive)\n        .subscribe();\n\n'})}),"\n",(0,i.jsx)(s.h3,{id:"async-receive",children:"Async receive"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"receive"})," method receives messages synchronously (the consumer process is blocked until a message is available). You can also use ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-messaging#receive-modes",children:"async receive"}),", which returns a ",(0,i.jsx)(s.a,{href:"http://www.baeldung.com/java-completablefuture",children:(0,i.jsx)(s.code,{children:"CompletableFuture"})})," object immediately once a new message is available."]}),"\n",(0,i.jsx)(s.p,{children:"The following is an example."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\nCompletableFuture<Message> asyncMessage = consumer.receiveAsync();\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Async receive operations return a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/Message",children:"Message"})," wrapped inside of a ",(0,i.jsx)(s.a,{href:"http://www.baeldung.com/java-completablefuture",children:(0,i.jsx)(s.code,{children:"CompletableFuture"})}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"batch-receive",children:"Batch receive"}),"\n",(0,i.jsxs)(s.p,{children:["Use ",(0,i.jsx)(s.code,{children:"batchReceive"})," to receive multiple messages for each call."]}),"\n",(0,i.jsx)(s.p,{children:"The following is an example."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\nMessages messages = consumer.batchReceive();\nfor (Object message : messages) {\n  // do something\n}\nconsumer.acknowledge(messages)\n\n"})}),"\n",(0,i.jsxs)(s.admonition,{type:"note",children:[(0,i.jsx)(s.p,{children:"Batch receive policy limits the number and bytes of messages in a single batch. You can specify a timeout to wait for enough messages.\nThe batch receive is completed if any of the following conditions is met: enough number of messages, bytes of messages, wait timeout."}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer = client.newConsumer()\n.topic("my-topic")\n.subscriptionName("my-subscription")\n.batchReceivePolicy(BatchReceivePolicy.builder()\n.maxNumMessages(100)\n.maxNumBytes(1024 * 1024)\n.timeout(200, TimeUnit.MILLISECONDS)\n.build())\n.subscribe();\n\n'})}),(0,i.jsx)(s.p,{children:"The default batch receive policy is:"}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\nBatchReceivePolicy.builder()\n.maxNumMessage(-1)\n.maxNumBytes(10 * 1024 * 1024)\n.timeout(100, TimeUnit.MILLISECONDS)\n.build();\n\n"})})]}),"\n",(0,i.jsx)(s.h3,{id:"configure-chunking",children:"Configure chunking"}),"\n",(0,i.jsxs)(s.p,{children:["You can limit the maximum number of chunked messages a consumer maintains concurrently by configuring the ",(0,i.jsx)(s.code,{children:"maxPendingChunkedMessage"})," and ",(0,i.jsx)(s.code,{children:"autoAckOldestChunkedMessageOnQueueFull"})," parameters. When the threshold is reached, the consumer drops pending messages by silently acknowledging them or asking the broker to redeliver them later. The ",(0,i.jsx)(s.code,{children:"expireTimeOfIncompleteChunkedMessage"})," parameter decides the time interval to expire incomplete chunks if the consumer fails to receive all chunks of a message within the specified time period."]}),"\n",(0,i.jsx)(s.p,{children:"The following is an example of how to configure message chunking."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer<byte[]> consumer = client.newConsumer()\n        .topic(topic)\n        .subscriptionName("test")\n        .autoAckOldestChunkedMessageOnQueueFull(true)\n        .maxPendingChunkedMessage(100)\n        .expireTimeOfIncompleteChunkedMessage(10, TimeUnit.MINUTES)\n        .subscribe();\n\n'})}),"\n",(0,i.jsx)(s.h3,{id:"negative-acknowledgment-redelivery-backoff",children:"Negative acknowledgment redelivery backoff"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"RedeliveryBackoff"})," introduces a redelivery backoff mechanism. You can achieve redelivery with different delays by setting ",(0,i.jsx)(s.code,{children:"redeliveryCount "})," of messages."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer =  client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .negativeAckRedeliveryBackoff(MultiplierRedeliveryBackoff.builder()\n                .minDelayMs(1000)\n                .maxDelayMs(60 * 1000)\n                .build())\n        .subscribe();\n\n'})}),"\n",(0,i.jsx)(s.h3,{id:"acknowledgement-timeout-redelivery-backoff",children:"Acknowledgement timeout redelivery backoff"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"RedeliveryBackoff"})," introduces a redelivery backoff mechanism. You can redeliver messages with different delays by setting the number\nof times the messages is retried."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer =  client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .ackTimeout(10, TimeUnit.SECOND)\n        .ackTimeoutRedeliveryBackoff(MultiplierRedeliveryBackoff.builder()\n                .minDelayMs(1000)\n                .maxDelayMs(60000)\n                .multiplier(2)\n                .build())\n        .subscribe();\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"The message redelivery behavior should be as follows."}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{style:{textAlign:"left"},children:"Redelivery count"}),(0,i.jsx)(s.th,{style:{textAlign:"left"},children:"Redelivery delay"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"1"}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"10 + 1 seconds"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"2"}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"10 + 2 seconds"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"3"}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"10 + 4 seconds"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"4"}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"10 + 8 seconds"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"5"}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"10 + 16 seconds"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"6"}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"10 + 32 seconds"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"7"}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"10 + 60 seconds"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"8"}),(0,i.jsx)(s.td,{style:{textAlign:"left"},children:"10 + 60 seconds"})]})]})]}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"negativeAckRedeliveryBackoff"})," does not work with ",(0,i.jsx)(s.code,{children:"consumer.negativeAcknowledge(MessageId messageId)"})," because you are not able to get the redelivery count from the message ID."]}),"\n",(0,i.jsxs)(s.li,{children:["If a consumer crashes, it triggers the redelivery of unacked messages. In this case, ",(0,i.jsx)(s.code,{children:"RedeliveryBackoff"})," does not take effect and the messages might get redelivered earlier than the delay time from the backoff."]}),"\n"]})}),"\n",(0,i.jsx)(s.h3,{id:"multi-topic-subscriptions",children:"Multi-topic subscriptions"}),"\n",(0,i.jsxs)(s.p,{children:["In addition to subscribing a consumer to a single Pulsar topic, you can also subscribe to multiple topics simultaneously using ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-messaging#multi-topic-subscriptions",children:"multi-topic subscriptions"}),". To use multi-topic subscriptions you can supply either a regular expression (regex) or a ",(0,i.jsx)(s.code,{children:"List"})," of topics. If you select topics via regex, all topics must be within the same Pulsar namespace."]}),"\n",(0,i.jsx)(s.p,{children:"The followings are some examples."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nimport org.apache.pulsar.client.api.Consumer;\nimport org.apache.pulsar.client.api.PulsarClient;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.regex.Pattern;\n\nConsumerBuilder consumerBuilder = pulsarClient.newConsumer()\n        .subscriptionName(subscription);\n\n// Subscribe to all topics in a namespace\nPattern allTopicsInNamespace = Pattern.compile("public/default/.*");\nConsumer allTopicsConsumer = consumerBuilder\n        .topicsPattern(allTopicsInNamespace)\n        .subscribe();\n\n// Subscribe to a subsets of topics in a namespace, based on regex\nPattern someTopicsInNamespace = Pattern.compile("public/default/foo.*");\nConsumer allTopicsConsumer = consumerBuilder\n        .topicsPattern(someTopicsInNamespace)\n        .subscribe();\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["In the above example, the consumer subscribes to the ",(0,i.jsx)(s.code,{children:"persistent"})," topics that can match the topic name pattern. If you want the consumer subscribes to all ",(0,i.jsx)(s.code,{children:"persistent"})," and ",(0,i.jsx)(s.code,{children:"non-persistent"})," topics that can match the topic name pattern, set ",(0,i.jsx)(s.code,{children:"subscriptionTopicsMode"})," to ",(0,i.jsx)(s.code,{children:"RegexSubscriptionMode.AllTopics"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nPattern pattern = Pattern.compile("public/default/.*");\npulsarClient.newConsumer()\n        .subscriptionName("my-sub")\n        .topicsPattern(pattern)\n        .subscriptionTopicsMode(RegexSubscriptionMode.AllTopics)\n        .subscribe();\n\n'})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsxs)(s.p,{children:["By default, the ",(0,i.jsx)(s.code,{children:"subscriptionTopicsMode"})," of the consumer is ",(0,i.jsx)(s.code,{children:"PersistentOnly"}),". Available options of ",(0,i.jsx)(s.code,{children:"subscriptionTopicsMode"})," are ",(0,i.jsx)(s.code,{children:"PersistentOnly"}),", ",(0,i.jsx)(s.code,{children:"NonPersistentOnly"}),", and ",(0,i.jsx)(s.code,{children:"AllTopics"}),"."]})}),"\n",(0,i.jsx)(s.p,{children:"You can also subscribe to an explicit list of topics (across namespaces if you wish):"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nList<String> topics = Arrays.asList(\n        "topic-1",\n        "topic-2",\n        "topic-3"\n);\n\nConsumer multiTopicConsumer = consumerBuilder\n        .topics(topics)\n        .subscribe();\n\n// Alternatively:\nConsumer multiTopicConsumer = consumerBuilder\n        .topic(\n            "topic-1",\n            "topic-2",\n            "topic-3"\n        )\n        .subscribe();\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["You can also subscribe to multiple topics asynchronously using the ",(0,i.jsx)(s.code,{children:"subscribeAsync"})," method rather than the synchronous ",(0,i.jsx)(s.code,{children:"subscribe"})," method. The following is an example."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nPattern allTopicsInNamespace = Pattern.compile("persistent://public/default.*");\nconsumerBuilder\n        .topics(topics)\n        .subscribeAsync()\n        .thenAccept(this::receiveMessageFromConsumer);\n\nprivate void receiveMessageFromConsumer(Object consumer) {\n    ((Consumer)consumer).receiveAsync().thenAccept(message -> {\n                // Do something with the received message\n                receiveMessageFromConsumer(consumer);\n            });\n}\n\n'})}),"\n",(0,i.jsx)(s.h3,{id:"subscription-types",children:"Subscription types"}),"\n",(0,i.jsxs)(s.p,{children:["Pulsar has various ",(0,i.jsx)(s.a,{href:"concepts-messaging#subscription-types",children:"subscription types"})," to match different scenarios. A topic can have multiple subscriptions with different subscription types. However, a subscription can only have one subscription type at a time."]}),"\n",(0,i.jsx)(s.p,{children:"A subscription is identical with the subscription name; a subscription name can specify only one subscription type at a time. To change the subscription type, you should first stop all consumers of this subscription."}),"\n",(0,i.jsx)(s.p,{children:"Different subscription types have different message distribution types. This section describes the differences between subscription types and how to use them."}),"\n",(0,i.jsx)(s.p,{children:'In order to better describe their differences, assuming you have a topic named "my-topic", and the producer has published 10 messages.'}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<String> producer = client.newProducer(Schema.STRING)\n        .topic("my-topic")\n        .enableBatching(false)\n        .create();\n// 3 messages with "key-1", 3 messages with "key-2", 2 messages with "key-3" and 2 messages with "key-4"\nproducer.newMessage().key("key-1").value("message-1-1").send();\nproducer.newMessage().key("key-1").value("message-1-2").send();\nproducer.newMessage().key("key-1").value("message-1-3").send();\nproducer.newMessage().key("key-2").value("message-2-1").send();\nproducer.newMessage().key("key-2").value("message-2-2").send();\nproducer.newMessage().key("key-2").value("message-2-3").send();\nproducer.newMessage().key("key-3").value("message-3-1").send();\nproducer.newMessage().key("key-3").value("message-3-2").send();\nproducer.newMessage().key("key-4").value("message-4-1").send();\nproducer.newMessage().key("key-4").value("message-4-2").send();\n\n'})}),"\n",(0,i.jsx)(s.h4,{id:"exclusive",children:"Exclusive"}),"\n",(0,i.jsxs)(s.p,{children:["Create a new consumer and subscribe with the ",(0,i.jsx)(s.code,{children:"Exclusive"})," subscription type."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .subscriptionType(SubscriptionType.Exclusive)\n        .subscribe()\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"Only the first consumer is allowed to the subscription, other consumers receive an error. The first consumer receives all 10 messages, and the consuming order is the same as the producing order."}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"If topic is a partitioned topic, the first consumer subscribes to all partitioned topics, other consumers are not assigned with partitions and receive an error."})}),"\n",(0,i.jsx)(s.h4,{id:"failover",children:"Failover"}),"\n",(0,i.jsxs)(s.p,{children:["Create new consumers and subscribe with the",(0,i.jsx)(s.code,{children:"Failover"})," subscription type."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer1 = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .subscriptionType(SubscriptionType.Failover)\n        .subscribe()\nConsumer consumer2 = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .subscriptionType(SubscriptionType.Failover)\n        .subscribe()\n//conumser1 is the active consumer, consumer2 is the standby consumer.\n//consumer1 receives 5 messages and then crashes, consumer2 takes over as an  active consumer.\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"Multiple consumers can attach to the same subscription, yet only the first consumer is active, and others are standby. When the active consumer is disconnected, messages will be dispatched to one of standby consumers, and the standby consumer then becomes active consumer."}),"\n",(0,i.jsx)(s.p,{children:"If the first active consumer is disconnected after receiving 5 messages, the standby consumer becomes active consumer. Consumer1 will receive:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n("key-1", "message-1-1")\n("key-1", "message-1-2")\n("key-1", "message-1-3")\n("key-2", "message-2-1")\n("key-2", "message-2-2")\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"consumer2 will receive:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n("key-2", "message-2-3")\n("key-3", "message-3-1")\n("key-3", "message-3-2")\n("key-4", "message-4-1")\n("key-4", "message-4-2")\n\n'})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"If a topic is a partitioned topic, each partition has only one active consumer, messages of one partition are distributed to only one consumer, and messages of multiple partitions are distributed to multiple consumers."})}),"\n",(0,i.jsx)(s.h4,{id:"shared",children:"Shared"}),"\n",(0,i.jsxs)(s.p,{children:["Create new consumers and subscribe with ",(0,i.jsx)(s.code,{children:"Shared"})," subscription type."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer1 = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .subscriptionType(SubscriptionType.Shared)\n        .subscribe()\n\nConsumer consumer2 = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .subscriptionType(SubscriptionType.Shared)\n        .subscribe()\n//Both consumer1 and consumer2 are active consumers.\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"In Shared subscription type, multiple consumers can attach to the same subscription and messages are delivered in a round-robin distribution across consumers."}),"\n",(0,i.jsx)(s.p,{children:"If a broker dispatches only one message at a time, consumer1 receives the following information."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n("key-1", "message-1-1")\n("key-1", "message-1-3")\n("key-2", "message-2-2")\n("key-3", "message-3-1")\n("key-4", "message-4-1")\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"consumer2 receives the following information."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n("key-1", "message-1-2")\n("key-2", "message-2-1")\n("key-2", "message-2-3")\n("key-3", "message-3-2")\n("key-4", "message-4-2")\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"Shared"})," subscription is different from ",(0,i.jsx)(s.code,{children:"Exclusive"})," and ",(0,i.jsx)(s.code,{children:"Failover"})," subscription types. ",(0,i.jsx)(s.code,{children:"Shared"})," subscription has better flexibility, but cannot provide order guarantee."]}),"\n",(0,i.jsx)(s.h4,{id:"key_shared",children:"Key_shared"}),"\n",(0,i.jsxs)(s.p,{children:["This is a new subscription type since 2.4.0 release. Create new consumers and subscribe with ",(0,i.jsx)(s.code,{children:"Key_Shared"})," subscription type."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nConsumer consumer1 = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .subscriptionType(SubscriptionType.Key_Shared)\n        .subscribe()\n\nConsumer consumer2 = client.newConsumer()\n        .topic("my-topic")\n        .subscriptionName("my-subscription")\n        .subscriptionType(SubscriptionType.Key_Shared)\n        .subscribe()\n//Both consumer1 and consumer2 are active consumers.\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Just like in ",(0,i.jsx)(s.code,{children:"Shared"})," subscription, all consumers in ",(0,i.jsx)(s.code,{children:"Key_Shared"})," subscription type can attach to the same subscription. But ",(0,i.jsx)(s.code,{children:"Key_Shared"})," subscription type is different from the ",(0,i.jsx)(s.code,{children:"Shared"})," subscription. In ",(0,i.jsx)(s.code,{children:"Key_Shared"})," subscription type, messages with the same key are delivered to only one consumer in order. The possible distribution of messages between different consumers (by default we do not know in advance which keys will be assigned to a consumer, but a key will only be assigned to a consumer at the same time)."]}),"\n",(0,i.jsx)(s.p,{children:"consumer1 receives the following information."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n("key-1", "message-1-1")\n("key-1", "message-1-2")\n("key-1", "message-1-3")\n("key-3", "message-3-1")\n("key-3", "message-3-2")\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"consumer2 receives the following information."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n("key-2", "message-2-1")\n("key-2", "message-2-2")\n("key-2", "message-2-3")\n("key-4", "message-4-1")\n("key-4", "message-4-2")\n\n'})}),"\n",(0,i.jsxs)(s.p,{children:["If batching is enabled at the producer side, messages with different keys are added to a batch by default. The broker will dispatch the batch to the consumer, so the default batch mechanism may break the Key_Shared subscription guaranteed message distribution semantics. The producer needs to use the ",(0,i.jsx)(s.code,{children:"KeyBasedBatcher"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer producer = client.newProducer()\n        .topic("my-topic")\n        .batcherBuilder(BatcherBuilder.KEY_BASED)\n        .create();\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"Or the producer can disable batching."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer producer = client.newProducer()\n        .topic("my-topic")\n        .enableBatching(false)\n        .create();\n\n'})}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.p,{children:"If the message key is not specified, messages without key are dispatched to one consumer in order by default."})}),"\n",(0,i.jsx)(s.h2,{id:"reader",children:"Reader"}),"\n",(0,i.jsxs)(s.p,{children:["With the ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-clients#reader-interface",children:"reader interface"}),', Pulsar clients can "manually position" themselves within a topic and reading all messages from a specified message onward. The Pulsar API for Java enables you to create ',(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/Reader",children:"Reader"})," objects by specifying a topic and a ",(0,i.jsx)(s.a,{href:"https://pulsar.apache.org/api/client/org/apache/pulsar/client/api/MessageId",children:"MessageId"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"The following is an example."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\nbyte[] msgIdBytes = // Some message ID byte array\nMessageId id = MessageId.fromByteArray(msgIdBytes);\nReader reader = pulsarClient.newReader()\n        .topic(topic)\n        .startMessageId(id)\n        .create();\n\nwhile (true) {\n    Message message = reader.readNext();\n    // Process message\n}\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["In the example above, a ",(0,i.jsx)(s.code,{children:"Reader"})," object is instantiated for a specific topic and message (by ID); the reader iterates over each message in the topic after the message is identified by ",(0,i.jsx)(s.code,{children:"msgIdBytes"})," (how that value is obtained depends on the application)."]}),"\n",(0,i.jsxs)(s.p,{children:["The code sample above shows pointing the ",(0,i.jsx)(s.code,{children:"Reader"})," object to a specific message (by ID), but you can also use ",(0,i.jsx)(s.code,{children:"MessageId.earliest"})," to point to the earliest available message on the topic of ",(0,i.jsx)(s.code,{children:"MessageId.latest"})," to point to the most recent available message."]}),"\n",(0,i.jsx)(s.h3,{id:"configure-reader",children:"Configure reader"}),"\n",(0,i.jsxs)(s.p,{children:["When you create a reader, you can use the ",(0,i.jsx)(s.code,{children:"loadConf"})," configuration. The following parameters are available in ",(0,i.jsx)(s.code,{children:"loadConf"}),"."]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:(0,i.jsx)("div",{children:"Description"})}),(0,i.jsx)(s.th,{children:"Default"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"topicName"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Topic name."}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"receiverQueueSize"})}),(0,i.jsx)(s.td,{children:"int"}),(0,i.jsxs)(s.td,{children:["Size of a consumer's receiver queue.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"For example, the number of messages that can be accumulated by a consumer before an application calls ",(0,i.jsx)(s.code,{children:"Receive"}),".",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"A value higher than the default value increases consumer throughput, though at the expense of more memory utilization."]}),(0,i.jsx)(s.td,{children:"1000"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"readerListener"})}),(0,i.jsx)(s.td,{children:"ReaderListener<T>"}),(0,i.jsx)(s.td,{children:"A listener that is called for message received."}),(0,i.jsx)(s.td,{children:"None"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"readerName"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Reader name."}),(0,i.jsx)(s.td,{children:"null"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"subscriptionName"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Subscription name"}),(0,i.jsxs)(s.td,{children:["When there is a single topic, the default subscription name is ",(0,i.jsx)(s.code,{children:'"reader-" + 10-digit UUID'}),".",(0,i.jsx)("br",{}),"When there are multiple topics, the default subscription name is ",(0,i.jsx)(s.code,{children:'"multiTopicsReader-" + 10-digit UUID'}),"."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"subscriptionRolePrefix"})}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Prefix of subscription role."}),(0,i.jsx)(s.td,{children:"null"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"cryptoKeyReader"})}),(0,i.jsx)(s.td,{children:"CryptoKeyReader"}),(0,i.jsx)(s.td,{children:"Interface that abstracts the access to a key store."}),(0,i.jsx)(s.td,{children:"null"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"cryptoFailureAction"})}),(0,i.jsx)(s.td,{children:"ConsumerCryptoFailureAction"}),(0,i.jsxs)(s.td,{children:["Consumer should take action when it receives a message that can not be decrypted.",(0,i.jsx)("br",{}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.strong,{children:"FAIL"}),": this is the default option to fail messages until crypto succeeds."]}),(0,i.jsxs)("li",{children:[" ",(0,i.jsx)(s.strong,{children:"DISCARD"}),": silently acknowledge and not deliver message to an application."]}),(0,i.jsxs)("li",{children:[(0,i.jsx)(s.strong,{children:"CONSUME"}),": deliver encrypted messages to applications. It is the application's responsibility to decrypt the message."]}),(0,i.jsx)("br",{}),"The message decompression fails. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"If messages contain batch messages, a client is not be able to retrieve individual messages in batch.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Delivered encrypted message contains ",(0,i.jsx)(s.code,{children:"EncryptionContext"})," which contains encryption and compression information in it using which application can decrypt consumed message payload."]}),(0,i.jsx)(s.td,{children:(0,i.jsx)("li",{children:"ConsumerCryptoFailureAction.FAIL"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"readCompacted"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsxs)(s.td,{children:["If enabling ",(0,i.jsx)(s.code,{children:"readCompacted"}),", a consumer reads messages from a compacted topic rather than a full message backlog of a topic.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," A consumer only sees the latest value for each key in the compacted topic, up until reaching the point in the topic message when compacting backlog. Beyond that point, send messages as normal.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(s.code,{children:"readCompacted"})," can only be enabled on subscriptions to persistent topics, which have a single active consumer (for example, failure or exclusive subscriptions). ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"Attempting to enable it on subscriptions to non-persistent topics or on shared subscriptions leads to a subscription call throwing a ",(0,i.jsx)(s.code,{children:"PulsarClientException"}),"."]}),(0,i.jsx)(s.td,{children:"false"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"resetIncludeHead"})}),(0,i.jsx)(s.td,{children:"boolean"}),(0,i.jsxs)(s.td,{children:["If set to true, the first message to be returned is the one specified by ",(0,i.jsx)(s.code,{children:"messageId"}),".",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"If set to false, the first message to be returned is the one next to the message specified by ",(0,i.jsx)(s.code,{children:"messageId"}),"."]}),(0,i.jsx)(s.td,{children:"false"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"sticky-key-range-reader",children:"Sticky key range reader"}),"\n",(0,i.jsx)(s.p,{children:"In sticky key range reader, broker will only dispatch messages which hash of the message key contains by the specified key hash range. Multiple key hash ranges can be specified on a reader."}),"\n",(0,i.jsx)(s.p,{children:"The following is an example to create a sticky key range reader."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\npulsarClient.newReader()\n        .topic(topic)\n        .startMessageId(MessageId.earliest)\n        .keyHashRange(Range.of(0, 10000), Range.of(20001, 30000))\n        .create();\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"Total hash range size is 65536, so the max end of the range should be less than or equal to 65535."}),"\n",(0,i.jsx)(s.h3,{id:"configure-chunking-1",children:"Configure chunking"}),"\n",(0,i.jsxs)(s.p,{children:["Configuring chuncking for readers is similar to that for consumers. See ",(0,i.jsx)(s.a,{href:"#configure-chunking",children:"configure chunking for consumers"})," for more information."]}),"\n",(0,i.jsx)(s.p,{children:"The following is an example of how to configure message chunking for a reader."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\nReader<byte[]> reader = pulsarClient.newReader()\n        .topic(topicName)\n        .startMessageId(MessageId.earliest)\n        .maxPendingChunkedMessage(12)\n        .autoAckOldestChunkedMessageOnQueueFull(true)\n        .expireTimeOfIncompleteChunkedMessage(12, TimeUnit.MILLISECONDS)\n        .create();\n\n"})}),"\n",(0,i.jsx)(s.h3,{id:"create-reader-with-interceptor",children:"Create reader with interceptor"}),"\n",(0,i.jsxs)(s.p,{children:["Pulsar reader interceptor intercepts and possibly mutates messages with user-defined processing before ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/concepts-clients#reader-interface",children:"Pulsar reader"})," reads them. With reader interceptors, you can apply unified messaging processes before messages can be read, such as modifying messages, adding properties, collecting statistics and etc, without creating similar mechanisms respectively."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Reader interceptor",src:n(66403).A+"",width:"1048",height:"237"})}),"\n",(0,i.jsxs)(s.p,{children:["Pulsar reader interceptor works on top of Pulsar consumer interceptor. The plugin interface ",(0,i.jsx)(s.code,{children:"ReaderInterceptor"})," can be treated as a subset of ",(0,i.jsx)(s.code,{children:"ConsumerInterceptor"})," and it has two main events."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"beforeRead"})," is triggered before readers read messages. You can modify messages within this event."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"onPartitionsChange"})," is triggered when changes on partitions have been detected."]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["To perceive triggered events and perform customized processing, you can add ",(0,i.jsx)(s.code,{children:"ReaderInterceptor"})," when creating a ",(0,i.jsx)(s.code,{children:"Reader"})," as follows."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nPulsarClient pulsarClient = PulsarClient.builder().serviceUrl("pulsar://localhost:6650").build();\nReader<byte[]> reader = pulsarClient.newReader()\n        .topic("t1")\n        .autoUpdatePartitionsInterval(5, TimeUnit.SECONDS)\n        .intercept(new ReaderInterceptor<byte[]>() {\n            @Override\n            public void close() {\n            }\n\n            @Override\n            public Message<byte[]> beforeRead(Reader<byte[]> reader, Message<byte[]> message) {\n                // user-defined processing logic\n                return message;\n            }\n\n            @Override\n            public void onPartitionsChange(String topicName, int partitions) {\n                // user-defined processing logic\n            }\n        })\n        .startMessageId(MessageId.earliest)\n        .create();\n\n'})}),"\n",(0,i.jsx)(s.h2,{id:"schema",children:"Schema"}),"\n",(0,i.jsxs)(s.p,{children:['In Pulsar, all message data consists of byte arrays "under the hood." ',(0,i.jsx)(s.a,{href:"/docs/2.3.2/schema-get-started",children:"Message schemas"})," enable you to use other types of data when constructing and handling messages (from simple types like strings to more complex, application-specific types). If you construct, say, a ",(0,i.jsx)(s.a,{href:"#producer",children:"producer"})," without specifying a schema, then the producer can only produce messages of type ",(0,i.jsx)(s.code,{children:"byte[]"}),". The following is an example."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\nProducer<byte[]> producer = client.newProducer()\n        .topic(topic)\n        .create();\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["The producer above is equivalent to a ",(0,i.jsx)(s.code,{children:"Producer<byte[]>"})," (in fact, you should ",(0,i.jsx)(s.em,{children:"always"})," explicitly specify the type). If you'd like to use a producer for a different type of data, you'll need to specify a ",(0,i.jsx)(s.strong,{children:"schema"})," that informs Pulsar which data type will be transmitted over the ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/reference-terminology#topic",children:"topic"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"avrobasestructschema-example",children:"AvroBaseStructSchema example"}),"\n",(0,i.jsxs)(s.p,{children:["Let's say that you have a ",(0,i.jsx)(s.code,{children:"SensorReading"})," class that you'd like to transmit over a Pulsar topic:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:"\npublic class SensorReading {\n    public float temperature;\n\n    public SensorReading(float temperature) {\n        this.temperature = temperature;\n    }\n\n    // A no-arg constructor is required\n    public SensorReading() {\n    }\n\n    public float getTemperature() {\n        return temperature;\n    }\n\n    public void setTemperature(float temperature) {\n        this.temperature = temperature;\n    }\n}\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["You could then create a ",(0,i.jsx)(s.code,{children:"Producer<SensorReading>"})," (or ",(0,i.jsx)(s.code,{children:"Consumer<SensorReading>"}),") like this:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<SensorReading> producer = client.newProducer(JSONSchema.of(SensorReading.class))\n        .topic("sensor-readings")\n        .create();\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"The following schema formats are currently available for Java:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["No schema or the byte array schema (which can be applied using ",(0,i.jsx)(s.code,{children:"Schema.BYTES"}),"):"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<byte[]> bytesProducer = client.newProducer(Schema.BYTES)\n    .topic("some-raw-bytes-topic")\n    .create();\n\n'})}),"\n",(0,i.jsx)(s.p,{children:"Or, equivalently:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<byte[]> bytesProducer = client.newProducer()\n    .topic("some-raw-bytes-topic")\n    .create();\n\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"String"})," for normal UTF-8-encoded string data. Apply the schema using ",(0,i.jsx)(s.code,{children:"Schema.STRING"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<String> stringProducer = client.newProducer(Schema.STRING)\n    .topic("some-string-topic")\n    .create();\n\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Create JSON schemas for POJOs using ",(0,i.jsx)(s.code,{children:"Schema.JSON"}),". The following is an example."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<MyPojo> pojoProducer = client.newProducer(Schema.JSON(MyPojo.class))\n    .topic("some-pojo-topic")\n    .create();\n\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Generate Protobuf schemas using ",(0,i.jsx)(s.code,{children:"Schema.PROTOBUF"}),". The following example shows how to create the Protobuf schema and use it to instantiate a new producer:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<MyProtobuf> protobufProducer = client.newProducer(Schema.PROTOBUF(MyProtobuf.class))\n    .topic("some-protobuf-topic")\n    .create();\n\n'})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Define Avro schemas with ",(0,i.jsx)(s.code,{children:"Schema.AVRO"}),". The following code snippet demonstrates how to create and use Avro schema."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nProducer<MyAvro> avroProducer = client.newProducer(Schema.AVRO(MyAvro.class))\n    .topic("some-avro-topic")\n    .create();\n\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"protobufnativeschema-example",children:"ProtobufNativeSchema example"}),"\n",(0,i.jsxs)(s.p,{children:["For example of ProtobufNativeSchema, see ",(0,i.jsxs)(s.a,{href:"/docs/2.3.2/schema-understand#complex-type",children:[(0,i.jsx)(s.code,{children:"SchemaDefinition"})," in ",(0,i.jsx)(s.code,{children:"Complex type"})]}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsxs)(s.p,{children:["Pulsar currently supports multiple authentication schemes: ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/security-tls-authentication",children:"TLS"}),", ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/security-athenz",children:"Athenz"})," and ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/security-kerberos",children:"Kerberos"}),". You can use the Pulsar Java client with all of them."]}),"\n",(0,i.jsx)(s.h3,{id:"tls-authentication",children:"TLS Authentication"}),"\n",(0,i.jsxs)(s.p,{children:["To use ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/security-tls-authentication",children:"TLS"}),", ",(0,i.jsx)(s.code,{children:"enableTls"}),' method is deprecated and you need to use "pulsar+ssl://" in serviceUrl to enable, point your Pulsar client to a TLS cert path, and provide paths to cert and key files.']}),"\n",(0,i.jsx)(s.p,{children:"The following is an example."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nMap<String, String> authParams = new HashMap();\nauthParams.put("tlsCertFile", "/path/to/client-cert.pem");\nauthParams.put("tlsKeyFile", "/path/to/client-key.pem");\n\nAuthentication tlsAuth = AuthenticationFactory\n        .create(AuthenticationTls.class.getName(), authParams);\n\nPulsarClient client = PulsarClient.builder()\n        .serviceUrl("pulsar+ssl://my-broker.com:6651")\n        .tlsTrustCertsFilePath("/path/to/cacert.pem")\n        .authentication(tlsAuth)\n        .build();\n\n'})}),"\n",(0,i.jsx)(s.h3,{id:"athenz",children:"Athenz"}),"\n",(0,i.jsxs)(s.p,{children:["To use ",(0,i.jsx)(s.a,{href:"/docs/2.3.2/security-athenz",children:"Athenz"})," as an authentication provider, you need to ",(0,i.jsx)(s.a,{href:"#tls-authentication",children:"use TLS"})," and provide values for four parameters in a hash:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"tenantDomain"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"tenantService"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"providerDomain"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"privateKey"})}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["You can also set an optional ",(0,i.jsx)(s.code,{children:"keyId"}),". The following is an example."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-java",children:'\nMap<String, String> authParams = new HashMap();\nauthParams.put("tenantDomain", "shopping"); // Tenant domain name\nauthParams.put("tenantService", "some_app"); // Tenant service name\nauthParams.put("providerDomain", "pulsar"); // Provider domain name\nauthParams.put("privateKey", "file:///path/to/private.pem"); // Tenant private key path\nauthParams.put("keyId", "v1"); // Key id for the tenant private key (optional, default: "0")\n\nAuthentication athenzAuth = AuthenticationFactory\n        .create(AuthenticationAthenz.class.getName(), authParams);\n\nPulsarClient client = PulsarClient.builder()\n        .serviceUrl("pulsar+ssl://my-broker.com:6651")\n        .tlsTrustCertsFilePath("/path/to/cacert.pem")\n        .authentication(athenzAuth)\n        .build();\n\n'})}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.h4,{id:"supported-pattern-formats",children:"Supported pattern formats"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"privateKey"})," parameter supports the following three pattern formats:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"file:///path/to/file"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"file:/path/to/file"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"data:application/x-pem-file;base64,<base64-encoded value>"})}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},19365:(e,s,n)=>{n.d(s,{A:()=>l});n(96540);var r=n(34164);const i={tabItem:"tabItem_Ymn6"};var t=n(74848);function l(e){let{children:s,hidden:n,className:l}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,l),hidden:n,children:s})}},89089:(e,s,n)=>{n.d(s,{A:()=>w});var r=n(96540),i=n(34164),t=n(23104),l=n(56347),c=n(205),a=n(57485),o=n(31682),d=n(70679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:s,children:n}=e;return(0,r.useMemo)((()=>{const e=s??function(e){return h(e).map((e=>{let{props:{value:s,label:n,attributes:r,default:i}}=e;return{value:s,label:n,attributes:r,default:i}}))}(n);return function(e){const s=(0,o.XI)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,n])}function p(e){let{value:s,tabValues:n}=e;return n.some((e=>e.value===s))}function x(e){let{queryString:s=!1,groupId:n}=e;const i=(0,l.W6)(),t=function(e){let{queryString:s=!1,groupId:n}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:s,groupId:n});return[(0,a.aZ)(t),(0,r.useCallback)((e=>{if(!t)return;const s=new URLSearchParams(i.location.search);s.set(t,e),i.replace({...i.location,search:s.toString()})}),[t,i])]}function j(e){const{defaultValue:s,queryString:n=!1,groupId:i}=e,t=u(e),[l,a]=(0,r.useState)((()=>function(e){let{defaultValue:s,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!p({value:s,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:s,tabValues:t}))),[o,h]=x({queryString:n,groupId:i}),[j,m]=function(e){let{groupId:s}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(s),[i,t]=(0,d.Dv)(n);return[i,(0,r.useCallback)((e=>{n&&t.set(e)}),[n,t])]}({groupId:i}),g=(()=>{const e=o??j;return p({value:e,tabValues:t})?e:null})();(0,c.A)((()=>{g&&a(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),m(e)}),[h,m,t]),tabValues:t}}var m=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=n(74848);function b(e){let{className:s,block:n,selectedValue:r,selectValue:l,tabValues:c}=e;const a=[],{blockElementScrollPositionUntilNextRender:o}=(0,t.a_)(),d=e=>{const s=e.currentTarget,n=a.indexOf(s),i=c[n].value;i!==r&&(o(s),l(i))},h=e=>{let s=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=a.indexOf(e.currentTarget)+1;s=a[n]??a[0];break}case"ArrowLeft":{const n=a.indexOf(e.currentTarget)-1;s=a[n]??a[a.length-1];break}}s?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},s),children:c.map((e=>{let{value:s,label:n,attributes:t}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:r===s?0:-1,"aria-selected":r===s,ref:e=>a.push(e),onKeyDown:h,onClick:d,...t,className:(0,i.A)("tabs__item",g.tabItem,t?.className,{"tabs__item--active":r===s}),children:n??s},s)}))})}function v(e){let{lazy:s,children:n,selectedValue:t}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(s){const e=l.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map(((e,s)=>(0,r.cloneElement)(e,{key:s,hidden:e.props.value!==t})))})}function y(e){const s=j(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,f.jsx)(b,{...s,...e}),(0,f.jsx)(v,{...s,...e})]})}function w(e){const s=(0,m.A)();return(0,f.jsx)(y,{...e,children:h(e.children)},String(s))}},79635:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/cluster-level-failover-1-88ca78e0ce3742e8dff1fb1c65abcadc.png"},84024:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/cluster-level-failover-2-47d28c1809d4fc140d3846f09aaa6670.png"},5153:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/cluster-level-failover-3-e4c1f0e86f1652f300f2bc54d342b955.png"},6670:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/cluster-level-failover-4-c999ee966e8755f6c7ad88d0194e839f.png"},6167:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/cluster-level-failover-5-0a93e8702482ebd19c10a1fd8954997d.png"},66403:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/reader-interceptor-29f6b3d84db93608da79169bf9901555.svg"},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>c});var r=n(96540);const i={},t=r.createContext(i);function l(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);
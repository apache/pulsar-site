{
    "basePath": "/admin/v3",
    "definitions": {
        "Annotation": {
            "type": "object"
        },
        "AnnotationIntrospector": {
            "type": "object"
        },
        "ArrayBuilders": {
            "properties": {
                "booleanBuilder": {
                    "$ref": "#/definitions/BooleanBuilder"
                },
                "byteBuilder": {
                    "$ref": "#/definitions/ByteBuilder"
                },
                "doubleBuilder": {
                    "$ref": "#/definitions/DoubleBuilder"
                },
                "floatBuilder": {
                    "$ref": "#/definitions/FloatBuilder"
                },
                "intBuilder": {
                    "$ref": "#/definitions/IntBuilder"
                },
                "longBuilder": {
                    "$ref": "#/definitions/LongBuilder"
                },
                "shortBuilder": {
                    "$ref": "#/definitions/ShortBuilder"
                }
            },
            "type": "object"
        },
        "AuthenticationDataSource": {
            "properties": {
                "commandData": {
                    "type": "string"
                },
                "httpAuthType": {
                    "type": "string"
                },
                "peerAddress": {
                    "$ref": "#/definitions/SocketAddress"
                },
                "subscription": {
                    "type": "string"
                },
                "tlsCertificates": {
                    "items": {
                        "$ref": "#/definitions/Certificate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthenticationParameters": {
            "properties": {
                "clientAuthenticationDataSource": {
                    "$ref": "#/definitions/AuthenticationDataSource"
                },
                "clientRole": {
                    "type": "string"
                },
                "originalPrincipal": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Base64Variant": {
            "properties": {
                "maxLineLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "paddingByte": {
                    "format": "byte",
                    "type": "string"
                },
                "paddingChar": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BooleanBuilder": {
            "type": "object"
        },
        "ByteBuilder": {
            "type": "object"
        },
        "Certificate": {
            "properties": {
                "encoded": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "publicKey": {
                    "$ref": "#/definitions/PublicKey"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CharacterEscapes": {
            "properties": {
                "escapeCodesForAscii": {
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ClassIntrospector": {
            "type": "object"
        },
        "ClassLoader": {
            "properties": {
                "definedPackages": {
                    "items": {
                        "$ref": "#/definitions/Package"
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/ClassLoader"
                },
                "registeredAsParallelCapable": {
                    "type": "boolean"
                },
                "unnamedModule": {
                    "$ref": "#/definitions/Module"
                }
            },
            "type": "object"
        },
        "CompletableFuture": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureClusterData": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureVoid": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ContextAttributes": {
            "type": "object"
        },
        "Currency": {
            "properties": {
                "currencyCode": {
                    "type": "string"
                },
                "defaultFractionDigits": {
                    "format": "int32",
                    "type": "integer"
                },
                "displayName": {
                    "type": "string"
                },
                "numericCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "numericCodeAsString": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "DateFormat": {
            "properties": {
                "calendar": {
                    "format": "date-time",
                    "type": "string"
                },
                "lenient": {
                    "type": "boolean"
                },
                "numberFormat": {
                    "$ref": "#/definitions/NumberFormat"
                },
                "timeZone": {
                    "$ref": "#/definitions/TimeZone"
                }
            },
            "type": "object"
        },
        "DeserializationConfig": {
            "properties": {
                "annotationIntrospector": {
                    "$ref": "#/definitions/AnnotationIntrospector"
                },
                "annotationProcessingEnabled": {
                    "type": "boolean"
                },
                "attributes": {
                    "$ref": "#/definitions/ContextAttributes"
                },
                "base64Variant": {
                    "$ref": "#/definitions/Base64Variant"
                },
                "classIntrospector": {
                    "$ref": "#/definitions/ClassIntrospector"
                },
                "dateFormat": {
                    "$ref": "#/definitions/DateFormat"
                },
                "defaultPropertyInclusion": {
                    "$ref": "#/definitions/Value"
                },
                "defaultVisibilityChecker": {
                    "$ref": "#/definitions/VisibilityCheckerObject"
                },
                "deserializationFeatures": {
                    "format": "int32",
                    "type": "integer"
                },
                "fullRootName": {
                    "$ref": "#/definitions/PropertyName"
                },
                "handlerInstantiator": {
                    "$ref": "#/definitions/HandlerInstantiator"
                },
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "nodeFactory": {
                    "$ref": "#/definitions/JsonNodeFactory"
                },
                "problemHandlers": {
                    "$ref": "#/definitions/LinkedNodeDeserializationProblemHandler"
                },
                "propertyNamingStrategy": {
                    "$ref": "#/definitions/PropertyNamingStrategy"
                },
                "rootName": {
                    "type": "string"
                },
                "subtypeResolver": {
                    "$ref": "#/definitions/SubtypeResolver"
                },
                "timeZone": {
                    "$ref": "#/definitions/TimeZone"
                },
                "typeFactory": {
                    "$ref": "#/definitions/TypeFactory"
                }
            },
            "type": "object"
        },
        "DeserializationContext": {
            "properties": {
                "annotationIntrospector": {
                    "$ref": "#/definitions/AnnotationIntrospector"
                },
                "arrayBuilders": {
                    "$ref": "#/definitions/ArrayBuilders"
                },
                "base64Variant": {
                    "$ref": "#/definitions/Base64Variant"
                },
                "config": {
                    "$ref": "#/definitions/DeserializationConfig"
                },
                "contextualType": {
                    "$ref": "#/definitions/JavaType"
                },
                "deserializationFeatures": {
                    "format": "int32",
                    "type": "integer"
                },
                "factory": {
                    "$ref": "#/definitions/DeserializerFactory"
                },
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "nodeFactory": {
                    "$ref": "#/definitions/JsonNodeFactory"
                },
                "parser": {
                    "$ref": "#/definitions/JsonParser"
                },
                "timeZone": {
                    "$ref": "#/definitions/TimeZone"
                },
                "typeFactory": {
                    "$ref": "#/definitions/TypeFactory"
                }
            },
            "type": "object"
        },
        "DeserializerFactory": {
            "type": "object"
        },
        "DoubleBuilder": {
            "type": "object"
        },
        "FilterProvider": {
            "type": "object"
        },
        "FloatBuilder": {
            "type": "object"
        },
        "FormatSchema": {
            "properties": {
                "schemaType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "HandlerInstantiator": {
            "type": "object"
        },
        "InjectableValues": {
            "type": "object"
        },
        "InputDecorator": {
            "type": "object"
        },
        "IntBuilder": {
            "type": "object"
        },
        "JavaType": {
            "properties": {
                "abstract": {
                    "type": "boolean"
                },
                "arrayType": {
                    "type": "boolean"
                },
                "bindings": {
                    "$ref": "#/definitions/TypeBindings"
                },
                "collectionLikeType": {
                    "type": "boolean"
                },
                "concrete": {
                    "type": "boolean"
                },
                "containerType": {
                    "type": "boolean"
                },
                "contentType": {
                    "$ref": "#/definitions/JavaType"
                },
                "contentTypeHandler": {
                    "type": "object"
                },
                "contentValueHandler": {
                    "type": "object"
                },
                "enumType": {
                    "type": "boolean"
                },
                "erasedSignature": {
                    "type": "string"
                },
                "final": {
                    "type": "boolean"
                },
                "genericSignature": {
                    "type": "string"
                },
                "interface": {
                    "type": "boolean"
                },
                "interfaces": {
                    "items": {
                        "$ref": "#/definitions/JavaType"
                    },
                    "type": "array"
                },
                "javaLangObject": {
                    "type": "boolean"
                },
                "keyType": {
                    "$ref": "#/definitions/JavaType"
                },
                "mapLikeType": {
                    "type": "boolean"
                },
                "primitive": {
                    "type": "boolean"
                },
                "referenceType": {
                    "type": "boolean"
                },
                "referencedType": {
                    "$ref": "#/definitions/JavaType"
                },
                "superClass": {
                    "$ref": "#/definitions/JavaType"
                },
                "throwable": {
                    "type": "boolean"
                },
                "typeHandler": {
                    "type": "object"
                },
                "typeName": {
                    "type": "string"
                },
                "valueHandler": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JsonFactory": {
            "properties": {
                "characterEscapes": {
                    "$ref": "#/definitions/CharacterEscapes"
                },
                "codec": {
                    "$ref": "#/definitions/ObjectCodec"
                },
                "formatName": {
                    "type": "string"
                },
                "inputDecorator": {
                    "$ref": "#/definitions/InputDecorator"
                },
                "outputDecorator": {
                    "$ref": "#/definitions/OutputDecorator"
                },
                "rootValueSeparator": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JsonGenerator": {
            "properties": {
                "characterEscapes": {
                    "$ref": "#/definitions/CharacterEscapes"
                },
                "closed": {
                    "type": "boolean"
                },
                "codec": {
                    "$ref": "#/definitions/ObjectCodec"
                },
                "currentValue": {
                    "type": "object"
                },
                "featureMask": {
                    "format": "int32",
                    "type": "integer"
                },
                "formatFeatures": {
                    "format": "int32",
                    "type": "integer"
                },
                "highestEscapedChar": {
                    "format": "int32",
                    "type": "integer"
                },
                "outputBuffered": {
                    "format": "int32",
                    "type": "integer"
                },
                "outputContext": {
                    "$ref": "#/definitions/JsonStreamContext"
                },
                "outputTarget": {
                    "type": "object"
                },
                "prettyPrinter": {
                    "$ref": "#/definitions/PrettyPrinter"
                },
                "schema": {
                    "$ref": "#/definitions/FormatSchema"
                }
            },
            "type": "object"
        },
        "JsonLocation": {
            "properties": {
                "byteOffset": {
                    "format": "int64",
                    "type": "integer"
                },
                "charOffset": {
                    "format": "int64",
                    "type": "integer"
                },
                "columnNr": {
                    "format": "int32",
                    "type": "integer"
                },
                "lineNr": {
                    "format": "int32",
                    "type": "integer"
                },
                "sourceRef": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JsonNodeFactory": {
            "type": "object"
        },
        "JsonParser": {
            "properties": {
                "bigIntegerValue": {
                    "type": "integer"
                },
                "binaryValue": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "booleanValue": {
                    "type": "boolean"
                },
                "byteValue": {
                    "format": "byte",
                    "type": "string"
                },
                "closed": {
                    "type": "boolean"
                },
                "codec": {
                    "$ref": "#/definitions/ObjectCodec"
                },
                "currentLocation": {
                    "$ref": "#/definitions/JsonLocation"
                },
                "currentName": {
                    "type": "string"
                },
                "currentToken": {
                    "enum": [
                        "NOT_AVAILABLE",
                        "START_OBJECT",
                        "END_OBJECT",
                        "START_ARRAY",
                        "END_ARRAY",
                        "FIELD_NAME",
                        "VALUE_EMBEDDED_OBJECT",
                        "VALUE_STRING",
                        "VALUE_NUMBER_INT",
                        "VALUE_NUMBER_FLOAT",
                        "VALUE_TRUE",
                        "VALUE_FALSE",
                        "VALUE_NULL"
                    ],
                    "type": "string"
                },
                "currentTokenId": {
                    "format": "int32",
                    "type": "integer"
                },
                "currentValue": {
                    "type": "object"
                },
                "decimalValue": {
                    "type": "number"
                },
                "doubleValue": {
                    "format": "double",
                    "type": "number"
                },
                "embeddedObject": {
                    "type": "object"
                },
                "expectedStartArrayToken": {
                    "type": "boolean"
                },
                "expectedStartObjectToken": {
                    "type": "boolean"
                },
                "featureMask": {
                    "format": "int32",
                    "type": "integer"
                },
                "floatValue": {
                    "format": "float",
                    "type": "number"
                },
                "formatFeatures": {
                    "format": "int32",
                    "type": "integer"
                },
                "inputSource": {
                    "type": "object"
                },
                "intValue": {
                    "format": "int32",
                    "type": "integer"
                },
                "lastClearedToken": {
                    "enum": [
                        "NOT_AVAILABLE",
                        "START_OBJECT",
                        "END_OBJECT",
                        "START_ARRAY",
                        "END_ARRAY",
                        "FIELD_NAME",
                        "VALUE_EMBEDDED_OBJECT",
                        "VALUE_STRING",
                        "VALUE_NUMBER_INT",
                        "VALUE_NUMBER_FLOAT",
                        "VALUE_TRUE",
                        "VALUE_FALSE",
                        "VALUE_NULL"
                    ],
                    "type": "string"
                },
                "longValue": {
                    "format": "int64",
                    "type": "integer"
                },
                "numberType": {
                    "enum": [
                        "INT",
                        "LONG",
                        "BIG_INTEGER",
                        "FLOAT",
                        "DOUBLE",
                        "BIG_DECIMAL"
                    ],
                    "type": "string"
                },
                "numberValue": {
                    "$ref": "#/definitions/Number"
                },
                "objectId": {
                    "type": "object"
                },
                "parsingContext": {
                    "$ref": "#/definitions/JsonStreamContext"
                },
                "schema": {
                    "$ref": "#/definitions/FormatSchema"
                },
                "shortValue": {
                    "format": "int32",
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "textCharacters": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "textLength": {
                    "format": "int32",
                    "type": "integer"
                },
                "textOffset": {
                    "format": "int32",
                    "type": "integer"
                },
                "tokenLocation": {
                    "$ref": "#/definitions/JsonLocation"
                },
                "typeId": {
                    "type": "object"
                },
                "valueAsBoolean": {
                    "type": "boolean"
                },
                "valueAsDouble": {
                    "format": "double",
                    "type": "number"
                },
                "valueAsInt": {
                    "format": "int32",
                    "type": "integer"
                },
                "valueAsLong": {
                    "format": "int64",
                    "type": "integer"
                },
                "valueAsString": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "JsonSerializer": {
            "properties": {
                "unwrappingSerializer": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "JsonSerializerObject": {
            "properties": {
                "delegatee": {
                    "$ref": "#/definitions/JsonSerializerObject"
                },
                "unwrappingSerializer": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "JsonStreamContext": {
            "properties": {
                "currentIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "currentName": {
                    "type": "string"
                },
                "currentValue": {
                    "type": "object"
                },
                "entryCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "parent": {
                    "$ref": "#/definitions/JsonStreamContext"
                },
                "typeDesc": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LinkedNode": {
            "type": "object"
        },
        "LinkedNodeDeserializationProblemHandler": {
            "type": "object"
        },
        "Locale": {
            "properties": {
                "country": {
                    "type": "string"
                },
                "displayCountry": {
                    "type": "string"
                },
                "displayLanguage": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "displayScript": {
                    "type": "string"
                },
                "displayVariant": {
                    "type": "string"
                },
                "extensionKeys": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "iso3Country": {
                    "type": "string"
                },
                "iso3Language": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                },
                "unicodeLocaleAttributes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "unicodeLocaleKeys": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "variant": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LongBuilder": {
            "type": "object"
        },
        "Module": {
            "properties": {
                "annotations": {
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    },
                    "type": "array"
                },
                "classLoader": {
                    "$ref": "#/definitions/ClassLoader"
                },
                "declaredAnnotations": {
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    },
                    "type": "array"
                },
                "descriptor": {
                    "$ref": "#/definitions/ModuleDescriptor"
                },
                "layer": {
                    "$ref": "#/definitions/ModuleLayer"
                },
                "name": {
                    "type": "string"
                },
                "named": {
                    "type": "boolean"
                },
                "packages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "type": "object"
        },
        "ModuleDescriptor": {
            "properties": {
                "automatic": {
                    "type": "boolean"
                },
                "open": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ModuleLayer": {
            "type": "object"
        },
        "Number": {
            "type": "object"
        },
        "NumberFormat": {
            "properties": {
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "groupingUsed": {
                    "type": "boolean"
                },
                "maximumFractionDigits": {
                    "format": "int32",
                    "type": "integer"
                },
                "maximumIntegerDigits": {
                    "format": "int32",
                    "type": "integer"
                },
                "minimumFractionDigits": {
                    "format": "int32",
                    "type": "integer"
                },
                "minimumIntegerDigits": {
                    "format": "int32",
                    "type": "integer"
                },
                "parseIntegerOnly": {
                    "type": "boolean"
                },
                "roundingMode": {
                    "enum": [
                        "UP",
                        "DOWN",
                        "CEILING",
                        "FLOOR",
                        "HALF_UP",
                        "HALF_DOWN",
                        "HALF_EVEN",
                        "UNNECESSARY"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ObjectCodec": {
            "properties": {
                "factory": {
                    "$ref": "#/definitions/JsonFactory"
                },
                "jsonFactory": {
                    "$ref": "#/definitions/JsonFactory"
                }
            },
            "type": "object"
        },
        "ObjectMapper": {
            "properties": {
                "dateFormat": {
                    "$ref": "#/definitions/DateFormat"
                },
                "deserializationConfig": {
                    "$ref": "#/definitions/DeserializationConfig"
                },
                "deserializationContext": {
                    "$ref": "#/definitions/DeserializationContext"
                },
                "factory": {
                    "$ref": "#/definitions/JsonFactory"
                },
                "injectableValues": {
                    "$ref": "#/definitions/InjectableValues"
                },
                "jsonFactory": {
                    "$ref": "#/definitions/JsonFactory"
                },
                "nodeFactory": {
                    "$ref": "#/definitions/JsonNodeFactory"
                },
                "propertyNamingStrategy": {
                    "$ref": "#/definitions/PropertyNamingStrategy"
                },
                "serializationConfig": {
                    "$ref": "#/definitions/SerializationConfig"
                },
                "serializerFactory": {
                    "$ref": "#/definitions/SerializerFactory"
                },
                "serializerProvider": {
                    "$ref": "#/definitions/SerializerProvider"
                },
                "serializerProviderInstance": {
                    "$ref": "#/definitions/SerializerProvider"
                },
                "subtypeResolver": {
                    "$ref": "#/definitions/SubtypeResolver"
                },
                "typeFactory": {
                    "$ref": "#/definitions/TypeFactory"
                },
                "visibilityChecker": {
                    "$ref": "#/definitions/VisibilityCheckerObject"
                }
            },
            "type": "object"
        },
        "OutputDecorator": {
            "type": "object"
        },
        "Package": {
            "properties": {
                "annotations": {
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    },
                    "type": "array"
                },
                "declaredAnnotations": {
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    },
                    "type": "array"
                },
                "implementationTitle": {
                    "type": "string"
                },
                "implementationVendor": {
                    "type": "string"
                },
                "implementationVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sealed": {
                    "type": "boolean"
                },
                "specificationTitle": {
                    "type": "string"
                },
                "specificationVendor": {
                    "type": "string"
                },
                "specificationVersion": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PackageMetadata": {
            "properties": {
                "contact": {
                    "type": "string"
                },
                "createTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "modificationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PrettyPrinter": {
            "type": "object"
        },
        "PropertyName": {
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "namespace": {
                    "type": "string"
                },
                "simpleName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PropertyNamingStrategy": {
            "type": "object"
        },
        "PublicKey": {
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "encoded": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "format": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SerializationConfig": {
            "properties": {
                "annotationIntrospector": {
                    "$ref": "#/definitions/AnnotationIntrospector"
                },
                "annotationProcessingEnabled": {
                    "type": "boolean"
                },
                "attributes": {
                    "$ref": "#/definitions/ContextAttributes"
                },
                "base64Variant": {
                    "$ref": "#/definitions/Base64Variant"
                },
                "classIntrospector": {
                    "$ref": "#/definitions/ClassIntrospector"
                },
                "dateFormat": {
                    "$ref": "#/definitions/DateFormat"
                },
                "defaultPrettyPrinter": {
                    "$ref": "#/definitions/PrettyPrinter"
                },
                "defaultPropertyInclusion": {
                    "$ref": "#/definitions/Value"
                },
                "defaultVisibilityChecker": {
                    "$ref": "#/definitions/VisibilityCheckerObject"
                },
                "filterProvider": {
                    "$ref": "#/definitions/FilterProvider"
                },
                "fullRootName": {
                    "$ref": "#/definitions/PropertyName"
                },
                "handlerInstantiator": {
                    "$ref": "#/definitions/HandlerInstantiator"
                },
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "propertyNamingStrategy": {
                    "$ref": "#/definitions/PropertyNamingStrategy"
                },
                "rootName": {
                    "type": "string"
                },
                "serializationFeatures": {
                    "format": "int32",
                    "type": "integer"
                },
                "serializationInclusion": {
                    "enum": [
                        "ALWAYS",
                        "NON_NULL",
                        "NON_ABSENT",
                        "NON_EMPTY",
                        "NON_DEFAULT",
                        "USE_DEFAULTS"
                    ],
                    "type": "string"
                },
                "subtypeResolver": {
                    "$ref": "#/definitions/SubtypeResolver"
                },
                "timeZone": {
                    "$ref": "#/definitions/TimeZone"
                },
                "typeFactory": {
                    "$ref": "#/definitions/TypeFactory"
                }
            },
            "type": "object"
        },
        "SerializerFactory": {
            "type": "object"
        },
        "SerializerProvider": {
            "properties": {
                "annotationIntrospector": {
                    "$ref": "#/definitions/AnnotationIntrospector"
                },
                "config": {
                    "$ref": "#/definitions/SerializationConfig"
                },
                "defaultNullKeySerializer": {
                    "$ref": "#/definitions/JsonSerializerObject"
                },
                "defaultNullValueSerializer": {
                    "$ref": "#/definitions/JsonSerializerObject"
                },
                "filterProvider": {
                    "$ref": "#/definitions/FilterProvider"
                },
                "generator": {
                    "$ref": "#/definitions/JsonGenerator"
                },
                "locale": {
                    "$ref": "#/definitions/Locale"
                },
                "timeZone": {
                    "$ref": "#/definitions/TimeZone"
                },
                "typeFactory": {
                    "$ref": "#/definitions/TypeFactory"
                }
            },
            "type": "object"
        },
        "ShortBuilder": {
            "type": "object"
        },
        "SocketAddress": {
            "type": "object"
        },
        "StreamingOutput": {
            "type": "object"
        },
        "SubtypeResolver": {
            "type": "object"
        },
        "TimeZone": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "dstsavings": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "rawOffset": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "TypeBindings": {
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "typeParameters": {
                    "items": {
                        "$ref": "#/definitions/JavaType"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "TypeFactory": {
            "properties": {
                "classLoader": {
                    "$ref": "#/definitions/ClassLoader"
                }
            },
            "type": "object"
        },
        "Value": {
            "properties": {
                "contentInclusion": {
                    "enum": [
                        "ALWAYS",
                        "NON_NULL",
                        "NON_ABSENT",
                        "NON_EMPTY",
                        "NON_DEFAULT",
                        "USE_DEFAULTS"
                    ],
                    "type": "string"
                },
                "valueInclusion": {
                    "enum": [
                        "ALWAYS",
                        "NON_NULL",
                        "NON_ABSENT",
                        "NON_EMPTY",
                        "NON_DEFAULT",
                        "USE_DEFAULTS"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VisibilityChecker": {
            "type": "object"
        },
        "VisibilityCheckerObject": {
            "type": "object"
        }
    },
    "info": {
        "description": "This provides the REST API for Pulsar Packages operations",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "Pulsar Packages REST API",
        "version": "v3"
    },
    "paths": {
        "/packages/{type}/{tenant}/{namespace}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "listPackages",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Return all the specified type package names in the specified namespace.",
                        "schema": {
                            "$ref": "#/definitions/PackageMetadata"
                        }
                    },
                    "412": {
                        "description": "The package type is illegal."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "503": {
                        "description": "Package Management Service is not enabled in the broker."
                    }
                },
                "summary": "Get all the specified type packages in a namespace.",
                "tags": [
                    "packages"
                ]
            }
        },
        "/packages/{type}/{tenant}/{namespace}/{packageName}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "listPackageVersion",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "packageName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Return the package versions of the specified package.",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The specified package is not existent."
                    },
                    "412": {
                        "description": "The package name is illegal."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "503": {
                        "description": "Package Management Service is not enabled in the broker."
                    }
                },
                "summary": "Get all the versions of a package.",
                "tags": [
                    "packages"
                ]
            }
        },
        "/packages/{type}/{tenant}/{namespace}/{packageName}/{version}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "packageName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Delete the specified package successfully."
                    },
                    "404": {
                        "description": "The specified package is not existent."
                    },
                    "412": {
                        "description": "The package name is illegal."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "503": {
                        "description": "Package Management Service is not enabled in the broker."
                    }
                },
                "summary": "Delete a package with the package name.",
                "tags": [
                    "packages"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "download",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "packageName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Download the specified package successfully.",
                        "schema": {
                            "$ref": "#/definitions/StreamingOutput"
                        }
                    },
                    "404": {
                        "description": "The specified package is not existent."
                    },
                    "412": {
                        "description": "The package name is illegal."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "503": {
                        "description": "Package Management Service is not enabled in the broker."
                    }
                },
                "summary": "Download a package with the package name.",
                "tags": [
                    "packages"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "packageName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Upload the specified package successfully."
                    },
                    "412": {
                        "description": "The package name is illegal."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "503": {
                        "description": "Package Management Service is not enabled in the broker."
                    }
                },
                "summary": "Upload a package.",
                "tags": [
                    "packages"
                ]
            }
        },
        "/packages/{type}/{tenant}/{namespace}/{packageName}/{version}/metadata": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "getMeta",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "packageName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Return the metadata of the specified package.",
                        "schema": {
                            "$ref": "#/definitions/PackageMetadata"
                        }
                    },
                    "404": {
                        "description": "The specified package is not existent."
                    },
                    "412": {
                        "description": "The package name is illegal."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "503": {
                        "description": "Package Management Service is not enabled in the broker."
                    }
                },
                "summary": "Get the metadata of a package.",
                "tags": [
                    "packages"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "updateMeta",
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "packageName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Update the metadata of the specified package successfully."
                    },
                    "404": {
                        "description": "The specified package is not existent."
                    },
                    "412": {
                        "description": "The package name is illegal."
                    },
                    "500": {
                        "description": "Internal server error."
                    },
                    "503": {
                        "description": "Package Management Service is not enabled in the broker."
                    }
                },
                "summary": "Update the metadata of a package.",
                "tags": [
                    "packages"
                ]
            }
        }
    },
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "tags": [
        {
            "name": "packages"
        }
    ]
}

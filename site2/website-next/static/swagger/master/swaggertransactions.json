{
  "swagger" : "2.0",
  "info" : {
    "description" : "This provides the REST API for Pulsar Transactions operations",
    "version" : "v3",
    "title" : "Pulsar Transactions REST API",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath" : "/admin/v3",
  "tags" : [ {
    "name" : "transactions"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/transactions/coordinatorInternalStats/{coordinatorId}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get coordinator internal stats.",
        "description" : "",
        "operationId" : "getCoordinatorInternalStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "coordinatorId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Transaction coordinator not found"
          },
          "405" : {
            "description" : "Broker don't use MLTransactionMetadataStore!"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/coordinatorStats" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get transaction coordinator stats.",
        "description" : "",
        "operationId" : "getCoordinatorStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "coordinatorId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Transaction coordinator not found"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/coordinators" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "List transaction coordinators.",
        "description" : "",
        "operationId" : "listCoordinators",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "403" : {
            "description" : "Don't have admin permission"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/pendingAckInternalStats/{tenant}/{namespace}/{topic}/{subName}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get transaction pending ack internal stats.",
        "description" : "",
        "operationId" : "getPendingAckInternalStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topic",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "metadata",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "307" : {
            "description" : "Topic is not owned by this broker!"
          },
          "400" : {
            "description" : "Topic is not a persistent topic!"
          },
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Tenant or cluster or namespace or topic or subscription name doesn't exist"
          },
          "405" : {
            "description" : "Pending ack handle don't use managedLedger!"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/pendingAckStats/{tenant}/{namespace}/{topic}/{subName}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get transaction pending ack stats in topic.",
        "description" : "",
        "operationId" : "getPendingAckStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topic",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "lowWaterMarks",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "307" : {
            "description" : "Topic is not owned by this broker!"
          },
          "400" : {
            "description" : "Topic is not a persistent topic!"
          },
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Tenant or cluster or namespace or topic or subName doesn't exist"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/positionStatsInPendingAck/{tenant}/{namespace}/{topic}/{subName}/{ledgerId}/{entryId}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get position stats in pending ack.",
        "description" : "",
        "operationId" : "getPositionStatsInPendingAck",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topic",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "ledgerId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entryId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "batchIndex",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "307" : {
            "description" : "Topic is not owned by this broker!"
          },
          "400" : {
            "description" : "Topic is not a persistent topic!"
          },
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Tenant or cluster or namespace or topic or subscription name doesn't exist"
          },
          "405" : {
            "description" : "Pending ack handle don't use managedLedger!"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/slowTransactions/{timeout}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get slow transactions.",
        "description" : "",
        "operationId" : "getSlowTransactions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "timeout",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "coordinatorId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "307" : {
            "description" : "Topic don't owner by this broker!"
          },
          "400" : {
            "description" : "Topic is not a persistent topic!"
          },
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Tenant or cluster or namespace or topic or coordinator or transaction doesn't exist"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/transactionBufferStats/{tenant}/{namespace}/{topic}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get transaction buffer stats in topic.",
        "description" : "",
        "operationId" : "getTransactionBufferStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topic",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "lowWaterMarks",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "307" : {
            "description" : "Topic is not owned by this broker!"
          },
          "400" : {
            "description" : "Topic is not a persistent topic!"
          },
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Tenant or cluster or namespace or topic doesn't exist"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/transactionCoordinator/replicas" : {
      "post" : {
        "tags" : [ "transactions" ],
        "operationId" : "scaleTransactionCoordinators",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "401" : {
            "description" : "This operation requires super-user access"
          },
          "406" : {
            "description" : "The number of replicas should be more than the current number of transaction coordinator replicas"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/transactionInBufferStats/{tenant}/{namespace}/{topic}/{mostSigBits}/{leastSigBits}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get transaction state in transaction buffer.",
        "description" : "",
        "operationId" : "getTransactionInBufferStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topic",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "mostSigBits",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "leastSigBits",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "307" : {
            "description" : "Topic is not owned by this broker!"
          },
          "400" : {
            "description" : "Topic is not a persistent topic!"
          },
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Tenant or cluster or namespace or topic doesn't exist"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/transactionInPendingAckStats/{tenant}/{namespace}/{topic}/{subName}/{mostSigBits}/{leastSigBits}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get transaction state in pending ack.",
        "description" : "",
        "operationId" : "getTransactionInPendingAckStats",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenant",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "namespace",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topic",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "mostSigBits",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "leastSigBits",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "307" : {
            "description" : "Topic is not owned by this broker!"
          },
          "400" : {
            "description" : "Topic is not a persistent topic!"
          },
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Tenant or cluster or namespace or topic doesn't exist"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    },
    "/transactions/transactionMetadata/{mostSigBits}/{leastSigBits}" : {
      "get" : {
        "tags" : [ "transactions" ],
        "summary" : "Get transaction metadata",
        "description" : "",
        "operationId" : "getTransactionMetadata",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "authoritative",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "mostSigBits",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "leastSigBits",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "307" : {
            "description" : "Topic is not owned by this broker!"
          },
          "400" : {
            "description" : "Topic is not a persistent topic!"
          },
          "403" : {
            "description" : "Don't have admin permission"
          },
          "404" : {
            "description" : "Tenant or cluster or namespace or topic or coordinator or transaction doesn't exist"
          },
          "409" : {
            "description" : "Concurrent modification"
          },
          "503" : {
            "description" : "This Broker is not configured with transactionCoordinatorEnabled=true."
          }
        }
      }
    }
  },
  "definitions" : {
    "Annotation" : {
      "type" : "object"
    },
    "AnnotationIntrospector" : {
      "type" : "object"
    },
    "ArrayBuilders" : {
      "type" : "object",
      "properties" : {
        "shortBuilder" : {
          "$ref" : "#/definitions/ShortBuilder"
        },
        "byteBuilder" : {
          "$ref" : "#/definitions/ByteBuilder"
        },
        "booleanBuilder" : {
          "$ref" : "#/definitions/BooleanBuilder"
        },
        "intBuilder" : {
          "$ref" : "#/definitions/IntBuilder"
        },
        "longBuilder" : {
          "$ref" : "#/definitions/LongBuilder"
        },
        "floatBuilder" : {
          "$ref" : "#/definitions/FloatBuilder"
        },
        "doubleBuilder" : {
          "$ref" : "#/definitions/DoubleBuilder"
        }
      }
    },
    "AuthenticationDataSource" : {
      "type" : "object",
      "properties" : {
        "peerAddress" : {
          "$ref" : "#/definitions/SocketAddress"
        },
        "tlsCertificates" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Certificate"
          }
        },
        "httpAuthType" : {
          "type" : "string"
        },
        "commandData" : {
          "type" : "string"
        },
        "subscription" : {
          "type" : "string"
        }
      }
    },
    "Base64Variant" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "paddingChar" : {
          "type" : "string"
        },
        "maxLineLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "paddingByte" : {
          "type" : "string",
          "format" : "byte"
        }
      }
    },
    "BooleanBuilder" : {
      "type" : "object"
    },
    "ByteBuilder" : {
      "type" : "object"
    },
    "Certificate" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "publicKey" : {
          "$ref" : "#/definitions/PublicKey"
        },
        "encoded" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      }
    },
    "CharacterEscapes" : {
      "type" : "object",
      "properties" : {
        "escapeCodesForAscii" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "ClassIntrospector" : {
      "type" : "object"
    },
    "ClassLoader" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "registeredAsParallelCapable" : {
          "type" : "boolean"
        },
        "parent" : {
          "$ref" : "#/definitions/ClassLoader"
        },
        "unnamedModule" : {
          "$ref" : "#/definitions/Module"
        },
        "definedPackages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Package"
          }
        }
      }
    },
    "CompletableFuture" : {
      "type" : "object",
      "properties" : {
        "cancelled" : {
          "type" : "boolean"
        },
        "done" : {
          "type" : "boolean"
        },
        "completedExceptionally" : {
          "type" : "boolean"
        },
        "numberOfDependents" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CompletableFutureClusterData" : {
      "type" : "object",
      "properties" : {
        "cancelled" : {
          "type" : "boolean"
        },
        "done" : {
          "type" : "boolean"
        },
        "completedExceptionally" : {
          "type" : "boolean"
        },
        "numberOfDependents" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CompletableFutureVoid" : {
      "type" : "object",
      "properties" : {
        "cancelled" : {
          "type" : "boolean"
        },
        "done" : {
          "type" : "boolean"
        },
        "completedExceptionally" : {
          "type" : "boolean"
        },
        "numberOfDependents" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ContextAttributes" : {
      "type" : "object"
    },
    "Currency" : {
      "type" : "object",
      "properties" : {
        "currencyCode" : {
          "type" : "string"
        },
        "defaultFractionDigits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numericCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "displayName" : {
          "type" : "string"
        },
        "numericCodeAsString" : {
          "type" : "string"
        },
        "symbol" : {
          "type" : "string"
        }
      }
    },
    "DateFormat" : {
      "type" : "object",
      "properties" : {
        "calendar" : {
          "type" : "string",
          "format" : "date-time"
        },
        "numberFormat" : {
          "$ref" : "#/definitions/NumberFormat"
        },
        "lenient" : {
          "type" : "boolean"
        },
        "timeZone" : {
          "$ref" : "#/definitions/TimeZone"
        }
      }
    },
    "DeserializationConfig" : {
      "type" : "object",
      "properties" : {
        "defaultPropertyInclusion" : {
          "$ref" : "#/definitions/Value"
        },
        "nodeFactory" : {
          "$ref" : "#/definitions/JsonNodeFactory"
        },
        "annotationIntrospector" : {
          "$ref" : "#/definitions/AnnotationIntrospector"
        },
        "problemHandlers" : {
          "$ref" : "#/definitions/LinkedNodeDeserializationProblemHandler"
        },
        "deserializationFeatures" : {
          "type" : "integer",
          "format" : "int32"
        },
        "attributes" : {
          "$ref" : "#/definitions/ContextAttributes"
        },
        "defaultVisibilityChecker" : {
          "$ref" : "#/definitions/VisibilityCheckerObject"
        },
        "subtypeResolver" : {
          "$ref" : "#/definitions/SubtypeResolver"
        },
        "fullRootName" : {
          "$ref" : "#/definitions/PropertyName"
        },
        "rootName" : {
          "type" : "string"
        },
        "locale" : {
          "$ref" : "#/definitions/Locale"
        },
        "timeZone" : {
          "$ref" : "#/definitions/TimeZone"
        },
        "annotationProcessingEnabled" : {
          "type" : "boolean"
        },
        "dateFormat" : {
          "$ref" : "#/definitions/DateFormat"
        },
        "propertyNamingStrategy" : {
          "$ref" : "#/definitions/PropertyNamingStrategy"
        },
        "typeFactory" : {
          "$ref" : "#/definitions/TypeFactory"
        },
        "handlerInstantiator" : {
          "$ref" : "#/definitions/HandlerInstantiator"
        },
        "base64Variant" : {
          "$ref" : "#/definitions/Base64Variant"
        },
        "classIntrospector" : {
          "$ref" : "#/definitions/ClassIntrospector"
        }
      }
    },
    "DeserializationContext" : {
      "type" : "object",
      "properties" : {
        "locale" : {
          "$ref" : "#/definitions/Locale"
        },
        "timeZone" : {
          "$ref" : "#/definitions/TimeZone"
        },
        "factory" : {
          "$ref" : "#/definitions/DeserializerFactory"
        },
        "nodeFactory" : {
          "$ref" : "#/definitions/JsonNodeFactory"
        },
        "typeFactory" : {
          "$ref" : "#/definitions/TypeFactory"
        },
        "annotationIntrospector" : {
          "$ref" : "#/definitions/AnnotationIntrospector"
        },
        "base64Variant" : {
          "$ref" : "#/definitions/Base64Variant"
        },
        "contextualType" : {
          "$ref" : "#/definitions/JavaType"
        },
        "arrayBuilders" : {
          "$ref" : "#/definitions/ArrayBuilders"
        },
        "deserializationFeatures" : {
          "type" : "integer",
          "format" : "int32"
        },
        "config" : {
          "$ref" : "#/definitions/DeserializationConfig"
        },
        "parser" : {
          "$ref" : "#/definitions/JsonParser"
        }
      }
    },
    "DeserializerFactory" : {
      "type" : "object"
    },
    "DoubleBuilder" : {
      "type" : "object"
    },
    "FilterProvider" : {
      "type" : "object"
    },
    "FloatBuilder" : {
      "type" : "object"
    },
    "FormatSchema" : {
      "type" : "object",
      "properties" : {
        "schemaType" : {
          "type" : "string"
        }
      }
    },
    "HandlerInstantiator" : {
      "type" : "object"
    },
    "InjectableValues" : {
      "type" : "object"
    },
    "InputDecorator" : {
      "type" : "object"
    },
    "IntBuilder" : {
      "type" : "object"
    },
    "JavaType" : {
      "type" : "object",
      "properties" : {
        "contentType" : {
          "$ref" : "#/definitions/JavaType"
        },
        "interface" : {
          "type" : "boolean"
        },
        "primitive" : {
          "type" : "boolean"
        },
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JavaType"
          }
        },
        "genericSignature" : {
          "type" : "string"
        },
        "final" : {
          "type" : "boolean"
        },
        "abstract" : {
          "type" : "boolean"
        },
        "javaLangObject" : {
          "type" : "boolean"
        },
        "arrayType" : {
          "type" : "boolean"
        },
        "throwable" : {
          "type" : "boolean"
        },
        "superClass" : {
          "$ref" : "#/definitions/JavaType"
        },
        "mapLikeType" : {
          "type" : "boolean"
        },
        "containerType" : {
          "type" : "boolean"
        },
        "valueHandler" : {
          "type" : "object"
        },
        "typeHandler" : {
          "type" : "object"
        },
        "contentTypeHandler" : {
          "type" : "object"
        },
        "contentValueHandler" : {
          "type" : "object"
        },
        "erasedSignature" : {
          "type" : "string"
        },
        "collectionLikeType" : {
          "type" : "boolean"
        },
        "referencedType" : {
          "$ref" : "#/definitions/JavaType"
        },
        "bindings" : {
          "$ref" : "#/definitions/TypeBindings"
        },
        "concrete" : {
          "type" : "boolean"
        },
        "keyType" : {
          "$ref" : "#/definitions/JavaType"
        },
        "enumType" : {
          "type" : "boolean"
        },
        "typeName" : {
          "type" : "string"
        },
        "referenceType" : {
          "type" : "boolean"
        }
      }
    },
    "JsonFactory" : {
      "type" : "object",
      "properties" : {
        "formatName" : {
          "type" : "string"
        },
        "rootValueSeparator" : {
          "type" : "string"
        },
        "outputDecorator" : {
          "$ref" : "#/definitions/OutputDecorator"
        },
        "characterEscapes" : {
          "$ref" : "#/definitions/CharacterEscapes"
        },
        "inputDecorator" : {
          "$ref" : "#/definitions/InputDecorator"
        },
        "codec" : {
          "$ref" : "#/definitions/ObjectCodec"
        }
      }
    },
    "JsonGenerator" : {
      "type" : "object",
      "properties" : {
        "schema" : {
          "$ref" : "#/definitions/FormatSchema"
        },
        "closed" : {
          "type" : "boolean"
        },
        "featureMask" : {
          "type" : "integer",
          "format" : "int32"
        },
        "formatFeatures" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentValue" : {
          "type" : "object"
        },
        "prettyPrinter" : {
          "$ref" : "#/definitions/PrettyPrinter"
        },
        "characterEscapes" : {
          "$ref" : "#/definitions/CharacterEscapes"
        },
        "outputTarget" : {
          "type" : "object"
        },
        "highestEscapedChar" : {
          "type" : "integer",
          "format" : "int32"
        },
        "outputBuffered" : {
          "type" : "integer",
          "format" : "int32"
        },
        "outputContext" : {
          "$ref" : "#/definitions/JsonStreamContext"
        },
        "codec" : {
          "$ref" : "#/definitions/ObjectCodec"
        }
      }
    },
    "JsonLocation" : {
      "type" : "object",
      "properties" : {
        "sourceRef" : {
          "type" : "object"
        },
        "columnNr" : {
          "type" : "integer",
          "format" : "int32"
        },
        "charOffset" : {
          "type" : "integer",
          "format" : "int64"
        },
        "byteOffset" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lineNr" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "JsonNodeFactory" : {
      "type" : "object"
    },
    "JsonParser" : {
      "type" : "object",
      "properties" : {
        "textLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "schema" : {
          "$ref" : "#/definitions/FormatSchema"
        },
        "closed" : {
          "type" : "boolean"
        },
        "currentLocation" : {
          "$ref" : "#/definitions/JsonLocation"
        },
        "textOffset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "featureMask" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tokenLocation" : {
          "$ref" : "#/definitions/JsonLocation"
        },
        "numberType" : {
          "type" : "string",
          "enum" : [ "INT", "LONG", "BIG_INTEGER", "FLOAT", "DOUBLE", "BIG_DECIMAL" ]
        },
        "inputSource" : {
          "type" : "object"
        },
        "embeddedObject" : {
          "type" : "object"
        },
        "decimalValue" : {
          "type" : "number"
        },
        "valueAsLong" : {
          "type" : "integer",
          "format" : "int64"
        },
        "formatFeatures" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentName" : {
          "type" : "string"
        },
        "currentValue" : {
          "type" : "object"
        },
        "expectedStartObjectToken" : {
          "type" : "boolean"
        },
        "expectedStartArrayToken" : {
          "type" : "boolean"
        },
        "valueAsBoolean" : {
          "type" : "boolean"
        },
        "valueAsDouble" : {
          "type" : "number",
          "format" : "double"
        },
        "numberValue" : {
          "$ref" : "#/definitions/Number"
        },
        "valueAsString" : {
          "type" : "string"
        },
        "currentTokenId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentToken" : {
          "type" : "string",
          "enum" : [ "NOT_AVAILABLE", "START_OBJECT", "END_OBJECT", "START_ARRAY", "END_ARRAY", "FIELD_NAME", "VALUE_EMBEDDED_OBJECT", "VALUE_STRING", "VALUE_NUMBER_INT", "VALUE_NUMBER_FLOAT", "VALUE_TRUE", "VALUE_FALSE", "VALUE_NULL" ]
        },
        "parsingContext" : {
          "$ref" : "#/definitions/JsonStreamContext"
        },
        "valueAsInt" : {
          "type" : "integer",
          "format" : "int32"
        },
        "bigIntegerValue" : {
          "type" : "integer"
        },
        "lastClearedToken" : {
          "type" : "string",
          "enum" : [ "NOT_AVAILABLE", "START_OBJECT", "END_OBJECT", "START_ARRAY", "END_ARRAY", "FIELD_NAME", "VALUE_EMBEDDED_OBJECT", "VALUE_STRING", "VALUE_NUMBER_INT", "VALUE_NUMBER_FLOAT", "VALUE_TRUE", "VALUE_FALSE", "VALUE_NULL" ]
        },
        "binaryValue" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "textCharacters" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "booleanValue" : {
          "type" : "boolean"
        },
        "byteValue" : {
          "type" : "string",
          "format" : "byte"
        },
        "doubleValue" : {
          "type" : "number",
          "format" : "double"
        },
        "floatValue" : {
          "type" : "number",
          "format" : "float"
        },
        "longValue" : {
          "type" : "integer",
          "format" : "int64"
        },
        "shortValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "objectId" : {
          "type" : "object"
        },
        "intValue" : {
          "type" : "integer",
          "format" : "int32"
        },
        "text" : {
          "type" : "string"
        },
        "codec" : {
          "$ref" : "#/definitions/ObjectCodec"
        },
        "typeId" : {
          "type" : "object"
        }
      }
    },
    "JsonSerializer" : {
      "type" : "object",
      "properties" : {
        "unwrappingSerializer" : {
          "type" : "boolean"
        }
      }
    },
    "JsonSerializerObject" : {
      "type" : "object",
      "properties" : {
        "delegatee" : {
          "$ref" : "#/definitions/JsonSerializerObject"
        },
        "unwrappingSerializer" : {
          "type" : "boolean"
        }
      }
    },
    "JsonStreamContext" : {
      "type" : "object",
      "properties" : {
        "parent" : {
          "$ref" : "#/definitions/JsonStreamContext"
        },
        "typeDesc" : {
          "type" : "string"
        },
        "currentName" : {
          "type" : "string"
        },
        "currentValue" : {
          "type" : "object"
        },
        "entryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentIndex" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "LinkedNode" : {
      "type" : "object"
    },
    "LinkedNodeDeserializationProblemHandler" : {
      "type" : "object"
    },
    "Locale" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string"
        },
        "script" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "variant" : {
          "type" : "string"
        },
        "unicodeLocaleAttributes" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "unicodeLocaleKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "displayLanguage" : {
          "type" : "string"
        },
        "displayScript" : {
          "type" : "string"
        },
        "displayCountry" : {
          "type" : "string"
        },
        "displayVariant" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "extensionKeys" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "iso3Language" : {
          "type" : "string"
        },
        "iso3Country" : {
          "type" : "string"
        }
      }
    },
    "LongBuilder" : {
      "type" : "object"
    },
    "Module" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "classLoader" : {
          "$ref" : "#/definitions/ClassLoader"
        },
        "descriptor" : {
          "$ref" : "#/definitions/ModuleDescriptor"
        },
        "named" : {
          "type" : "boolean"
        },
        "annotations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Annotation"
          }
        },
        "declaredAnnotations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Annotation"
          }
        },
        "packages" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "layer" : {
          "$ref" : "#/definitions/ModuleLayer"
        }
      }
    },
    "ModuleDescriptor" : {
      "type" : "object",
      "properties" : {
        "open" : {
          "type" : "boolean"
        },
        "automatic" : {
          "type" : "boolean"
        }
      }
    },
    "ModuleLayer" : {
      "type" : "object"
    },
    "Number" : {
      "type" : "object"
    },
    "NumberFormat" : {
      "type" : "object",
      "properties" : {
        "groupingUsed" : {
          "type" : "boolean"
        },
        "parseIntegerOnly" : {
          "type" : "boolean"
        },
        "maximumIntegerDigits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minimumIntegerDigits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maximumFractionDigits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minimumFractionDigits" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currency" : {
          "$ref" : "#/definitions/Currency"
        },
        "roundingMode" : {
          "type" : "string",
          "enum" : [ "UP", "DOWN", "CEILING", "FLOOR", "HALF_UP", "HALF_DOWN", "HALF_EVEN", "UNNECESSARY" ]
        }
      }
    },
    "ObjectCodec" : {
      "type" : "object",
      "properties" : {
        "factory" : {
          "$ref" : "#/definitions/JsonFactory"
        },
        "jsonFactory" : {
          "$ref" : "#/definitions/JsonFactory"
        }
      }
    },
    "ObjectMapper" : {
      "type" : "object",
      "properties" : {
        "factory" : {
          "$ref" : "#/definitions/JsonFactory"
        },
        "serializerProviderInstance" : {
          "$ref" : "#/definitions/SerializerProvider"
        },
        "dateFormat" : {
          "$ref" : "#/definitions/DateFormat"
        },
        "jsonFactory" : {
          "$ref" : "#/definitions/JsonFactory"
        },
        "serializerFactory" : {
          "$ref" : "#/definitions/SerializerFactory"
        },
        "serializerProvider" : {
          "$ref" : "#/definitions/SerializerProvider"
        },
        "subtypeResolver" : {
          "$ref" : "#/definitions/SubtypeResolver"
        },
        "deserializationContext" : {
          "$ref" : "#/definitions/DeserializationContext"
        },
        "visibilityChecker" : {
          "$ref" : "#/definitions/VisibilityCheckerObject"
        },
        "serializationConfig" : {
          "$ref" : "#/definitions/SerializationConfig"
        },
        "injectableValues" : {
          "$ref" : "#/definitions/InjectableValues"
        },
        "deserializationConfig" : {
          "$ref" : "#/definitions/DeserializationConfig"
        },
        "propertyNamingStrategy" : {
          "$ref" : "#/definitions/PropertyNamingStrategy"
        },
        "nodeFactory" : {
          "$ref" : "#/definitions/JsonNodeFactory"
        },
        "typeFactory" : {
          "$ref" : "#/definitions/TypeFactory"
        }
      }
    },
    "OutputDecorator" : {
      "type" : "object"
    },
    "Package" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "specificationTitle" : {
          "type" : "string"
        },
        "specificationVersion" : {
          "type" : "string"
        },
        "specificationVendor" : {
          "type" : "string"
        },
        "implementationTitle" : {
          "type" : "string"
        },
        "implementationVersion" : {
          "type" : "string"
        },
        "implementationVendor" : {
          "type" : "string"
        },
        "annotations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Annotation"
          }
        },
        "declaredAnnotations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Annotation"
          }
        },
        "sealed" : {
          "type" : "boolean"
        }
      }
    },
    "PrettyPrinter" : {
      "type" : "object"
    },
    "PropertyName" : {
      "type" : "object",
      "properties" : {
        "empty" : {
          "type" : "boolean"
        },
        "simpleName" : {
          "type" : "string"
        },
        "namespace" : {
          "type" : "string"
        }
      }
    },
    "PropertyNamingStrategy" : {
      "type" : "object"
    },
    "PublicKey" : {
      "type" : "object",
      "properties" : {
        "algorithm" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "encoded" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      }
    },
    "SerializationConfig" : {
      "type" : "object",
      "properties" : {
        "defaultPropertyInclusion" : {
          "$ref" : "#/definitions/Value"
        },
        "defaultPrettyPrinter" : {
          "$ref" : "#/definitions/PrettyPrinter"
        },
        "annotationIntrospector" : {
          "$ref" : "#/definitions/AnnotationIntrospector"
        },
        "filterProvider" : {
          "$ref" : "#/definitions/FilterProvider"
        },
        "serializationFeatures" : {
          "type" : "integer",
          "format" : "int32"
        },
        "serializationInclusion" : {
          "type" : "string",
          "enum" : [ "ALWAYS", "NON_NULL", "NON_ABSENT", "NON_EMPTY", "NON_DEFAULT", "USE_DEFAULTS" ]
        },
        "attributes" : {
          "$ref" : "#/definitions/ContextAttributes"
        },
        "defaultVisibilityChecker" : {
          "$ref" : "#/definitions/VisibilityCheckerObject"
        },
        "subtypeResolver" : {
          "$ref" : "#/definitions/SubtypeResolver"
        },
        "fullRootName" : {
          "$ref" : "#/definitions/PropertyName"
        },
        "rootName" : {
          "type" : "string"
        },
        "locale" : {
          "$ref" : "#/definitions/Locale"
        },
        "timeZone" : {
          "$ref" : "#/definitions/TimeZone"
        },
        "annotationProcessingEnabled" : {
          "type" : "boolean"
        },
        "dateFormat" : {
          "$ref" : "#/definitions/DateFormat"
        },
        "propertyNamingStrategy" : {
          "$ref" : "#/definitions/PropertyNamingStrategy"
        },
        "typeFactory" : {
          "$ref" : "#/definitions/TypeFactory"
        },
        "handlerInstantiator" : {
          "$ref" : "#/definitions/HandlerInstantiator"
        },
        "base64Variant" : {
          "$ref" : "#/definitions/Base64Variant"
        },
        "classIntrospector" : {
          "$ref" : "#/definitions/ClassIntrospector"
        }
      }
    },
    "SerializerFactory" : {
      "type" : "object"
    },
    "SerializerProvider" : {
      "type" : "object",
      "properties" : {
        "locale" : {
          "$ref" : "#/definitions/Locale"
        },
        "timeZone" : {
          "$ref" : "#/definitions/TimeZone"
        },
        "generator" : {
          "$ref" : "#/definitions/JsonGenerator"
        },
        "defaultNullValueSerializer" : {
          "$ref" : "#/definitions/JsonSerializerObject"
        },
        "defaultNullKeySerializer" : {
          "$ref" : "#/definitions/JsonSerializerObject"
        },
        "typeFactory" : {
          "$ref" : "#/definitions/TypeFactory"
        },
        "annotationIntrospector" : {
          "$ref" : "#/definitions/AnnotationIntrospector"
        },
        "filterProvider" : {
          "$ref" : "#/definitions/FilterProvider"
        },
        "config" : {
          "$ref" : "#/definitions/SerializationConfig"
        }
      }
    },
    "ShortBuilder" : {
      "type" : "object"
    },
    "SocketAddress" : {
      "type" : "object"
    },
    "SubtypeResolver" : {
      "type" : "object"
    },
    "TimeZone" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "rawOffset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dstsavings" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TypeBindings" : {
      "type" : "object",
      "properties" : {
        "empty" : {
          "type" : "boolean"
        },
        "typeParameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JavaType"
          }
        }
      }
    },
    "TypeFactory" : {
      "type" : "object",
      "properties" : {
        "classLoader" : {
          "$ref" : "#/definitions/ClassLoader"
        }
      }
    },
    "Value" : {
      "type" : "object",
      "properties" : {
        "valueInclusion" : {
          "type" : "string",
          "enum" : [ "ALWAYS", "NON_NULL", "NON_ABSENT", "NON_EMPTY", "NON_DEFAULT", "USE_DEFAULTS" ]
        },
        "contentInclusion" : {
          "type" : "string",
          "enum" : [ "ALWAYS", "NON_NULL", "NON_ABSENT", "NON_EMPTY", "NON_DEFAULT", "USE_DEFAULTS" ]
        }
      }
    },
    "VisibilityChecker" : {
      "type" : "object"
    },
    "VisibilityCheckerObject" : {
      "type" : "object"
    }
  }
}
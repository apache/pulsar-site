{
    "basePath": "/admin/v2",
    "definitions": {
        "AllocatorStats": {
            "properties": {
                "directArenas": {
                    "items": {
                        "$ref": "#/definitions/PoolArenaStats"
                    },
                    "type": "array"
                },
                "heapArenas": {
                    "items": {
                        "$ref": "#/definitions/PoolArenaStats"
                    },
                    "type": "array"
                },
                "normalCacheSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "numDirectArenas": {
                    "format": "int32",
                    "type": "integer"
                },
                "numHeapArenas": {
                    "format": "int32",
                    "type": "integer"
                },
                "numThreadLocalCaches": {
                    "format": "int32",
                    "type": "integer"
                },
                "smallCacheSize": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AuthPolicies": {
            "properties": {
                "namespaceAuthentication": {
                    "additionalProperties": {
                        "items": {
                            "enum": [
                                "produce",
                                "consume",
                                "functions",
                                "sources",
                                "sinks",
                                "packages"
                            ],
                            "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "type": "object"
                },
                "subscriptionAuthentication": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "type": "object"
                },
                "topicAuthentication": {
                    "additionalProperties": {
                        "additionalProperties": {
                            "items": {
                                "enum": [
                                    "produce",
                                    "consume",
                                    "functions",
                                    "sources",
                                    "sinks",
                                    "packages"
                                ],
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        },
                        "type": "object"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "AuthenticationDataSource": {
            "properties": {
                "commandData": {
                    "type": "string"
                },
                "httpAuthType": {
                    "type": "string"
                },
                "peerAddress": {
                    "$ref": "#/definitions/SocketAddress"
                },
                "subscription": {
                    "type": "string"
                },
                "tlsCertificates": {
                    "items": {
                        "$ref": "#/definitions/Certificate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthenticationParameters": {
            "properties": {
                "clientAuthenticationDataSource": {
                    "$ref": "#/definitions/AuthenticationDataSource"
                },
                "clientRole": {
                    "type": "string"
                },
                "originalPrincipal": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AutoFailoverPolicyData": {
            "properties": {
                "parameters": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "policyType": {
                    "enum": [
                        "min_available"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "AutoSubscriptionCreationOverride": {
            "properties": {
                "allowAutoSubscriptionCreation": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AutoSubscriptionCreationOverrideImpl": {
            "properties": {
                "allowAutoSubscriptionCreation": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "AutoTopicCreationOverride": {
            "properties": {
                "allowAutoTopicCreation": {
                    "type": "boolean"
                },
                "defaultNumPartitions": {
                    "format": "int32",
                    "type": "integer"
                },
                "topicType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BacklogQuota": {
            "properties": {
                "limit": {
                    "format": "int64",
                    "type": "integer"
                },
                "limitSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "limitTime": {
                    "format": "int32",
                    "type": "integer"
                },
                "policy": {
                    "enum": [
                        "producer_request_hold",
                        "producer_exception",
                        "consumer_backlog_eviction"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BacklogQuotaImpl": {
            "properties": {
                "limit": {
                    "format": "int64",
                    "type": "integer"
                },
                "limitSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "limitTime": {
                    "format": "int32",
                    "type": "integer"
                },
                "policy": {
                    "enum": [
                        "producer_request_hold",
                        "producer_exception",
                        "consumer_backlog_eviction"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BookieAffinityGroupData": {
            "properties": {
                "bookkeeperAffinityGroupPrimary": {
                    "type": "string"
                },
                "bookkeeperAffinityGroupSecondary": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BookieInfo": {
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "rack": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BookiesClusterInfo": {
            "properties": {
                "bookies": {
                    "items": {
                        "$ref": "#/definitions/RawBookieInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BrokerInfo": {
            "properties": {
                "brokerId": {
                    "type": "string"
                },
                "serviceUrl": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BrokerNamespaceIsolationData": {
            "description": "The namespace isolation data for a given broker",
            "properties": {
                "brokerName": {
                    "description": "The broker name",
                    "example": "broker1:8080",
                    "type": "string"
                },
                "namespaceRegex": {
                    "description": "The namespace-isolation policies attached to this broker",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "policyName": {
                    "description": "Policy name",
                    "example": "my-policy",
                    "type": "string"
                },
                "primary": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "BundlesData": {
            "properties": {
                "boundaries": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "numBundles": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Certificate": {
            "properties": {
                "encoded": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "publicKey": {
                    "$ref": "#/definitions/PublicKey"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ClusterData": {
            "description": "The configuration data for a cluster",
            "properties": {
                "authenticationParameters": {
                    "description": "Authentication parameters when client would like to connect to cluster.",
                    "type": "string"
                },
                "authenticationPlugin": {
                    "description": "Authentication plugin when client would like to connect to cluster.",
                    "example": "org.apache.pulsar.client.impl.auth.AuthenticationToken",
                    "type": "string"
                },
                "brokerClientCertificateFilePath": {
                    "description": "TLS certificate file for internal client, used by the internal client to authenticate with Pulsar brokers",
                    "type": "string"
                },
                "brokerClientKeyFilePath": {
                    "description": "TLS private key file for internal client, used by the internal client to authenticate with Pulsar brokers",
                    "type": "string"
                },
                "brokerClientTlsEnabled": {
                    "description": "Enable TLS when talking with other brokers in the same cluster (admin operation) or different clusters (replication)",
                    "type": "boolean"
                },
                "brokerClientTlsEnabledWithKeyStore": {
                    "description": "Whether internal client use KeyStore type to authenticate with other Pulsar brokers",
                    "type": "boolean"
                },
                "brokerClientTlsKeyStore": {
                    "description": "TLS KeyStore path for internal client,  used by the internal client to authenticate with Pulsar brokers",
                    "type": "string"
                },
                "brokerClientTlsKeyStorePassword": {
                    "description": "TLS KeyStore password for internal client,  used by the internal client to authenticate with Pulsar brokers",
                    "type": "string"
                },
                "brokerClientTlsKeyStoreType": {
                    "description": "TLS KeyStore type configuration for internal client: JKS, PKCS12, used by the internal client to authenticate with Pulsar brokers",
                    "type": "string"
                },
                "brokerClientTlsTrustStore": {
                    "description": "TLS TrustStore path for internal client used by the internal client to authenticate with Pulsar brokers",
                    "type": "string"
                },
                "brokerClientTlsTrustStorePassword": {
                    "description": "TLS TrustStore password for internal client used by the internal client to authenticate with Pulsar brokers",
                    "type": "string"
                },
                "brokerClientTlsTrustStoreType": {
                    "description": "TLS TrustStore type configuration for internal client: JKS, PKCS12 used by the internal client to authenticate with Pulsar brokers",
                    "example": "JKS",
                    "type": "string"
                },
                "brokerClientTrustCertsFilePath": {
                    "description": "Path for the trusted TLS certificate file for outgoing connection to a server (broker)",
                    "type": "string"
                },
                "brokerServiceUrl": {
                    "description": "The broker service url (for produce and consume operations)",
                    "example": "pulsar://pulsar.example.com:6650",
                    "type": "string"
                },
                "brokerServiceUrlTls": {
                    "description": "The secured broker service url (for produce and consume operations)",
                    "example": "pulsar+ssl://pulsar.example.com:6651",
                    "type": "string"
                },
                "listenerName": {
                    "description": "listenerName when client would like to connect to cluster",
                    "type": "string"
                },
                "migrated": {
                    "description": "flag to check if cluster is migrated to different cluster",
                    "example": false,
                    "type": "boolean"
                },
                "migratedClusterUrl": {
                    "$ref": "#/definitions/ClusterUrl",
                    "description": "url of cluster where current cluster is migrated"
                },
                "peerClusterNames": {
                    "description": "A set of peer cluster names",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "proxyProtocol": {
                    "description": "protocol to decide type of proxy routing eg: SNI-routing",
                    "enum": [
                        "SNI"
                    ],
                    "example": "SNI",
                    "type": "string"
                },
                "proxyServiceUrl": {
                    "description": "Proxy-service url when client would like to connect to broker via proxy.",
                    "example": "pulsar+ssl://ats-proxy.example.com:4443 or pulsar://ats-proxy.example.com:4080",
                    "type": "string"
                },
                "serviceUrl": {
                    "description": "The HTTP rest service URL (for admin operations)",
                    "example": "http://pulsar.example.com:8080",
                    "type": "string"
                },
                "serviceUrlTls": {
                    "description": "The HTTPS rest service URL (for admin operations)",
                    "example": "https://pulsar.example.com:8443",
                    "type": "string"
                },
                "tlsAllowInsecureConnection": {
                    "description": "Allow TLS connections to servers whose certificate cannot be be verified to have been signed by a trusted certificate authority.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ClusterUrl": {
            "properties": {
                "brokerServiceUrl": {
                    "type": "string"
                },
                "brokerServiceUrlTls": {
                    "type": "string"
                },
                "empty": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "CompactionStats": {
            "properties": {
                "lastCompactionDurationTimeInMills": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastCompactionFailedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastCompactionRemovedEventCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastCompactionSucceedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompactionStatsImpl": {
            "properties": {
                "lastCompactionDurationTimeInMills": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastCompactionFailedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastCompactionRemovedEventCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastCompactionSucceedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFuture": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureClusterData": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureListSchemaAndMetadata": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureLong": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFuturePairBooleanSchemaCompatibilityStrategy": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFuturePartitionedTopicMetadata": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureResourceQuota": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureSchemaAndMetadata": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureSchemaVersion": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureVoid": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ConnectorDefinition": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sinkClass": {
                    "type": "string"
                },
                "sinkConfigClass": {
                    "type": "string"
                },
                "sourceClass": {
                    "type": "string"
                },
                "sourceConfigClass": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConsumerStats": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "availablePermits": {
                    "format": "int32",
                    "type": "integer"
                },
                "avgMessagesPerEntry": {
                    "format": "int32",
                    "type": "integer"
                },
                "blockedConsumerOnUnackedMsgs": {
                    "type": "boolean"
                },
                "bytesOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "chunkedMessageRate": {
                    "format": "double",
                    "type": "number"
                },
                "clientVersion": {
                    "type": "string"
                },
                "connectedSince": {
                    "type": "string"
                },
                "consumerName": {
                    "type": "string"
                },
                "keyHashRanges": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "lastAckedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastConsumedFlowTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastConsumedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "messageAckRate": {
                    "format": "double",
                    "type": "number"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "msgOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateRedeliver": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "readPositionWhenJoining": {
                    "type": "string"
                },
                "unackedMessages": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CursorDetails": {
            "properties": {
                "cursorBacklog": {
                    "format": "int64",
                    "type": "integer"
                },
                "cursorLedgerId": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CursorInfo": {
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "cursorsLedgerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "individualDeletedMessages": {
                    "items": {
                        "$ref": "#/definitions/MessageRangeInfo"
                    },
                    "type": "array"
                },
                "markDelete": {
                    "$ref": "#/definitions/PositionInfo"
                },
                "modificationDate": {
                    "type": "string"
                },
                "properties": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "version": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CursorStats": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "cursorLedger": {
                    "format": "int64",
                    "type": "integer"
                },
                "cursorLedgerLastEntry": {
                    "format": "int64",
                    "type": "integer"
                },
                "individuallyDeletedMessages": {
                    "type": "string"
                },
                "lastLedgerSwitchTimestamp": {
                    "type": "string"
                },
                "markDeletePosition": {
                    "type": "string"
                },
                "messagesConsumedCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "numberOfEntriesSinceFirstNotAckedMessage": {
                    "format": "int64",
                    "type": "integer"
                },
                "pendingReadOps": {
                    "format": "int32",
                    "type": "integer"
                },
                "properties": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "readPosition": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "subscriptionHavePendingRead": {
                    "type": "boolean"
                },
                "subscriptionHavePendingReplayRead": {
                    "type": "boolean"
                },
                "totalNonContiguousDeletedMessagesRange": {
                    "format": "int32",
                    "type": "integer"
                },
                "waitingReadOp": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DelayedDeliveryPolicies": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "tickTime": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeleteSchemaResponse": {
            "properties": {
                "version": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DispatchRate": {
            "properties": {
                "dispatchThrottlingRateInByte": {
                    "format": "int64",
                    "type": "integer"
                },
                "dispatchThrottlingRateInMsg": {
                    "format": "int32",
                    "type": "integer"
                },
                "ratePeriodInSecond": {
                    "format": "int32",
                    "type": "integer"
                },
                "relativeToPublishRate": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DispatchRateImpl": {
            "properties": {
                "dispatchThrottlingRateInByte": {
                    "format": "int64",
                    "type": "integer"
                },
                "dispatchThrottlingRateInMsg": {
                    "format": "int32",
                    "type": "integer"
                },
                "ratePeriodInSecond": {
                    "format": "int32",
                    "type": "integer"
                },
                "relativeToPublishRate": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "EntryFilters": {
            "properties": {
                "entryFilterNames": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FailureDomain": {
            "description": "The data of a failure domain configuration in a cluster",
            "properties": {
                "brokers": {
                    "description": "The collection of brokers in the same failure domain",
                    "example": "[ 'broker-1', 'broker-2' ]",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "type": "object"
        },
        "FunctionInstanceStatsData": {
            "properties": {
                "avgProcessLatency": {
                    "format": "double",
                    "type": "number"
                },
                "lastInvocation": {
                    "format": "int64",
                    "type": "integer"
                },
                "oneMin": {
                    "$ref": "#/definitions/FunctionInstanceStatsDataBase"
                },
                "processedSuccessfullyTotal": {
                    "format": "int64",
                    "type": "integer"
                },
                "receivedTotal": {
                    "format": "int64",
                    "type": "integer"
                },
                "systemExceptionsTotal": {
                    "format": "int64",
                    "type": "integer"
                },
                "userExceptionsTotal": {
                    "format": "int64",
                    "type": "integer"
                },
                "userMetrics": {
                    "additionalProperties": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "FunctionInstanceStatsDataBase": {
            "properties": {
                "avgProcessLatency": {
                    "format": "double",
                    "type": "number"
                },
                "processedSuccessfullyTotal": {
                    "format": "int64",
                    "type": "integer"
                },
                "receivedTotal": {
                    "format": "int64",
                    "type": "integer"
                },
                "systemExceptionsTotal": {
                    "format": "int64",
                    "type": "integer"
                },
                "userExceptionsTotal": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Functions": {
            "properties": {
                "listOfConnectors": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FunctionsV2": {
            "properties": {
                "listOfConnectors": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FunctionsV2WorkerService": {
            "properties": {
                "listOfConnectors": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "FunctionsWorkerService": {
            "properties": {
                "listOfConnectors": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetAllVersionsSchemaResponse": {
            "properties": {
                "getSchemaResponses": {
                    "items": {
                        "$ref": "#/definitions/GetSchemaResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GetSchemaResponse": {
            "properties": {
                "data": {
                    "type": "string"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "NONE",
                        "STRING",
                        "JSON",
                        "PROTOBUF",
                        "AVRO",
                        "BOOLEAN",
                        "INT8",
                        "INT16",
                        "INT32",
                        "INT64",
                        "FLOAT",
                        "DOUBLE",
                        "DATE",
                        "TIME",
                        "TIMESTAMP",
                        "KEY_VALUE",
                        "INSTANT",
                        "LOCAL_DATE",
                        "LOCAL_TIME",
                        "LOCAL_DATE_TIME",
                        "PROTOBUF_NATIVE",
                        "BYTES",
                        "AUTO",
                        "AUTO_CONSUME",
                        "AUTO_PUBLISH"
                    ],
                    "type": "string"
                },
                "version": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "InactiveTopicPolicies": {
            "properties": {
                "deleteWhileInactive": {
                    "type": "boolean"
                },
                "inactiveTopicDeleteMode": {
                    "enum": [
                        "delete_when_no_subscriptions",
                        "delete_when_subscriptions_caught_up"
                    ],
                    "type": "string"
                },
                "maxInactiveDurationSeconds": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "InternalConfigurationData": {
            "properties": {
                "bookkeeperMetadataServiceUri": {
                    "type": "string"
                },
                "configurationMetadataStoreUrl": {
                    "type": "string"
                },
                "configurationStoreServers": {
                    "type": "string"
                },
                "ledgersRootPath": {
                    "type": "string"
                },
                "metadataStoreUrl": {
                    "type": "string"
                },
                "stateStorageServiceUrl": {
                    "type": "string"
                },
                "zookeeperServers": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IsCompatibilityResponse": {
            "properties": {
                "compatibility": {
                    "type": "boolean"
                },
                "schemaCompatibilityStrategy": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "KubernetesContainerFactory": {
            "properties": {
                "changeConfigMap": {
                    "type": "string"
                },
                "changeConfigMapNamespace": {
                    "type": "string"
                },
                "configAdminCLI": {
                    "type": "string"
                },
                "cpuOverCommitRatio": {
                    "format": "double",
                    "type": "number"
                },
                "customLabels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "expectedMetricsCollectionInterval": {
                    "format": "int32",
                    "type": "integer"
                },
                "extraFunctionDependenciesDir": {
                    "type": "string"
                },
                "functionDockerImages": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "functionInstanceClassPath": {
                    "type": "string"
                },
                "gracePeriodSeconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "grpcPort": {
                    "format": "int32",
                    "type": "integer"
                },
                "imagePullPolicy": {
                    "type": "string"
                },
                "installUserCodeDependencies": {
                    "type": "boolean"
                },
                "jobName": {
                    "type": "string"
                },
                "jobNamespace": {
                    "type": "string"
                },
                "k8Uri": {
                    "type": "string"
                },
                "kubernetesFunctionAuthProviderConfig": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "memoryOverCommitRatio": {
                    "format": "double",
                    "type": "number"
                },
                "metricsPort": {
                    "format": "int32",
                    "type": "integer"
                },
                "narExtractionDirectory": {
                    "type": "string"
                },
                "percentMemoryPadding": {
                    "format": "int32",
                    "type": "integer"
                },
                "pulsarAdminUrl": {
                    "type": "string"
                },
                "pulsarDockerImageName": {
                    "type": "string"
                },
                "pulsarRootDir": {
                    "type": "string"
                },
                "pulsarServiceUrl": {
                    "type": "string"
                },
                "pythonDependencyRepository": {
                    "type": "string"
                },
                "pythonExtraDependencyRepository": {
                    "type": "string"
                },
                "submittingInsidePod": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LedgerDetails": {
            "properties": {
                "entries": {
                    "format": "int64",
                    "type": "integer"
                },
                "ledgerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "timestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LedgerInfo": {
            "properties": {
                "entries": {
                    "format": "int64",
                    "type": "integer"
                },
                "ledgerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "metadata": {
                    "type": "string"
                },
                "offloaded": {
                    "type": "boolean"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "underReplicated": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "LoadReport": {
            "properties": {
                "allocatedBandwidthIn": {
                    "format": "double",
                    "type": "number"
                },
                "allocatedBandwidthOut": {
                    "format": "double",
                    "type": "number"
                },
                "allocatedCPU": {
                    "format": "double",
                    "type": "number"
                },
                "allocatedMemory": {
                    "format": "double",
                    "type": "number"
                },
                "allocatedMsgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "allocatedMsgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "bandwidthIn": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "bandwidthOut": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "brokerVersionString": {
                    "type": "string"
                },
                "bundleGains": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "bundleLosses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "bundleStats": {
                    "additionalProperties": {
                        "$ref": "#/definitions/NamespaceBundleStats"
                    },
                    "type": "object"
                },
                "cpu": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "directMemory": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "lastUpdate": {
                    "format": "int64",
                    "type": "integer"
                },
                "loadManagerClassName": {
                    "type": "string"
                },
                "loadReportType": {
                    "type": "string"
                },
                "memory": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "nonPersistentTopicsEnabled": {
                    "type": "boolean"
                },
                "numBundles": {
                    "format": "int32",
                    "type": "integer"
                },
                "numConsumers": {
                    "format": "int32",
                    "type": "integer"
                },
                "numProducers": {
                    "format": "int32",
                    "type": "integer"
                },
                "numTopics": {
                    "format": "int32",
                    "type": "integer"
                },
                "overLoaded": {
                    "type": "boolean"
                },
                "persistentTopicsEnabled": {
                    "type": "boolean"
                },
                "preAllocatedBandwidthIn": {
                    "format": "double",
                    "type": "number"
                },
                "preAllocatedBandwidthOut": {
                    "format": "double",
                    "type": "number"
                },
                "preAllocatedCPU": {
                    "format": "double",
                    "type": "number"
                },
                "preAllocatedMemory": {
                    "format": "double",
                    "type": "number"
                },
                "preAllocatedMsgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "preAllocatedMsgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "protocols": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "pulsarServiceUrl": {
                    "type": "string"
                },
                "pulsarServiceUrlTls": {
                    "type": "string"
                },
                "startTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "systemResourceUsage": {
                    "$ref": "#/definitions/SystemResourceUsage"
                },
                "timestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "underLoaded": {
                    "type": "boolean"
                },
                "webServiceUrl": {
                    "type": "string"
                },
                "webServiceUrlTls": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LongRunningProcessStatus": {
            "properties": {
                "lastError": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "NOT_RUN",
                        "RUNNING",
                        "SUCCESS",
                        "ERROR"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LongSchemaVersion": {
            "properties": {
                "version": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ManagedLedgerInfo": {
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "cursors": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CursorInfo"
                    },
                    "type": "object"
                },
                "ledgers": {
                    "items": {
                        "$ref": "#/definitions/LedgerInfo"
                    },
                    "type": "array"
                },
                "modificationDate": {
                    "type": "string"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "terminatedPosition": {
                    "$ref": "#/definitions/PositionInfo"
                },
                "version": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "MemoryLimit": {
            "properties": {
                "absoluteValue": {
                    "format": "int64",
                    "type": "integer"
                },
                "percentOfMaxDirectMemory": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "MessageRangeInfo": {
            "properties": {
                "from": {
                    "$ref": "#/definitions/PositionInfo"
                },
                "to": {
                    "$ref": "#/definitions/PositionInfo"
                }
            },
            "type": "object"
        },
        "Metrics": {
            "properties": {
                "dimensions": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "metrics": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "NamespaceBundleStats": {
            "properties": {
                "cacheSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "consumerCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "producerCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "topics": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NamespaceIsolationData": {
            "description": "The data of namespace isolation configuration",
            "properties": {
                "auto_failover_policy": {
                    "$ref": "#/definitions/AutoFailoverPolicyData",
                    "description": "The data of auto-failover policy configuration",
                    "example": "{  \"policy_type\": \"min_available\"  \"parameters\": {    \"\": \"\"  }}"
                },
                "namespaces": {
                    "description": "The list of namespaces to apply this namespace isolation data",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "primary": {
                    "description": "The list of primary brokers for serving the list of namespaces in this isolation policy",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "secondary": {
                    "description": "The list of secondary brokers for serving the list of namespaces in this isolation policy",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NamespaceOwnershipStatus": {
            "properties": {
                "broker_assignment": {
                    "enum": [
                        "primary",
                        "secondary",
                        "shared"
                    ],
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_controlled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NonPersistentPartitionedTopicStatsImpl": {
            "properties": {
                "abortedTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "averageMsgSize": {
                    "format": "double",
                    "type": "number"
                },
                "backlogSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "committedTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "compaction": {
                    "$ref": "#/definitions/CompactionStatsImpl"
                },
                "deduplicationStatus": {
                    "type": "string"
                },
                "delayedMessageIndexSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "earliestMsgPublishTimeInBacklogs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadFailureTimeStamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadLedgerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadSuccessTimeStamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "#/definitions/PartitionedTopicMetadata"
                },
                "msgChunkPublished": {
                    "type": "boolean"
                },
                "msgDropRate": {
                    "format": "double",
                    "type": "number"
                },
                "msgInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "nonContiguousDeletedMessagesRanges": {
                    "format": "int32",
                    "type": "integer"
                },
                "nonContiguousDeletedMessagesRangesSerializedSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "offloadedStorageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "ongoingTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "ownerBroker": {
                    "type": "string"
                },
                "partitions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/NonPersistentTopicStatsImpl"
                    },
                    "type": "object"
                },
                "publishRateLimitedTimes": {
                    "format": "int64",
                    "type": "integer"
                },
                "publishers": {
                    "items": {
                        "$ref": "#/definitions/NonPersistentPublisherStats"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "replication": {
                    "additionalProperties": {
                        "$ref": "#/definitions/NonPersistentReplicatorStats"
                    },
                    "readOnly": true,
                    "type": "object"
                },
                "storageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "subscriptions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/NonPersistentSubscriptionStats"
                    },
                    "readOnly": true,
                    "type": "object"
                },
                "topicEpoch": {
                    "format": "int64",
                    "type": "integer"
                },
                "waitingPublishers": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NonPersistentPublisherStats": {
            "properties": {
                "accessMode": {
                    "enum": [
                        "Shared",
                        "Exclusive",
                        "ExclusiveWithFencing",
                        "WaitForExclusive"
                    ],
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "averageMsgSize": {
                    "format": "double",
                    "type": "number"
                },
                "chunkedMessageRate": {
                    "format": "double",
                    "type": "number"
                },
                "clientVersion": {
                    "type": "string"
                },
                "connectedSince": {
                    "type": "string"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "msgDropRate": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "producerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "producerName": {
                    "type": "string"
                },
                "supportsPartialProducer": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "NonPersistentReplicatorStats": {
            "properties": {
                "connected": {
                    "type": "boolean"
                },
                "inboundConnectedSince": {
                    "type": "string"
                },
                "inboundConnection": {
                    "type": "string"
                },
                "msgDropRate": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateExpired": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "outboundConnectedSince": {
                    "type": "string"
                },
                "outboundConnection": {
                    "type": "string"
                },
                "replicationBacklog": {
                    "format": "int64",
                    "type": "integer"
                },
                "replicationDelayInSeconds": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NonPersistentSubscriptionStats": {
            "properties": {
                "activeConsumerName": {
                    "type": "string"
                },
                "allowOutOfOrderDelivery": {
                    "type": "boolean"
                },
                "backlogSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "blockedSubscriptionOnUnackedMsgs": {
                    "type": "boolean"
                },
                "bytesOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "chunkedMessageRate": {
                    "format": "int32",
                    "type": "integer"
                },
                "consumers": {
                    "items": {
                        "$ref": "#/definitions/ConsumerStats"
                    },
                    "type": "array"
                },
                "consumersAfterMarkDeletePosition": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "delayedMessageIndexSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "durable": {
                    "type": "boolean"
                },
                "earliestMsgPublishTimeInBacklog": {
                    "format": "int64",
                    "type": "integer"
                },
                "filterAcceptedMsgCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "filterProcessedMsgCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "filterRejectedMsgCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "filterRescheduledMsgCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "keySharedMode": {
                    "type": "string"
                },
                "lastAckedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastConsumedFlowTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastConsumedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastExpireTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastMarkDeleteAdvancedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "messageAckRate": {
                    "format": "double",
                    "type": "number"
                },
                "msgBacklog": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgBacklogNoDelayed": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgDelayed": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgDropRate": {
                    "format": "double",
                    "type": "number"
                },
                "msgOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgRateExpired": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateRedeliver": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "nonContiguousDeletedMessagesRanges": {
                    "format": "int32",
                    "type": "integer"
                },
                "nonContiguousDeletedMessagesRangesSerializedSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "replicated": {
                    "type": "boolean"
                },
                "subscriptionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "totalMsgExpired": {
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unackedMessages": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "NonPersistentTopicStatsImpl": {
            "properties": {
                "abortedTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "averageMsgSize": {
                    "format": "double",
                    "type": "number"
                },
                "backlogSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "committedTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "compaction": {
                    "$ref": "#/definitions/CompactionStatsImpl"
                },
                "deduplicationStatus": {
                    "type": "string"
                },
                "delayedMessageIndexSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "earliestMsgPublishTimeInBacklogs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadFailureTimeStamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadLedgerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadSuccessTimeStamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgChunkPublished": {
                    "type": "boolean"
                },
                "msgDropRate": {
                    "format": "double",
                    "type": "number"
                },
                "msgInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "nonContiguousDeletedMessagesRanges": {
                    "format": "int32",
                    "type": "integer"
                },
                "nonContiguousDeletedMessagesRangesSerializedSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "offloadedStorageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "ongoingTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "ownerBroker": {
                    "type": "string"
                },
                "publishRateLimitedTimes": {
                    "format": "int64",
                    "type": "integer"
                },
                "publishers": {
                    "items": {
                        "$ref": "#/definitions/NonPersistentPublisherStats"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "replication": {
                    "additionalProperties": {
                        "$ref": "#/definitions/NonPersistentReplicatorStats"
                    },
                    "readOnly": true,
                    "type": "object"
                },
                "storageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "subscriptions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/NonPersistentSubscriptionStats"
                    },
                    "readOnly": true,
                    "type": "object"
                },
                "topicEpoch": {
                    "format": "int64",
                    "type": "integer"
                },
                "waitingPublishers": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "OffloadPolicies": {
            "properties": {
                "fileSystemProfilePath": {
                    "type": "string"
                },
                "fileSystemURI": {
                    "type": "string"
                },
                "gcsManagedLedgerOffloadBucket": {
                    "type": "string"
                },
                "gcsManagedLedgerOffloadMaxBlockSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "gcsManagedLedgerOffloadReadBufferSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "gcsManagedLedgerOffloadRegion": {
                    "type": "string"
                },
                "gcsManagedLedgerOffloadServiceAccountKeyFile": {
                    "type": "string"
                },
                "managedLedgerOffloadBucket": {
                    "type": "string"
                },
                "managedLedgerOffloadDeletionLagInMillis": {
                    "format": "int64",
                    "type": "integer"
                },
                "managedLedgerOffloadDriver": {
                    "type": "string"
                },
                "managedLedgerOffloadMaxBlockSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerOffloadMaxThreads": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerOffloadPrefetchRounds": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerOffloadReadBufferSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerOffloadRegion": {
                    "type": "string"
                },
                "managedLedgerOffloadServiceEndpoint": {
                    "type": "string"
                },
                "managedLedgerOffloadThresholdInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "managedLedgerOffloadThresholdInSeconds": {
                    "format": "int64",
                    "type": "integer"
                },
                "managedLedgerOffloadedReadPriority": {
                    "enum": [
                        "BOOKKEEPER_FIRST",
                        "TIERED_STORAGE_FIRST"
                    ],
                    "type": "string"
                },
                "offloadersDirectory": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadBucket": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadCredentialId": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadCredentialSecret": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadMaxBlockSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "s3ManagedLedgerOffloadReadBufferSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "s3ManagedLedgerOffloadRegion": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadRole": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadRoleSessionName": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadServiceEndpoint": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OffloadPoliciesImpl": {
            "properties": {
                "fileSystemDriver": {
                    "type": "boolean"
                },
                "fileSystemProfilePath": {
                    "type": "string"
                },
                "fileSystemURI": {
                    "type": "string"
                },
                "gcsDriver": {
                    "type": "boolean"
                },
                "gcsManagedLedgerOffloadBucket": {
                    "type": "string"
                },
                "gcsManagedLedgerOffloadMaxBlockSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "gcsManagedLedgerOffloadReadBufferSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "gcsManagedLedgerOffloadRegion": {
                    "type": "string"
                },
                "gcsManagedLedgerOffloadServiceAccountKeyFile": {
                    "type": "string"
                },
                "managedLedgerExtraConfigurations": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "managedLedgerOffloadBucket": {
                    "type": "string"
                },
                "managedLedgerOffloadDeletionLagInMillis": {
                    "format": "int64",
                    "type": "integer"
                },
                "managedLedgerOffloadDriver": {
                    "type": "string"
                },
                "managedLedgerOffloadMaxBlockSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerOffloadMaxThreads": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerOffloadPrefetchRounds": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerOffloadReadBufferSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerOffloadRegion": {
                    "type": "string"
                },
                "managedLedgerOffloadServiceEndpoint": {
                    "type": "string"
                },
                "managedLedgerOffloadThresholdInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "managedLedgerOffloadThresholdInSeconds": {
                    "format": "int64",
                    "type": "integer"
                },
                "managedLedgerOffloadedReadPriority": {
                    "enum": [
                        "BOOKKEEPER_FIRST",
                        "TIERED_STORAGE_FIRST"
                    ],
                    "type": "string"
                },
                "offloadersDirectory": {
                    "type": "string"
                },
                "s3Driver": {
                    "type": "boolean"
                },
                "s3ManagedLedgerOffloadBucket": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadCredentialId": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadCredentialSecret": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadMaxBlockSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "s3ManagedLedgerOffloadReadBufferSizeInBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "s3ManagedLedgerOffloadRegion": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadRole": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadRoleSessionName": {
                    "type": "string"
                },
                "s3ManagedLedgerOffloadServiceEndpoint": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "OutputStream": {
            "type": "object"
        },
        "PartitionedManagedLedgerInfo": {
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "cursors": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CursorInfo"
                    },
                    "type": "object"
                },
                "ledgers": {
                    "items": {
                        "$ref": "#/definitions/LedgerInfo"
                    },
                    "type": "array"
                },
                "modificationDate": {
                    "type": "string"
                },
                "partitions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ManagedLedgerInfo"
                    },
                    "type": "object"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "terminatedPosition": {
                    "$ref": "#/definitions/PositionInfo"
                },
                "version": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PartitionedTopicInternalStats": {
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/PartitionedTopicMetadata"
                },
                "partitions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PersistentTopicInternalStats"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PartitionedTopicMetadata": {
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "partitions": {
                    "format": "int32",
                    "type": "integer"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PartitionedTopicStatsImpl": {
            "properties": {
                "abortedTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "averageMsgSize": {
                    "format": "double",
                    "type": "number"
                },
                "backlogSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "committedTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "compaction": {
                    "$ref": "#/definitions/CompactionStatsImpl"
                },
                "deduplicationStatus": {
                    "type": "string"
                },
                "delayedMessageIndexSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "earliestMsgPublishTimeInBacklogs": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadFailureTimeStamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadLedgerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastOffloadSuccessTimeStamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "metadata": {
                    "$ref": "#/definitions/PartitionedTopicMetadata"
                },
                "msgChunkPublished": {
                    "type": "boolean"
                },
                "msgInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "nonContiguousDeletedMessagesRanges": {
                    "format": "int32",
                    "type": "integer"
                },
                "nonContiguousDeletedMessagesRangesSerializedSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "offloadedStorageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "ongoingTxnCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "ownerBroker": {
                    "type": "string"
                },
                "partitions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/TopicStats"
                    },
                    "type": "object"
                },
                "publishRateLimitedTimes": {
                    "format": "int64",
                    "type": "integer"
                },
                "publishers": {
                    "items": {
                        "$ref": "#/definitions/PublisherStats"
                    },
                    "type": "array"
                },
                "replication": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ReplicatorStats"
                    },
                    "type": "object"
                },
                "storageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "subscriptions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/SubscriptionStats"
                    },
                    "type": "object"
                },
                "topicEpoch": {
                    "format": "int64",
                    "type": "integer"
                },
                "waitingPublishers": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PendingBookieOpsStats": {
            "properties": {
                "cursorLedgerCloseOp": {
                    "format": "int64",
                    "type": "integer"
                },
                "cursorLedgerCreateOp": {
                    "format": "int64",
                    "type": "integer"
                },
                "cursorLedgerDeleteOp": {
                    "format": "int64",
                    "type": "integer"
                },
                "cursorLedgerOpenOp": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataLedgerCloseOp": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataLedgerCreateOp": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataLedgerDeleteOp": {
                    "format": "int64",
                    "type": "integer"
                },
                "dataLedgerOpenOp": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PersistencePolicies": {
            "properties": {
                "bookkeeperAckQuorum": {
                    "format": "int32",
                    "type": "integer"
                },
                "bookkeeperEnsemble": {
                    "format": "int32",
                    "type": "integer"
                },
                "bookkeeperWriteQuorum": {
                    "format": "int32",
                    "type": "integer"
                },
                "managedLedgerMaxMarkDeleteRate": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PersistentOfflineTopicStats": {
            "properties": {
                "brokerName": {
                    "type": "string"
                },
                "cursorDetails": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CursorDetails"
                    },
                    "type": "object"
                },
                "dataLedgerDetails": {
                    "items": {
                        "$ref": "#/definitions/LedgerDetails"
                    },
                    "type": "array"
                },
                "messageBacklog": {
                    "format": "int64",
                    "type": "integer"
                },
                "statGeneratedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "storageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "topicName": {
                    "type": "string"
                },
                "totalMessages": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PersistentTopicInternalStats": {
            "properties": {
                "compactedLedger": {
                    "$ref": "#/definitions/LedgerInfo"
                },
                "currentLedgerEntries": {
                    "format": "int64",
                    "type": "integer"
                },
                "currentLedgerSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "cursors": {
                    "additionalProperties": {
                        "$ref": "#/definitions/CursorStats"
                    },
                    "type": "object"
                },
                "entriesAddedCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastConfirmedEntry": {
                    "type": "string"
                },
                "lastLedgerCreatedTimestamp": {
                    "type": "string"
                },
                "lastLedgerCreationFailureTimestamp": {
                    "type": "string"
                },
                "ledgers": {
                    "items": {
                        "$ref": "#/definitions/LedgerInfo"
                    },
                    "type": "array"
                },
                "numberOfEntries": {
                    "format": "int64",
                    "type": "integer"
                },
                "pendingAddEntriesCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "schemaLedgers": {
                    "items": {
                        "$ref": "#/definitions/LedgerInfo"
                    },
                    "type": "array"
                },
                "state": {
                    "type": "string"
                },
                "totalSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "waitingCursorsCount": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PersistentTopicStats": {
            "properties": {
                "averageMsgSize": {
                    "format": "double",
                    "type": "number"
                },
                "backlogSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "compaction": {
                    "$ref": "#/definitions/CompactionStats"
                },
                "deduplicationStatus": {
                    "type": "string"
                },
                "delayedMessageIndexSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "earliestMsgPublishTimeInBacklogs": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgChunkPublished": {
                    "type": "boolean"
                },
                "msgInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "nonContiguousDeletedMessagesRanges": {
                    "format": "int32",
                    "type": "integer"
                },
                "nonContiguousDeletedMessagesRangesSerializedSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "offloadedStorageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "ownerBroker": {
                    "type": "string"
                },
                "publishers": {
                    "items": {
                        "$ref": "#/definitions/PublisherStats"
                    },
                    "type": "array"
                },
                "replication": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ReplicatorStats"
                    },
                    "type": "object"
                },
                "storageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "subscriptions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/SubscriptionStats"
                    },
                    "type": "object"
                },
                "topicEpoch": {
                    "format": "int64",
                    "type": "integer"
                },
                "waitingPublishers": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Policies": {
            "properties": {
                "auth_policies": {
                    "$ref": "#/definitions/AuthPolicies"
                },
                "autoSubscriptionCreationOverride": {
                    "$ref": "#/definitions/AutoSubscriptionCreationOverride"
                },
                "autoTopicCreationOverride": {
                    "$ref": "#/definitions/AutoTopicCreationOverride"
                },
                "backlog_quota_map": {
                    "additionalProperties": {
                        "$ref": "#/definitions/BacklogQuota"
                    },
                    "type": "object"
                },
                "bundles": {
                    "$ref": "#/definitions/BundlesData"
                },
                "clusterDispatchRate": {
                    "additionalProperties": {
                        "$ref": "#/definitions/DispatchRateImpl"
                    },
                    "type": "object"
                },
                "clusterSubscribeRate": {
                    "additionalProperties": {
                        "$ref": "#/definitions/SubscribeRate"
                    },
                    "type": "object"
                },
                "compaction_threshold": {
                    "format": "int64",
                    "type": "integer"
                },
                "deduplicationEnabled": {
                    "type": "boolean"
                },
                "deduplicationSnapshotIntervalSeconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "delayed_delivery_policies": {
                    "$ref": "#/definitions/DelayedDeliveryPolicies"
                },
                "deleted": {
                    "type": "boolean"
                },
                "encryption_required": {
                    "type": "boolean"
                },
                "entryFilters": {
                    "$ref": "#/definitions/EntryFilters"
                },
                "inactive_topic_policies": {
                    "$ref": "#/definitions/InactiveTopicPolicies"
                },
                "is_allow_auto_update_schema": {
                    "type": "boolean"
                },
                "latency_stats_sample_rate": {
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "max_consumers_per_subscription": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_consumers_per_topic": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_producers_per_topic": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_subscriptions_per_topic": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_topics_per_namespace": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_unacked_messages_per_consumer": {
                    "format": "int32",
                    "type": "integer"
                },
                "max_unacked_messages_per_subscription": {
                    "format": "int32",
                    "type": "integer"
                },
                "message_ttl_in_seconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "offload_deletion_lag_ms": {
                    "format": "int64",
                    "type": "integer"
                },
                "offload_policies": {
                    "$ref": "#/definitions/OffloadPolicies"
                },
                "offload_threshold": {
                    "format": "int64",
                    "type": "integer"
                },
                "offload_threshold_in_seconds": {
                    "format": "int64",
                    "type": "integer"
                },
                "persistence": {
                    "$ref": "#/definitions/PersistencePolicies"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "publishMaxMessageRate": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PublishRate"
                    },
                    "type": "object"
                },
                "replication_clusters": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "replicatorDispatchRate": {
                    "additionalProperties": {
                        "$ref": "#/definitions/DispatchRateImpl"
                    },
                    "type": "object"
                },
                "resource_group_name": {
                    "type": "string"
                },
                "retention_policies": {
                    "$ref": "#/definitions/RetentionPolicies"
                },
                "schema_auto_update_compatibility_strategy": {
                    "enum": [
                        "AutoUpdateDisabled",
                        "Backward",
                        "Forward",
                        "Full",
                        "AlwaysCompatible",
                        "BackwardTransitive",
                        "ForwardTransitive",
                        "FullTransitive"
                    ],
                    "type": "string"
                },
                "schema_compatibility_strategy": {
                    "enum": [
                        "UNDEFINED",
                        "ALWAYS_INCOMPATIBLE",
                        "ALWAYS_COMPATIBLE",
                        "BACKWARD",
                        "FORWARD",
                        "FULL",
                        "BACKWARD_TRANSITIVE",
                        "FORWARD_TRANSITIVE",
                        "FULL_TRANSITIVE"
                    ],
                    "type": "string"
                },
                "schema_validation_enforced": {
                    "type": "boolean"
                },
                "subscriptionDispatchRate": {
                    "additionalProperties": {
                        "$ref": "#/definitions/DispatchRateImpl"
                    },
                    "type": "object"
                },
                "subscription_auth_mode": {
                    "enum": [
                        "None",
                        "Prefix"
                    ],
                    "type": "string"
                },
                "subscription_expiration_time_minutes": {
                    "format": "int32",
                    "type": "integer"
                },
                "subscription_types_enabled": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "topicDispatchRate": {
                    "additionalProperties": {
                        "$ref": "#/definitions/DispatchRateImpl"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "PoolArenaStats": {
            "properties": {
                "chunkLists": {
                    "items": {
                        "$ref": "#/definitions/PoolChunkListStats"
                    },
                    "type": "array"
                },
                "numActiveAllocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numActiveHugeAllocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numActiveNormalAllocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numActiveSmallAllocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numAllocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numChunkLists": {
                    "format": "int32",
                    "type": "integer"
                },
                "numDeallocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numHugeAllocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numHugeDeallocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numNormalAllocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numNormalDeallocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numSmallAllocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numSmallDeallocations": {
                    "format": "int64",
                    "type": "integer"
                },
                "numSmallSubpages": {
                    "format": "int32",
                    "type": "integer"
                },
                "smallSubpages": {
                    "items": {
                        "$ref": "#/definitions/PoolSubpageStats"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PoolChunkListStats": {
            "properties": {
                "chunks": {
                    "items": {
                        "$ref": "#/definitions/PoolChunkStats"
                    },
                    "type": "array"
                },
                "maxUsage": {
                    "format": "int32",
                    "type": "integer"
                },
                "minUsage": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PoolChunkStats": {
            "properties": {
                "chunkSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "freeBytes": {
                    "format": "int32",
                    "type": "integer"
                },
                "usage": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PoolSubpageStats": {
            "properties": {
                "elementSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxNumElements": {
                    "format": "int32",
                    "type": "integer"
                },
                "numAvailable": {
                    "format": "int32",
                    "type": "integer"
                },
                "pageSize": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PositionInfo": {
            "properties": {
                "entryId": {
                    "format": "int64",
                    "type": "integer"
                },
                "ledgerId": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PostSchemaPayload": {
            "properties": {
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "schema": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PostSchemaResponse": {
            "properties": {
                "version": {
                    "$ref": "#/definitions/SchemaVersion"
                }
            },
            "type": "object"
        },
        "ProcessContainerFactory": {
            "properties": {
                "extraFunctionDependenciesDir": {
                    "type": "string"
                },
                "javaInstanceJarLocation": {
                    "type": "string"
                },
                "logDirectory": {
                    "type": "string"
                },
                "pythonInstanceLocation": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublicKey": {
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "encoded": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "format": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PublishRate": {
            "properties": {
                "publishThrottlingRateInByte": {
                    "format": "int64",
                    "type": "integer"
                },
                "publishThrottlingRateInMsg": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PublisherStats": {
            "properties": {
                "accessMode": {
                    "enum": [
                        "Shared",
                        "Exclusive",
                        "ExclusiveWithFencing",
                        "WaitForExclusive"
                    ],
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "averageMsgSize": {
                    "format": "double",
                    "type": "number"
                },
                "chunkedMessageRate": {
                    "format": "double",
                    "type": "number"
                },
                "clientVersion": {
                    "type": "string"
                },
                "connectedSince": {
                    "type": "string"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "producerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "producerName": {
                    "type": "string"
                },
                "supportsPartialProducer": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "RawBookieInfo": {
            "properties": {
                "bookieId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ReplicatorStats": {
            "properties": {
                "connected": {
                    "type": "boolean"
                },
                "inboundConnectedSince": {
                    "type": "string"
                },
                "inboundConnection": {
                    "type": "string"
                },
                "msgRateExpired": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "outboundConnectedSince": {
                    "type": "string"
                },
                "outboundConnection": {
                    "type": "string"
                },
                "replicationBacklog": {
                    "format": "int64",
                    "type": "integer"
                },
                "replicationDelayInSeconds": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ResetCursorData": {
            "properties": {
                "batchIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "entryId": {
                    "format": "int64",
                    "type": "integer"
                },
                "excluded": {
                    "type": "boolean"
                },
                "ledgerId": {
                    "format": "int64",
                    "type": "integer"
                },
                "partitionIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ResourceDescription": {
            "properties": {
                "resourceUsage": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ResourceUsage"
                    },
                    "type": "object"
                },
                "usagePct": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ResourceGroup": {
            "properties": {
                "dispatchRateInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "dispatchRateInMsgs": {
                    "format": "int32",
                    "type": "integer"
                },
                "publishRateInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "publishRateInMsgs": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ResourceQuota": {
            "properties": {
                "bandwidthIn": {
                    "format": "double",
                    "type": "number"
                },
                "bandwidthOut": {
                    "format": "double",
                    "type": "number"
                },
                "dynamic": {
                    "type": "boolean"
                },
                "memory": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ResourceUnit": {
            "properties": {
                "availableResource": {
                    "$ref": "#/definitions/ResourceDescription"
                },
                "resourceId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ResourceUsage": {
            "properties": {
                "limit": {
                    "format": "double",
                    "type": "number"
                },
                "usage": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Resources": {
            "properties": {
                "cpu": {
                    "format": "double",
                    "type": "number"
                },
                "disk": {
                    "format": "int64",
                    "type": "integer"
                },
                "ram": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "RetentionPolicies": {
            "properties": {
                "retentionSizeInMB": {
                    "format": "int64",
                    "type": "integer"
                },
                "retentionTimeInMinutes": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SchemaVersion": {
            "type": "object"
        },
        "Sinks": {
            "properties": {
                "listOfConnectors": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                },
                "sinkList": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SinksWorkerService": {
            "properties": {
                "listOfConnectors": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                },
                "sinkList": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SocketAddress": {
            "type": "object"
        },
        "Sources": {
            "properties": {
                "listOfConnectors": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                },
                "sourceList": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SourcesWorkerService": {
            "properties": {
                "listOfConnectors": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                },
                "sourceList": {
                    "items": {
                        "$ref": "#/definitions/ConnectorDefinition"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SubscribeRate": {
            "properties": {
                "ratePeriodInSecond": {
                    "format": "int32",
                    "type": "integer"
                },
                "subscribeThrottlingRatePerConsumer": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SubscriptionStats": {
            "properties": {
                "activeConsumerName": {
                    "type": "string"
                },
                "allowOutOfOrderDelivery": {
                    "type": "boolean"
                },
                "backlogSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "blockedSubscriptionOnUnackedMsgs": {
                    "type": "boolean"
                },
                "bytesOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "chunkedMessageRate": {
                    "format": "int32",
                    "type": "integer"
                },
                "consumers": {
                    "items": {
                        "$ref": "#/definitions/ConsumerStats"
                    },
                    "type": "array"
                },
                "consumersAfterMarkDeletePosition": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "delayedMessageIndexSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "durable": {
                    "type": "boolean"
                },
                "earliestMsgPublishTimeInBacklog": {
                    "format": "int64",
                    "type": "integer"
                },
                "filterAcceptedMsgCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "filterProcessedMsgCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "filterRejectedMsgCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "filterRescheduledMsgCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "keySharedMode": {
                    "type": "string"
                },
                "lastAckedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastConsumedFlowTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastConsumedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastExpireTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastMarkDeleteAdvancedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "messageAckRate": {
                    "format": "double",
                    "type": "number"
                },
                "msgBacklog": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgBacklogNoDelayed": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgDelayed": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgRateExpired": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateRedeliver": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "nonContiguousDeletedMessagesRanges": {
                    "format": "int32",
                    "type": "integer"
                },
                "nonContiguousDeletedMessagesRangesSerializedSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "replicated": {
                    "type": "boolean"
                },
                "subscriptionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "totalMsgExpired": {
                    "format": "int64",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unackedMessages": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SystemResourceUsage": {
            "properties": {
                "bandwidthIn": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "bandwidthOut": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "cpu": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "directMemory": {
                    "$ref": "#/definitions/ResourceUsage"
                },
                "memory": {
                    "$ref": "#/definitions/ResourceUsage"
                }
            },
            "type": "object"
        },
        "TenantInfo": {
            "description": "Information of adminRoles and allowedClusters for tenant",
            "properties": {
                "adminRoles": {
                    "description": "Comma separated list of auth principal allowed to administrate the tenant.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "allowedClusters": {
                    "description": "Comma separated allowed clusters.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "type": "object"
        },
        "ThreadContainerFactory": {
            "properties": {
                "pulsarClientMemoryLimit": {
                    "$ref": "#/definitions/MemoryLimit"
                },
                "threadGroupName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TopicStats": {
            "properties": {
                "averageMsgSize": {
                    "format": "double",
                    "type": "number"
                },
                "backlogSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "bytesOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "compaction": {
                    "$ref": "#/definitions/CompactionStats"
                },
                "deduplicationStatus": {
                    "type": "string"
                },
                "delayedMessageIndexSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "earliestMsgPublishTimeInBacklogs": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgChunkPublished": {
                    "type": "boolean"
                },
                "msgInCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgOutCounter": {
                    "format": "int64",
                    "type": "integer"
                },
                "msgRateIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgRateOut": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputIn": {
                    "format": "double",
                    "type": "number"
                },
                "msgThroughputOut": {
                    "format": "double",
                    "type": "number"
                },
                "nonContiguousDeletedMessagesRanges": {
                    "format": "int32",
                    "type": "integer"
                },
                "nonContiguousDeletedMessagesRangesSerializedSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "offloadedStorageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "ownerBroker": {
                    "type": "string"
                },
                "publishers": {
                    "items": {
                        "$ref": "#/definitions/PublisherStats"
                    },
                    "type": "array"
                },
                "replication": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ReplicatorStats"
                    },
                    "type": "object"
                },
                "storageSize": {
                    "format": "int64",
                    "type": "integer"
                },
                "subscriptions": {
                    "additionalProperties": {
                        "$ref": "#/definitions/SubscriptionStats"
                    },
                    "type": "object"
                },
                "topicEpoch": {
                    "format": "int64",
                    "type": "integer"
                },
                "waitingPublishers": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WorkerConfig": {
            "properties": {
                "additionalEnabledConnectorUrlPatterns": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "additionalEnabledFunctionsUrlPatterns": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "additionalJavaRuntimeArguments": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "assignmentWriteMaxRetries": {
                    "format": "int32",
                    "type": "integer"
                },
                "authenticateMetricsEndpoint": {
                    "type": "boolean"
                },
                "authenticationEnabled": {
                    "type": "boolean"
                },
                "authenticationProviders": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "authorizationEnabled": {
                    "type": "boolean"
                },
                "authorizationProvider": {
                    "type": "string"
                },
                "bookkeeperClientAuthenticationParameters": {
                    "type": "string"
                },
                "bookkeeperClientAuthenticationParametersName": {
                    "type": "string"
                },
                "bookkeeperClientAuthenticationPlugin": {
                    "type": "string"
                },
                "brokerClientAuthenticationEnabled": {
                    "type": "boolean"
                },
                "brokerClientAuthenticationParameters": {
                    "type": "string"
                },
                "brokerClientAuthenticationPlugin": {
                    "type": "string"
                },
                "brokerClientTrustCertsFilePath": {
                    "type": "string"
                },
                "clientAuthenticationParameters": {
                    "type": "string"
                },
                "clientAuthenticationPlugin": {
                    "type": "string"
                },
                "clusterCoordinationTopic": {
                    "type": "string"
                },
                "clusterCoordinationTopicName": {
                    "type": "string"
                },
                "configurationMetadataStoreUrl": {
                    "type": "string"
                },
                "configurationStoreServers": {
                    "type": "string"
                },
                "connectorsDirectory": {
                    "type": "string"
                },
                "downloadDirectory": {
                    "type": "string"
                },
                "enableClassloadingOfBuiltinFiles": {
                    "type": "boolean"
                },
                "enableClassloadingOfExternalFiles": {
                    "type": "boolean"
                },
                "enableReferencingConnectorDirectoryFiles": {
                    "type": "boolean"
                },
                "enableReferencingFunctionsDirectoryFiles": {
                    "type": "boolean"
                },
                "exposeAdminClientEnabled": {
                    "type": "boolean"
                },
                "failureCheckFreqMs": {
                    "format": "int64",
                    "type": "integer"
                },
                "forwardSourceMessageProperty": {
                    "type": "boolean"
                },
                "functionAssignmentTopic": {
                    "type": "string"
                },
                "functionAssignmentTopicName": {
                    "type": "string"
                },
                "functionAuthProviderClassName": {
                    "type": "string"
                },
                "functionInstanceMaxResources": {
                    "$ref": "#/definitions/Resources"
                },
                "functionInstanceMinResources": {
                    "$ref": "#/definitions/Resources"
                },
                "functionInstanceResourceChangeInLockStep": {
                    "type": "boolean"
                },
                "functionInstanceResourceGranularities": {
                    "$ref": "#/definitions/Resources"
                },
                "functionMetadataTopic": {
                    "type": "string"
                },
                "functionMetadataTopicName": {
                    "type": "string"
                },
                "functionRuntimeFactoryClassName": {
                    "type": "string"
                },
                "functionRuntimeFactoryConfigs": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "functionWebServiceUrl": {
                    "type": "string"
                },
                "functionsDirectory": {
                    "type": "string"
                },
                "functionsWorkerEnablePackageManagement": {
                    "type": "boolean"
                },
                "functionsWorkerServiceCustomConfigs": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "functionsWorkerServiceNarPackage": {
                    "type": "string"
                },
                "httpRequestsLimitEnabled": {
                    "type": "boolean"
                },
                "httpRequestsMaxPerSecond": {
                    "format": "double",
                    "type": "number"
                },
                "httpServerAcceptQueueSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "httpServerThreadPoolQueueSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "includeStandardPrometheusMetrics": {
                    "type": "boolean"
                },
                "initialBrokerReconnectMaxRetries": {
                    "format": "int32",
                    "type": "integer"
                },
                "initializedDlogMetadata": {
                    "type": "boolean"
                },
                "instanceLivenessCheckFreqMs": {
                    "format": "int64",
                    "type": "integer"
                },
                "jvmGCMetricsLoggerClassName": {
                    "type": "string"
                },
                "kinitCommand": {
                    "type": "string"
                },
                "kubernetesContainerFactory": {
                    "$ref": "#/definitions/KubernetesContainerFactory"
                },
                "maxConcurrentHttpRequests": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxHttpServerConnections": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxPendingAsyncRequests": {
                    "format": "int32",
                    "type": "integer"
                },
                "metadataStoreAllowReadOnlyOperations": {
                    "type": "boolean"
                },
                "metadataStoreCacheExpirySeconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "metadataStoreOperationTimeoutSeconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "metadataStoreSessionTimeoutMillis": {
                    "format": "int64",
                    "type": "integer"
                },
                "narExtractionDirectory": {
                    "type": "string"
                },
                "numFunctionPackageReplicas": {
                    "format": "int32",
                    "type": "integer"
                },
                "numHttpServerThreads": {
                    "format": "int32",
                    "type": "integer"
                },
                "processContainerFactory": {
                    "$ref": "#/definitions/ProcessContainerFactory"
                },
                "properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "proxyRoles": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "pulsarFunctionsCluster": {
                    "type": "string"
                },
                "pulsarFunctionsNamespace": {
                    "type": "string"
                },
                "pulsarServiceUrl": {
                    "type": "string"
                },
                "pulsarWebServiceUrl": {
                    "type": "string"
                },
                "rebalanceCheckFreqSec": {
                    "format": "int64",
                    "type": "integer"
                },
                "rescheduleTimeoutMs": {
                    "format": "int64",
                    "type": "integer"
                },
                "runtimeCustomizerClassName": {
                    "type": "string"
                },
                "runtimeCustomizerConfig": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "saslJaasClientAllowedIds": {
                    "type": "string"
                },
                "saslJaasServerRoleTokenSignerSecretPath": {
                    "type": "string"
                },
                "saslJaasServerSectionName": {
                    "type": "string"
                },
                "schedulerClassName": {
                    "type": "string"
                },
                "secretsProviderConfiguratorClassName": {
                    "type": "string"
                },
                "secretsProviderConfiguratorConfig": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "stateStorageProviderImplementation": {
                    "type": "string"
                },
                "stateStorageServiceUrl": {
                    "type": "string"
                },
                "superUserRoles": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "threadContainerFactory": {
                    "$ref": "#/definitions/ThreadContainerFactory"
                },
                "tlsAllowInsecureConnection": {
                    "type": "boolean"
                },
                "tlsCertRefreshCheckDurationSec": {
                    "format": "int64",
                    "type": "integer"
                },
                "tlsCertificateFilePath": {
                    "type": "string"
                },
                "tlsEnableHostnameVerification": {
                    "type": "boolean"
                },
                "tlsEnabled": {
                    "type": "boolean"
                },
                "tlsEnabledWithKeyStore": {
                    "type": "boolean"
                },
                "tlsKeyFilePath": {
                    "type": "string"
                },
                "tlsKeyStore": {
                    "type": "string"
                },
                "tlsKeyStorePassword": {
                    "type": "string"
                },
                "tlsKeyStoreType": {
                    "type": "string"
                },
                "tlsProvider": {
                    "type": "string"
                },
                "tlsRequireTrustedClientCertOnConnect": {
                    "type": "boolean"
                },
                "tlsTrustCertsFilePath": {
                    "type": "string"
                },
                "tlsTrustChainBytes": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "tlsTrustStore": {
                    "type": "string"
                },
                "tlsTrustStorePassword": {
                    "type": "string"
                },
                "tlsTrustStoreType": {
                    "type": "string"
                },
                "topicCompactionFrequencySec": {
                    "format": "int64",
                    "type": "integer"
                },
                "uploadBuiltinSinksSources": {
                    "type": "boolean"
                },
                "useCompactedMetadataTopic": {
                    "type": "boolean"
                },
                "useTls": {
                    "type": "boolean"
                },
                "validateConnectorConfig": {
                    "type": "boolean"
                },
                "webServiceTlsCiphers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "webServiceTlsProtocols": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "workerHostname": {
                    "type": "string"
                },
                "workerId": {
                    "type": "string"
                },
                "workerListProbeIntervalSec": {
                    "format": "int32",
                    "type": "integer"
                },
                "workerPort": {
                    "format": "int32",
                    "type": "integer"
                },
                "workerPortTls": {
                    "format": "int32",
                    "type": "integer"
                },
                "workerWebAddress": {
                    "type": "string"
                },
                "workerWebAddressTls": {
                    "type": "string"
                },
                "zooKeeperAllowReadOnlyOperations": {
                    "type": "boolean"
                },
                "zooKeeperCacheExpirySeconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "zooKeeperOperationTimeoutSeconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "zooKeeperSessionTimeoutMillis": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "WorkerFunctionInstanceStats": {
            "properties": {
                "metrics": {
                    "$ref": "#/definitions/FunctionInstanceStatsData"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkerInfo": {
            "properties": {
                "port": {
                    "format": "int32",
                    "type": "integer"
                },
                "workerHostname": {
                    "type": "string"
                },
                "workerId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "WorkerService": {
            "properties": {
                "functions": {
                    "$ref": "#/definitions/FunctionsWorkerService"
                },
                "functionsV2": {
                    "$ref": "#/definitions/FunctionsV2WorkerService"
                },
                "initialized": {
                    "type": "boolean"
                },
                "sinks": {
                    "$ref": "#/definitions/SinksWorkerService"
                },
                "sources": {
                    "$ref": "#/definitions/SourcesWorkerService"
                },
                "workerConfig": {
                    "$ref": "#/definitions/WorkerConfig"
                },
                "workers": {
                    "$ref": "#/definitions/WorkersWorkerService"
                }
            },
            "type": "object"
        },
        "Workers": {
            "type": "object"
        },
        "WorkersWorkerService": {
            "type": "object"
        }
    },
    "info": {
        "description": "This provides the REST API for admin operations",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "Pulsar Admin REST API",
        "version": "v2"
    },
    "paths": {
        "/bookies/all": {
            "get": {
                "description": "",
                "operationId": "Bookies_getAllBookies",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BookiesClusterInfo"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Gets raw information for all the bookies in the cluster",
                "tags": [
                    "bookies"
                ]
            }
        },
        "/bookies/racks-info": {
            "get": {
                "description": "",
                "operationId": "Bookies_getBookiesRackInfo",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "additionalProperties": {
                                    "$ref": "#/definitions/BookieInfo"
                                },
                                "type": "object"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Gets the rack placement information for all the bookies in the cluster",
                "tags": [
                    "bookies"
                ]
            }
        },
        "/bookies/racks-info/{bookie}": {
            "delete": {
                "description": "",
                "operationId": "Bookies_deleteBookieRackInfo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "bookie",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Removed the rack placement information for a specific bookie in the cluster",
                "tags": [
                    "bookies"
                ]
            },
            "get": {
                "description": "",
                "operationId": "Bookies_getBookieRackInfo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "bookie",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BookieInfo"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Gets the rack placement information for a specific bookie in the cluster",
                "tags": [
                    "bookies"
                ]
            },
            "post": {
                "description": "",
                "operationId": "Bookies_updateBookieRackInfo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "bookie",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Updates the rack placement information for a specific bookie in the cluster (note. bookie address format:`address:port`)",
                "tags": [
                    "bookies"
                ]
            }
        },
        "/broker-stats/allocator-stats/{allocator}": {
            "get": {
                "description": "",
                "operationId": "BrokerStatsBase_getAllocatorStats",
                "parameters": [
                    {
                        "in": "path",
                        "name": "allocator",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AllocatorStats"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get the stats for the Netty allocator. Available allocators are 'default' and 'ml-cache'",
                "tags": [
                    "broker-stats"
                ]
            }
        },
        "/broker-stats/bookieops": {
            "get": {
                "description": "",
                "operationId": "BrokerStatsBase_getPendingBookieOpsStats",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/PendingBookieOpsStats"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get pending bookie client op stats by namespace",
                "tags": [
                    "broker-stats"
                ]
            }
        },
        "/broker-stats/broker-resource-availability/{tenant}/{namespace}": {
            "get": {
                "description": "This API gives the current broker availability in percent, each resource percentage usage is calculated and thensum of all of the resource usage percent is called broker-resource-availability<br/><br/>THIS API IS ONLY FOR USE BY TESTING FOR CONFIRMING NAMESPACE ALLOCATION ALGORITHM",
                "operationId": "BrokerStats_getBrokerResourceAvailability",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/ResourceUnit"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "409": {
                        "description": "Load-manager doesn't support operation"
                    }
                },
                "summary": "Broker availability report",
                "tags": [
                    "broker-stats"
                ]
            }
        },
        "/broker-stats/load-report": {
            "get": {
                "description": "consists of topics stats & systemResourceUsage",
                "operationId": "BrokerStatsBase_getLoadReport",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoadReport"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get Load for this broker",
                "tags": [
                    "broker-stats"
                ]
            }
        },
        "/broker-stats/mbeans": {
            "get": {
                "description": "",
                "operationId": "BrokerStatsBase_getMBeans",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Metrics"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get all the mbean details of this broker JVM",
                "tags": [
                    "broker-stats"
                ]
            }
        },
        "/broker-stats/metrics": {
            "get": {
                "description": "Requested should be executed by Monitoring agent on each broker to fetch the metrics",
                "operationId": "BrokerStatsBase_getMetrics",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Metrics"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Gets the metrics for Monitoring",
                "tags": [
                    "broker-stats"
                ]
            }
        },
        "/broker-stats/topics": {
            "get": {
                "description": "",
                "operationId": "BrokerStats_getTopics2",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/OutputStream"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get all the topic stats by namespace",
                "tags": [
                    "broker-stats"
                ]
            }
        },
        "/brokers": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_getActiveBrokers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "403": {
                        "description": "This operation requires super-user access"
                    }
                },
                "summary": "Get the list of active brokers (broker ids) in the local cluster.If authorization is not enabled",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/backlog-quota-check": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_backlogQuotaCheck",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Everything is OK"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "An REST endpoint to trigger backlogQuotaCheck",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/configuration": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_getDynamicConfigurationName",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "You don't have admin permission to get configuration"
                    }
                },
                "summary": "Get all updatable dynamic configurations's name",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/configuration/runtime": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_getRuntimeConfiguration",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get all runtime configurations. This operation requires Pulsar super-user privileges.",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/configuration/values": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_getAllDynamicConfigurations",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "You don't have admin permission to view configuration"
                    },
                    "404": {
                        "description": "Configuration not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get value of all dynamic configurations' value overridden on local config",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/configuration/{configName}": {
            "delete": {
                "description": "",
                "operationId": "BrokersBase_deleteDynamicConfiguration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "configName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Service configuration updated successfully"
                    },
                    "403": {
                        "description": "You don't have admin permission to update service-configuration"
                    },
                    "412": {
                        "description": "Invalid dynamic-config value"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete dynamic ServiceConfiguration into metadata only. This operation requires Pulsar super-user privileges.",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/configuration/{configName}/{configValue}": {
            "post": {
                "description": "",
                "operationId": "BrokersBase_updateDynamicConfiguration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "configName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "configValue",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Service configuration updated successfully"
                    },
                    "403": {
                        "description": "You don't have admin permission to update service-configuration"
                    },
                    "404": {
                        "description": "Configuration not found"
                    },
                    "412": {
                        "description": "Invalid dynamic-config value"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Update dynamic serviceconfiguration into zk only. This operation requires Pulsar super-user privileges.",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/health": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_healthCheck",
                "parameters": [
                    {
                        "enum": [
                            "V1",
                            "V2"
                        ],
                        "in": "query",
                        "name": "topicVersion",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Everything is OK"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Cluster doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Run a healthCheck against the broker",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/internal-configuration": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_getInternalConfigurationData",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InternalConfigurationData"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get the internal configuration data",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/leaderBroker": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_getLeaderBroker",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BrokerInfo"
                        }
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "403": {
                        "description": "This operation requires super-user access"
                    },
                    "404": {
                        "description": "Leader broker not found"
                    }
                },
                "summary": "Get the information of the leader broker.",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/ready": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_isReady",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Broker is ready"
                    },
                    "500": {
                        "description": "Broker is not ready"
                    }
                },
                "summary": "Check if the broker is fully initialized",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/shutdown": {
            "post": {
                "description": "",
                "operationId": "BrokersBase_shutDownBrokerGracefully",
                "parameters": [
                    {
                        "description": "if the value absent(value=0) means no concurrent limitation.",
                        "format": "int32",
                        "in": "query",
                        "name": "maxConcurrentUnloadPerSec",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": true,
                        "in": "query",
                        "name": "forcedTerminateTopic",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Execute shutdown command successfully"
                    },
                    "403": {
                        "description": "You don't have admin permission to update service-configuration"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Shutdown broker gracefully.",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/version": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_version",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Everything is OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get version of current broker",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/{clusterName}/{brokerId}/ownedNamespaces": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_getOwnedNamespaces",
                "parameters": [
                    {
                        "in": "path",
                        "name": "clusterName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "brokerId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/NamespaceOwnershipStatus"
                            },
                            "type": "object"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the cluster"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Cluster doesn't exist"
                    }
                },
                "summary": "Get the list of namespaces served by the specific broker id",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/brokers/{cluster}": {
            "get": {
                "description": "",
                "operationId": "BrokersBase_getActiveBrokers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve this cluster"
                    },
                    "401": {
                        "description": "Authentication required"
                    },
                    "403": {
                        "description": "This operation requires super-user access"
                    },
                    "404": {
                        "description": "Cluster does not exist: cluster={clustername}"
                    }
                },
                "summary": "Get the list of active brokers (broker ids) in the cluster.If authorization is not enabled, any cluster name is valid.",
                "tags": [
                    "brokers"
                ]
            }
        },
        "/clusters": {
            "get": {
                "description": "",
                "operationId": "ClustersBase_getClusters",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Return a list of clusters.",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Get the list of all the Pulsar clusters.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}": {
            "delete": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_deleteCluster",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Cluster has been deleted."
                    },
                    "403": {
                        "description": "Don't have admin permission or policies are read-only."
                    },
                    "404": {
                        "description": "Cluster doesn't exist."
                    },
                    "412": {
                        "description": "Cluster is not empty."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Delete an existing cluster.",
                "tags": [
                    "clusters"
                ]
            },
            "get": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_getCluster",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Return the cluster data.",
                        "schema": {
                            "$ref": "#/definitions/ClusterData"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission."
                    },
                    "404": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Get the configuration for the specified cluster.",
                "tags": [
                    "clusters"
                ]
            },
            "post": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_updateCluster",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The cluster data",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterData"
                        },
                        "x-examples": {
                            "application/json": "{\n   \"serviceUrl\": \"http://pulsar.example.com:8080\",\n   \"brokerServiceUrl\": \"pulsar://pulsar.example.com:6651\"\n}"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Cluster has been updated."
                    },
                    "400": {
                        "description": "Bad request parameter."
                    },
                    "403": {
                        "description": "Don't have admin permission or policies are read-only."
                    },
                    "404": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Update the configuration for a cluster.",
                "tags": [
                    "clusters"
                ]
            },
            "put": {
                "description": "This operation requires Pulsar superuser privileges, and the name cannot contain the '/' characters.",
                "operationId": "ClustersBase_createCluster",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The cluster data",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterData"
                        },
                        "x-examples": {
                            "application/json": "{\n   \"serviceUrl\": \"http://pulsar.example.com:8080\",\n   \"brokerServiceUrl\": \"pulsar://pulsar.example.com:6651\",\n}"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Cluster has been created."
                    },
                    "400": {
                        "description": "Bad request parameter."
                    },
                    "403": {
                        "description": "You don't have admin permission to create the cluster."
                    },
                    "409": {
                        "description": "Cluster already exists."
                    },
                    "412": {
                        "description": "Cluster name is not valid."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Create a new cluster.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}/failureDomains": {
            "get": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_getFailureDomains",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/FailureDomain"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get the cluster failure domains.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}/failureDomains/{domainName}": {
            "delete": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_deleteFailureDomain",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The failure domain name",
                        "in": "path",
                        "name": "domainName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission or policy is read only"
                    },
                    "404": {
                        "description": "FailureDomain doesn't exist"
                    },
                    "412": {
                        "description": "Cluster doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete the failure domain of the cluster",
                "tags": [
                    "clusters"
                ]
            },
            "get": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_getDomain",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The failure domain name",
                        "in": "path",
                        "name": "domainName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/FailureDomain"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "FailureDomain doesn't exist"
                    },
                    "412": {
                        "description": "Cluster doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get a domain in a cluster",
                "tags": [
                    "clusters"
                ]
            },
            "post": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_setFailureDomain",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The failure domain name",
                        "in": "path",
                        "name": "domainName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The configuration data of a failure domain",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FailureDomain"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission."
                    },
                    "404": {
                        "description": "Failure domain doesn't exist."
                    },
                    "409": {
                        "description": "Broker already exists in another domain."
                    },
                    "412": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Set the failure domain of the cluster.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}/migrate": {
            "post": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_updateClusterMigration",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Is cluster migrated",
                        "in": "query",
                        "name": "migrated",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "description": "The cluster url data",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClusterUrl"
                        },
                        "x-examples": {
                            "application/json": "{\n   \"serviceUrl\": \"http://pulsar.example.com:8080\",\n   \"brokerServiceUrl\": \"pulsar://pulsar.example.com:6651\"\n}"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Cluster has been updated."
                    },
                    "400": {
                        "description": "Cluster url must not be empty."
                    },
                    "403": {
                        "description": "Don't have admin permission or policies are read-only."
                    },
                    "404": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Update the configuration for a cluster migration.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}/namespaceIsolationPolicies": {
            "get": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_getNamespaceIsolationPolicies",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/NamespaceIsolationData"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission."
                    },
                    "404": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Get the namespace isolation policies assigned to the cluster.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}/namespaceIsolationPolicies/brokers": {
            "get": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_getBrokersWithNamespaceIsolationPolicy",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BrokerNamespaceIsolationData"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission."
                    },
                    "404": {
                        "description": "Namespace-isolation policies not found."
                    },
                    "412": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Get list of brokers with namespace-isolation policies attached to them.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}/namespaceIsolationPolicies/brokers/{broker}": {
            "get": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_getBrokerWithNamespaceIsolationPolicy",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The broker name (<broker-hostname>:<web-service-port>)",
                        "in": "path",
                        "name": "broker",
                        "required": true,
                        "type": "string",
                        "x-example": "broker1:8080"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BrokerNamespaceIsolationData"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission."
                    },
                    "404": {
                        "description": "Namespace-isolation policies/ Broker not found."
                    },
                    "412": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Get a broker with namespace-isolation policies attached to it.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}/namespaceIsolationPolicies/{policyName}": {
            "delete": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_deleteNamespaceIsolationPolicy",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace isolation policy name",
                        "in": "path",
                        "name": "policyName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission or policies are read only."
                    },
                    "404": {
                        "description": "Namespace isolation policy doesn't exist."
                    },
                    "412": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Delete namespace isolation policy.",
                "tags": [
                    "clusters"
                ]
            },
            "get": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_getNamespaceIsolationPolicy",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of the namespace isolation policy",
                        "in": "path",
                        "name": "policyName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NamespaceIsolationData"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission."
                    },
                    "404": {
                        "description": "Policy doesn't exist."
                    },
                    "412": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Get the single namespace isolation policy assigned to the cluster.",
                "tags": [
                    "clusters"
                ]
            },
            "post": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_setNamespaceIsolationPolicy",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace isolation policy name",
                        "in": "path",
                        "name": "policyName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace isolation policy data",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NamespaceIsolationData"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Namespace isolation policy data is invalid."
                    },
                    "403": {
                        "description": "Don't have admin permission or policies are read-only."
                    },
                    "404": {
                        "description": "Namespace isolation policy doesn't exist."
                    },
                    "412": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Set namespace isolation policy.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/clusters/{cluster}/peers": {
            "get": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_getPeerCluster",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission."
                    },
                    "404": {
                        "description": "Cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Get the peer-cluster data for the specified cluster.",
                "tags": [
                    "clusters"
                ]
            },
            "post": {
                "description": "This operation requires Pulsar superuser privileges.",
                "operationId": "ClustersBase_setPeerClusterNames",
                "parameters": [
                    {
                        "description": "The cluster name",
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The list of peer cluster names",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "x-examples": {
                            "application/json": "[\n   \"cluster-a\",\n   \"cluster-b\"\n]"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Cluster has been updated."
                    },
                    "403": {
                        "description": "Don't have admin permission or policies are read-only."
                    },
                    "404": {
                        "description": "Cluster doesn't exist."
                    },
                    "412": {
                        "description": "Peer cluster doesn't exist."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "summary": "Update peer-cluster-list for a cluster.",
                "tags": [
                    "clusters"
                ]
            }
        },
        "/namespaces/{cluster}/antiAffinity/{group}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getAntiAffinityNamespaces",
                "parameters": [
                    {
                        "in": "path",
                        "name": "cluster",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "group",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tenant",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "412": {
                        "description": "Cluster not exist/Anti-affinity group can't be empty."
                    }
                },
                "summary": "Get all namespaces that are grouped by given anti-affinity group in a given cluster. api can be only accessed by admin of any of the existing tenant",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{property}/{namespace}/persistence/bookieAffinity": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_deleteBookieAffinityGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "property",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Delete the bookie-affinity-group from namespace-local policy.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getBookieAffinityGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "property",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BookieAffinityGroupData"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get the bookie-affinity-group from namespace-local policy.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getTenantNamespaces",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant doesn't exist"
                    }
                },
                "summary": "Get the list of all the namespaces for a certain tenant.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_deleteNamespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "405": {
                        "description": "Broker doesn't allow forced deletion of namespaces"
                    },
                    "409": {
                        "description": "Namespace is not empty"
                    }
                },
                "summary": "Delete a namespace and all the topics under it.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Policies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Get the dump all the policies specified for a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_createNamespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Policies for the namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Policies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster doesn't exist"
                    },
                    "409": {
                        "description": "Namespace already exists"
                    },
                    "412": {
                        "description": "Namespace name is not valid"
                    }
                },
                "summary": "Creates a new namespace with the specified policies",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/antiAffinity": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeNamespaceAntiAffinityGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove anti-affinity group of a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getNamespaceAntiAffinityGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Get anti-affinity group of a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setNamespaceAntiAffinityGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Anti-affinity group for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Invalid antiAffinityGroup"
                    }
                },
                "summary": "Set anti-affinity group for a namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/autoSubscriptionCreation": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Remove override of broker's allowAutoSubscriptionCreation in a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Get autoSubscriptionCreation info in a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Settings for automatic subscription creation",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AutoSubscriptionCreationOverride"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid autoSubscriptionCreation override"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Override broker's allowAutoSubscriptionCreation setting for a namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/autoTopicCreation": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeAutoTopicCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Remove override of broker's allowAutoTopicCreation in a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getAutoTopicCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Get autoTopicCreation info in a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setAutoTopicCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Settings for automatic topic creation",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AutoTopicCreationOverride"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid autoTopicCreation override"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "406": {
                        "description": "The number of partitions should be less than or equal to maxNumPartitionsPerPartitionedTopic"
                    }
                },
                "summary": "Override broker's allowAutoTopicCreation setting for a namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/backlogQuota": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeBacklogQuota",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "destination_storage",
                            "message_age"
                        ],
                        "in": "query",
                        "name": "backlogQuotaType",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove a backlog quota policy from a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setBacklogQuota",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "destination_storage",
                            "message_age"
                        ],
                        "in": "query",
                        "name": "backlogQuotaType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Backlog quota for all topics of the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BacklogQuota"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Specified backlog quota exceeds retention quota. Increase retention quota and retry request"
                    }
                },
                "summary": " Set a backlog quota for all the topics on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/backlogQuotaMap": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getBacklogQuotaMap",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get backlog quota map on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/bundles": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getBundlesData",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Namespace is not setup to split in bundles"
                    }
                },
                "summary": "Get the bundles split data.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/clearBacklog": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_clearNamespaceBacklog",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Clear backlog for all topics on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/clearBacklog/{subscription}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_clearNamespaceBacklogForSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subscription",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Clear backlog for a given subscription on all topics on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/compactionThreshold": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "The backlog size is compared to the threshold periodically. A threshold of 0 disabled automatic compaction",
                "operationId": "Namespaces_deleteCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Delete maximum number of uncompacted bytes in a topic before compaction is triggered.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "The backlog size is compared to the threshold periodically. A threshold of 0 disabled automatic compaction",
                "operationId": "Namespaces_getCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    }
                },
                "summary": "Maximum number of uncompacted bytes in topics before compaction is triggered.",
                "tags": [
                    "namespaces"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "The backlog size is compared to the threshold periodically. A threshold of 0 disabled automatic compaction",
                "operationId": "Namespaces_setCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Maximum number of uncompacted bytes in a topic of the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "compactionThreshold value is not valid"
                    }
                },
                "summary": "Set maximum number of uncompacted bytes in a topic before compaction is triggered.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/deduplication": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Remove broker side deduplication for all topics in a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Get broker side deduplication for all topics in a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_modifyDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Flag for disabling or enabling broker side deduplication for all topics in the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Enable or disable broker side deduplication for all topics in a namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/deduplicationSnapshotInterval": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getDeduplicationSnapshotInterval",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get deduplicationSnapshotInterval config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setDeduplicationSnapshotInterval",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Interval to take deduplication snapshot per topic",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Set deduplicationSnapshotInterval config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/delayedDelivery": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Delete delayed delivery messages config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get delayed delivery messages config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Delayed delivery policies for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DelayedDeliveryPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Set delayed delivery messages config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/dispatchRate": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_deleteDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Delete dispatch-rate throttling for all topics of the namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get dispatch-rate configured for the namespace, null means dispatch-rate not configured, -1 means msg-dispatch-rate or byte-dispatch-rate not configured in dispatch-rate yet",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Dispatch rate for all topics of the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Set dispatch-rate throttling for all topics of the namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/encryptionRequired": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getEncryptionRequired",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Get message encryption required status in a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_modifyEncryptionRequired",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Flag defining if message encryption is required",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Message encryption is required or not for all topics in a namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/entryFilters": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeNamespaceEntryFilters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Invalid TTL"
                    }
                },
                "summary": "Remove entry filters for namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getEntryFiltersPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get maxConsumersPerSubscription config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setEntryFiltersPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "entry filters",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntryFilters"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Specified entry filters are not valid"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Set entry filters for namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/inactiveTopicPolicies": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove inactive topic policies from a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get inactive topic policies config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Inactive topic policies for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InactiveTopicPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Set inactive topic policies config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/isAllowAutoUpdateSchema": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getIsAllowAutoUpdateSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "The flag of whether allow auto update schema",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setIsAllowAutoUpdateSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Flag of whether to allow auto update schema",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Update flag of whether allow auto update schema",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/maxConsumersPerSubscription": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "maxConsumersPerSubscription value is not valid"
                    }
                },
                "summary": " Set maxConsumersPerSubscription configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get maxConsumersPerSubscription config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Number of maximum consumers per subscription",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "maxConsumersPerSubscription value is not valid"
                    }
                },
                "summary": " Set maxConsumersPerSubscription configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/maxConsumersPerTopic": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeMaxConsumersPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxConsumersPerTopic configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getMaxConsumersPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get maxConsumersPerTopic config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setMaxConsumersPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Number of maximum consumers per topic",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "maxConsumersPerTopic value is not valid"
                    }
                },
                "summary": " Set maxConsumersPerTopic configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/maxProducersPerTopic": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeMaxProducersPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxProducersPerTopic configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getMaxProducersPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get maxProducersPerTopic config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setMaxProducersPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Number of maximum producers per topic",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "maxProducersPerTopic value is not valid"
                    }
                },
                "summary": " Set maxProducersPerTopic configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/maxSubscriptionsPerTopic": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxSubscriptionsPerTopic configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get maxSubscriptionsPerTopic config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Number of maximum subscriptions per topic",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "maxUnackedMessagesPerSubscription value is not valid"
                    }
                },
                "summary": " Set maxSubscriptionsPerTopic configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/maxTopicsPerNamespace": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Set maxTopicsPerNamespace config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getMaxTopicsPerNamespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace does not exist"
                    }
                },
                "summary": "Get maxTopicsPerNamespace config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Number of maximum topics for specific namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Set maxTopicsPerNamespace config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/maxUnackedMessagesPerConsumer": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeMaxUnackedmessagesPerConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Remove maxUnackedMessagesPerConsumer config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getMaxUnackedMessagesPerConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get maxUnackedMessagesPerConsumer config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setMaxUnackedMessagesPerConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Number of maximum unacked messages per consumer",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "maxUnackedMessagesPerConsumer value is not valid"
                    }
                },
                "summary": " Set maxConsumersPerTopic configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/maxUnackedMessagesPerSubscription": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeMaxUnackedmessagesPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Remove maxUnackedMessagesPerSubscription config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getMaxUnackedmessagesPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get maxUnackedMessagesPerSubscription config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setMaxUnackedMessagesPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Number of maximum unacked messages per subscription",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "maxUnackedMessagesPerSubscription value is not valid"
                    }
                },
                "summary": " Set maxUnackedMessagesPerSubscription configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/messageTTL": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeNamespaceMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Invalid TTL"
                    }
                },
                "summary": "Remove message TTL in seconds for namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getNamespaceMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Get the message TTL for the namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setNamespaceMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "TTL in seconds for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Invalid TTL"
                    }
                },
                "summary": "Set message TTL in seconds for namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/offloadDeletionLagMs": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_clearOffloadDeletionLag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Clear the namespace configured offload deletion lag. The topics in the namespace will fallback to using the default configured deletion lag for the broker",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "A negative value denotes that deletion has been completely disabled. 'null' denotes that the topics in the namespace will fall back to the broker default for deletion lag.",
                "operationId": "Namespaces_getOffloadDeletionLag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    }
                },
                "summary": "Number of milliseconds to wait before deleting a ledger segment which has been offloaded from the Pulsar cluster's local storage (i.e. BookKeeper)",
                "tags": [
                    "namespaces"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "A negative value disables the deletion completely.",
                "operationId": "Namespaces_setOffloadDeletionLag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "New number of milliseconds to wait before deleting a ledger segment which has been offloaded",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "offloadDeletionLagMs value is not valid"
                    }
                },
                "summary": "Set number of milliseconds to wait before deleting a ledger segment which has been offloaded from the Pulsar cluster's local storage (i.e. BookKeeper)",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/offloadPolicies": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get offload configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Offload policies for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OffloadPoliciesImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "OffloadPolicies is empty or driver is not supported or bucket is not valid"
                    }
                },
                "summary": " Set offload configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/offloadThreshold": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "A negative value disables automatic offloading",
                "operationId": "Namespaces_getOffloadThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    }
                },
                "summary": "Maximum number of bytes stored on the pulsar cluster for a topic, before the broker will start offloading to longterm storage",
                "tags": [
                    "namespaces"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "-1 will revert to using the cluster default. A negative value disables automatic offloading. ",
                "operationId": "Namespaces_setOffloadThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Maximum number of bytes stored on the pulsar cluster for a topic of the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "offloadThreshold value is not valid"
                    }
                },
                "summary": "Set maximum number of bytes stored on the pulsar cluster for a topic, before the broker will start offloading to longterm storage",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/offloadThresholdInSeconds": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "A negative value disables automatic offloading",
                "operationId": "Namespaces_getOffloadThresholdInSeconds",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    }
                },
                "summary": "Maximum number of bytes stored on the pulsar cluster for a topic, before the broker will start offloading to longterm storage",
                "tags": [
                    "namespaces"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "A negative value disables automatic offloading",
                "operationId": "Namespaces_setOffloadThresholdInSeconds",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "offloadThresholdInSeconds value is not valid"
                    }
                },
                "summary": "Set maximum number of seconds stored on the pulsar cluster for a topic, before the broker will start offloading to longterm storage",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/permissions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getPermissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Namespace is not empty"
                    }
                },
                "summary": "Retrieve the permissions for a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/permissions/subscription": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getPermissionOnSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Namespace is not empty"
                    }
                },
                "summary": "Retrieve the permissions for a subscription.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/permissions/{role}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_revokePermissionsOnNamespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Revoke all permissions to a role on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_grantPermissionOnNamespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "role",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "List of permissions for the specified role",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "items": {
                                "enum": [
                                    "produce",
                                    "consume",
                                    "functions",
                                    "sources",
                                    "sinks",
                                    "packages"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "501": {
                        "description": "Authorization is not enabled"
                    }
                },
                "summary": "Grant a new permission to a role on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/persistence": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_deletePersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Delete the persistence configuration for all topics on a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getPersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get the persistence configuration for a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setPersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Persistence policies for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PersistencePolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid persistence policies"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set the persistence configuration for all the topics on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/persistence/bookieAffinity": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setBookieAffinityGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Bookie affinity group for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BookieAffinityGroupData"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set the bookie-affinity-group to namespace-persistent policy.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/properties": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_clearProperties",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Clear properties on a given namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getProperties",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Get key value pair properties for a given namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setProperties",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Key value pair properties for the namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Put key value pairs property on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/property/{key}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeProperty",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Remove property value for a given key on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getProperty",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Get property value for a given key on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/property/{key}/{value}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setProperty",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "value",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Put a key value pair property on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/removeOffloadPolicies": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "OffloadPolicies is empty or driver is not supported or bucket is not valid"
                    }
                },
                "summary": " Set offload configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/replication": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getNamespaceReplicationClusters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Namespace is not global"
                    }
                },
                "summary": "Get the replication clusters for a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setNamespaceReplicationClusters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "List of replication clusters",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Peer-cluster can't be part of replication-cluster"
                    },
                    "412": {
                        "description": "Namespace is not global or invalid cluster ids"
                    }
                },
                "summary": "Set the replication clusters for a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/replicatorDispatchRate": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Remove replicator dispatch-rate throttling for all topics of the namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get replicator dispatch-rate configured for the namespace, null means replicator dispatch-rate not configured, -1 means msg-dispatch-rate or byte-dispatch-rate not configured in dispatch-rate yet",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Replicator dispatch rate for all topics of the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Set replicator dispatch-rate throttling for all topics of the namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/resourcegroup": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeNamespaceResourceGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Invalid resourcegroup"
                    }
                },
                "summary": "Delete resourcegroup for a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getNamespaceResourceGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Get the resource group attached to the namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/resourcegroup/{resourcegroup}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setNamespaceResourceGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "resourcegroup",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Invalid resourcegroup"
                    }
                },
                "summary": "Set resourcegroup for a namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/retention": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Retention policies for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RetentionPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Retention Quota must exceed backlog quota"
                    }
                },
                "summary": " Remove retention configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get retention config on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Retention policies for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RetentionPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Retention Quota must exceed backlog quota"
                    }
                },
                "summary": " Set retention configuration on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/scanOffloadedLedgers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_scanOffloadedLedgers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    }
                },
                "summary": "Trigger the scan of offloaded Ledgers on the LedgerOffloader for the given namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/schemaAutoUpdateCompatibilityStrategy": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "The value AutoUpdateDisabled prevents producers from updating the schema.  If set to AutoUpdateDisabled, schemas must be updated through the REST api",
                "operationId": "Namespaces_getSchemaAutoUpdateCompatibilityStrategy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "enum": [
                                "AutoUpdateDisabled",
                                "Backward",
                                "Forward",
                                "Full",
                                "AlwaysCompatible",
                                "BackwardTransitive",
                                "ForwardTransitive",
                                "FullTransitive"
                            ],
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "The strategy used to check the compatibility of new schemas, provided by producers, before automatically updating the schema",
                "tags": [
                    "namespaces"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "The value AutoUpdateDisabled prevents producers from updating the schema.  If set to AutoUpdateDisabled, schemas must be updated through the REST api",
                "operationId": "Namespaces_setSchemaAutoUpdateCompatibilityStrategy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Strategy used to check the compatibility of new schemas",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Update the strategy used to check the compatibility of new schemas, provided by producers, before automatically updating the schema",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/schemaCompatibilityStrategy": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getSchemaCompatibilityStrategy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "The strategy of the namespace schema compatibility ",
                "tags": [
                    "namespaces"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setSchemaCompatibilityStrategy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Strategy used to check the compatibility of new schema",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Update the strategy used to check the compatibility of new schema",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/schemaValidationEnforced": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "If the flag is set to true, when a producer without a schema attempts to produce to a topic with schema in this namespace, the producer will be failed to connect. PLEASE be carefully on using this, since non-java clients don't support schema.if you enable this setting, it will cause non-java clients failed to produce.",
                "operationId": "Namespaces_getSchemaValidtionEnforced",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenants or Namespace doesn't exist"
                    }
                },
                "summary": "Get schema validation enforced flag for namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "If the flag is set to true, when a producer without a schema attempts to produce to a topic with schema in this namespace, the producer will be failed to connect. PLEASE be carefully on using this, since non-java clients don't support schema.if you enable this setting, it will cause non-java clients failed to produce.",
                "operationId": "Namespaces_setSchemaValidationEnforced",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Flag of whether validation is enforced on the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or Namespace doesn't exist"
                    },
                    "412": {
                        "description": "schemaValidationEnforced value is not valid"
                    }
                },
                "summary": "Set schema validation enforced flag on namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/subscribeRate": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_deleteSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Delete subscribe-rate throttling for all topics of the namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get subscribe-rate configured for the namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscribe rate for all topics of the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscribeRate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Set subscribe-rate throttling for all topics of the namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/subscriptionAuthMode": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getSubscriptionAuthMode",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    }
                },
                "summary": "Get subscription auth mode in a namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setSubscriptionAuthMode",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription auth mode for all topics of the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": " Set a subscription auth mode for all the topics on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/subscriptionDispatchRate": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_deleteSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Delete Subscription dispatch-rate throttling for all topics of the namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get subscription dispatch-rate configured for the namespace, null means subscription dispatch-rate not configured, -1 means msg-dispatch-rate or byte-dispatch-rate not configured in dispatch-rate yet",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription dispatch rate for all topics of the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Set Subscription dispatch-rate throttling for all topics of the namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/subscriptionExpirationTime": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeSubscriptionExpirationTime",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Remove subscription expiration time for namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getSubscriptionExpirationTime",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Get the subscription expiration time for the namespace",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setSubscriptionExpirationTime",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Expiration time in minutes for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Invalid expiration time"
                    }
                },
                "summary": "Set subscription expiration time in minutes for namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/subscriptionTypesEnabled": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_removeSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or Namespace does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": " Remove subscription types enabled on a namespace.",
                "tags": [
                    "namespaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "The set of whether allow subscription types",
                "tags": [
                    "namespaces"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_setSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Set of whether allow subscription types",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "enum": [
                                    "Exclusive",
                                    "Shared",
                                    "Failover",
                                    "Key_Shared"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Update set of whether allow share sub type",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/topics": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getTopics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "PERSISTENT",
                        "enum": [
                            "PERSISTENT",
                            "NON_PERSISTENT",
                            "ALL"
                        ],
                        "in": "query",
                        "name": "mode",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Include system topic",
                        "in": "query",
                        "name": "includeSystemTopic",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    }
                },
                "summary": "Get the list of all the topics under a certain namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/unload": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "Unload an active namespace from the current broker serving it. Performing this operation will let the brokerremoves all producers, consumers, and connections using this namespace, and close all topics (includingtheir persistent store). During that operation, the namespace is marked as tentatively unavailable until thebroker completes the unloading action. This operation requires strictly super user privileges, since it wouldresult in non-persistent message loss and unexpected connection closure to the clients.",
                "operationId": "Namespaces_unloadNamespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    },
                    "412": {
                        "description": "Namespace is already unloaded or Namespace has bundles activated"
                    }
                },
                "summary": "Unload namespace",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/unsubscribe/{subscription}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_unsubscribeNamespace",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subscription",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin or operate permission on the namespacen"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Unsubscribes the given subscription on all topics on a namespace.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/{bundle}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_deleteNamespaceBundle",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Namespace bundle is not empty"
                    }
                },
                "summary": "Delete a namespace bundle and all the topics under it.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/{bundle}/clearBacklog": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_clearNamespaceBundleBacklog",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Clear backlog for all topics on a namespace bundle.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/{bundle}/clearBacklog/{subscription}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_clearNamespaceBundleBacklogForSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subscription",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Clear backlog for a given subscription on all topics on a namespace bundle.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/{bundle}/split": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_splitNamespaceBundle",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "unload",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "splitAlgorithmName",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "splitBoundaries",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    }
                },
                "summary": "Split a namespace bundle",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/{bundle}/topicHashPositions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_getTopicHashPositions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "topics",
                        "required": false,
                        "type": "array"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get hash positions for topics",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/{bundle}/unload": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_unloadNamespaceBundle",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "destinationBroker",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    }
                },
                "summary": "Unload a namespace bundle",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/namespaces/{tenant}/{namespace}/{bundle}/unsubscribe/{subscription}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "Namespaces_unsubscribeNamespaceBundle",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subscription",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Unsubscribes the given subscription on all topics on a namespace bundle.",
                "tags": [
                    "namespaces"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}": {
            "get": {
                "description": "",
                "operationId": "NonPersistentTopics_getList",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the bundle name",
                        "in": "query",
                        "name": "bundle",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Include system topic",
                        "in": "query",
                        "name": "includeSystemTopic",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to manage resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "The tenant/namespace does not exist"
                    },
                    "412": {
                        "description": "Namespace name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the list of non-persistent topics under a namespace.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/partitioned": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPartitionedTopicList",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Include system topic",
                        "in": "query",
                        "name": "includeSystemTopic",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "412": {
                        "description": "Namespace name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get the list of partitioned topics under a namespace.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{bundle}": {
            "get": {
                "description": "",
                "operationId": "NonPersistentTopics_getListFromBundle",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Bundle range of a topic",
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to manage resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace doesn't exist"
                    },
                    "412": {
                        "description": "Namespace name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the list of non-persistent topics under a namespace bundle.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}": {
            "delete": {
                "description": "The topic cannot be deleted if delete is not forcefully and there's any active subscription or producer connected to the it. Force delete ignores connected clients and deletes topic by explicitly closing them.",
                "operationId": "PersistentTopics_deleteTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Stop all producer/consumer/replicator and delete topic forcefully",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic has active producers/subscriptions"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "put": {
                "description": "This is the only REST endpoint from which non-partitioned topics could be created.",
                "operationId": "PersistentTopics_createNonPartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Key value pair properties for the topic metadata",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Partitioned topic already exist"
                    },
                    "412": {
                        "description": "Failed Reason : Name is invalid or Namespace does not have any clusters configured"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Create a non-partitioned topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/all_subscription/expireMessages/{expireTimeInSeconds}": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_expireMessagesForAllSubscriptions",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "Expires beyond the specified number of seconds",
                        "format": "int32",
                        "in": "path",
                        "name": "expireTimeInSeconds",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Expiry messages on a non-persistent topic is not allowed"
                    },
                    "412": {
                        "description": "Can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Expiry messages on all subscriptions of topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/autoSubscriptionCreation": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic does not exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove autoSubscriptionCreation ina a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic does not exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get autoSubscriptionCreation info in a topic",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Settings for automatic subscription creation",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AutoSubscriptionCreationOverrideImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Override namespace's allowAutoSubscriptionCreation setting for a topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/backlog": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getBacklog",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PersistentOfflineTopicStats"
                        }
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get estimated backlog for offline topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/backlogQuota": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeBacklogQuota",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "destination_storage",
                            "message_age"
                        ],
                        "in": "query",
                        "name": "backlogQuotaType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove a backlog quota policy from a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setBacklogQuota",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "destination_storage",
                            "message_age"
                        ],
                        "in": "query",
                        "name": "backlogQuotaType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "backlog quota policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BacklogQuotaImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Specified backlog quota exceeds retention quota. Increase retention quota and retry request"
                    }
                },
                "summary": "Set a backlog quota for a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/backlogQuotaMap": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getBacklogQuotaMap",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/BacklogQuota"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic policy or namespace does not exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    }
                },
                "summary": "Get backlog quota map on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/backlogSize": {
            "put": {
                "description": "",
                "operationId": "PersistentTopics_getBacklogSizeByMessageId",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Calculate backlog size by a message ID (in bytes).",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/compaction": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_compactionStatus",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist, or compaction hasn't run"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the status of a compaction operation for a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_compact",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "409": {
                        "description": "Compaction already running"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Trigger a compaction operation on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/compactionThreshold": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove compaction threshold configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get compaction threshold configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set compaction threshold configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/createMissedPartitions": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_createMissedPartitions",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant does not exist"
                    },
                    "409": {
                        "description": "Partitioned topic does not exist"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Create missed partitions of an existing partitioned topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/deduplicationEnabled": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove deduplication configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    }
                },
                "summary": "Get deduplication configuration of a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "DeduplicationEnabled policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    }
                },
                "summary": "Set deduplication enabled on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/deduplicationSnapshotInterval": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteDeduplicationSnapshotInterval",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete deduplicationSnapshotInterval config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getDeduplicationSnapshotInterval",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get deduplicationSnapshotInterval config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setDeduplicationSnapshotInterval",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Interval to take deduplication snapshot for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set deduplicationSnapshotInterval config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/delayedDelivery": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set delayed delivery messages config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DelayedDeliveryPolicies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get delayed delivery messages config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Delayed delivery policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DelayedDeliveryPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set delayed delivery messages config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/dispatchRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove message dispatch rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get dispatch rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set message dispatch rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/entryFilters": {
            "delete": {
                "description": "",
                "operationId": "NonPersistentTopics_removeEntryFilters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected thiscall to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove entry filters for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "NonPersistentTopics_getEntryFilters",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenants or Namespace doesn't exist"
                    }
                },
                "summary": "Get entry filters for a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "NonPersistentTopics_setEntryFilters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Enable sub types for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntryFilters"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set entry filters for specified topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/examinemessage": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_examineMessage",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "latest",
                        "description": "Relative start position to examine message.It can be 'latest' or 'earliest'",
                        "enum": [
                            "latest",
                            "earliest"
                        ],
                        "in": "query",
                        "name": "initialPosition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "The position of messages (default 1)",
                        "format": "int64",
                        "in": "query",
                        "name": "messagePosition",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic, the message position does not exist"
                    },
                    "405": {
                        "description": "If given partitioned topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Examine a specific message on a topic by position relative to the earliest or the latest message.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/inactiveTopicPolicies": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete inactive topic policies on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InactiveTopicPolicies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get inactive topic policies on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "inactive topic policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InactiveTopicPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set inactive topic policies on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/internal-info": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getManagedLedgerInfo",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PartitionedManagedLedgerInfo"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the stored topic metadata.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/internalStats": {
            "get": {
                "description": "",
                "operationId": "NonPersistentTopics_getInternalStats",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "metadata",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to manage resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "The tenant/namespace/topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get the internal stats for the topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/lastMessageId": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getLastMessageId",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Return the last commit message id of topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/ledger/{ledgerId}/entry/{entryId}": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMessageById",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ledger id",
                        "format": "int64",
                        "in": "path",
                        "name": "ledgerId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The entry id",
                        "format": "int64",
                        "in": "path",
                        "name": "entryId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic, subscription or the message position does not exist"
                    },
                    "405": {
                        "description": "Skipping messages on a non-persistent topic is not allowed"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get message by its messageId.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/maxConsumers": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxConsumers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxConsumers config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxConsumers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get maxConsumers config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxConsumers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The max consumers of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of maxConsumers"
                    }
                },
                "summary": "Set maxConsumers config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/maxConsumersPerSubscription": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove max consumers per subscription configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get max consumers per subscription configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set max consumers per subscription configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/maxMessageSize": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxMessageSize",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxMessageSize config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxMessageSize",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get maxMessageSize config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxMessageSize",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The max message size of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of maxConsumers"
                    }
                },
                "summary": "Set maxMessageSize config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/maxProducers": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxProducers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxProducers config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxProducers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get maxProducers config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxProducers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The max producers of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of maxProducers"
                    }
                },
                "summary": "Set maxProducers config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/maxSubscriptionsPerTopic": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxSubscriptionsPerTopic config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get maxSubscriptionsPerTopic config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The max subscriptions of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of maxSubscriptionsPerTopic"
                    }
                },
                "summary": "Set maxSubscriptionsPerTopic config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/maxUnackedMessagesOnConsumer": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteMaxUnackedMessagesOnConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete max unacked messages per consumer config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxUnackedMessagesOnConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get max unacked messages per consumer config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxUnackedMessagesOnConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Max unacked messages on consumer policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set max unacked messages per consumer config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/maxUnackedMessagesOnSubscription": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteMaxUnackedMessagesOnSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete max unacked messages per subscription config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxUnackedMessagesOnSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get max unacked messages per subscription config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxUnackedMessagesOnSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Max unacked messages on subscription policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set max unacked messages per subscription config on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/messageTTL": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Not authenticate to perform the request or policy is read only"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "412": {
                        "description": "Invalid message TTL value"
                    }
                },
                "summary": "Remove message TTL in seconds for a topic",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    }
                },
                "summary": "Get message TTL in seconds for a topic",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "TTL in seconds for the specified topic",
                        "format": "int32",
                        "in": "query",
                        "name": "messageTTL",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Not authenticate to perform the request or policy is read only"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "412": {
                        "description": "Invalid message TTL value"
                    }
                },
                "summary": "Set message TTL in seconds for a topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/messageid/{timestamp}": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMessageIdByTimestamp",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the timestamp",
                        "format": "int64",
                        "in": "path",
                        "name": "timestamp",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Topic is not non-partitioned and persistent"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get message ID published at or just after this absolute timestamp (in ms).",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/offload": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_offloadStatus",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Offload a prefix of a topic to long term storage",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_triggerOffload",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "400": {
                        "description": "Message ID is null"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "409": {
                        "description": "Offload already running"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Offload a prefix of a topic to long term storage",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/offloadPolicies": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete offload policies on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get offload policies on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Offload policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OffloadPoliciesImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set offload policies on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/partitioned-internalStats": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPartitionedStatsInternal",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PartitionedTopicInternalStats"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the stats-internal for the partitioned topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/partitioned-stats": {
            "get": {
                "description": "",
                "operationId": "NonPersistentTopics_getPartitionedStats",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": true,
                        "description": "Get per partition stats",
                        "in": "query",
                        "name": "perPartition",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return precise backlog or imprecise backlog",
                        "in": "query",
                        "name": "getPreciseBacklog",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return backlog size for each subscription, require locking on ledger so be careful not to use when there's heavy traffic.",
                        "in": "query",
                        "name": "subscriptionBacklogSize",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return the earliest time in backlog",
                        "in": "query",
                        "name": "getEarliestTimeInBacklog",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/NonPersistentPartitionedTopicStatsImpl"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the stats for the partitioned topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/partitions": {
            "delete": {
                "description": "It will also delete all the partitions of the topic if it exists.",
                "operationId": "PersistentTopics_deletePartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Stop all producer/consumer/replicator and delete topic forcefully",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Partitioned topic does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete a partitioned topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "NonPersistentTopics_getPartitionedMetadata",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Is check configuration required to automatically create topic",
                        "in": "query",
                        "name": "checkAllowAutoCreation",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to manage resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "The tenant/namespace/topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate cluster configuration"
                    }
                },
                "summary": "Get partitioned topic metadata.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "It increments partitions of existing partitioned-topic",
                "operationId": "PersistentTopics_updatePartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "updateLocalTopicOnly",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The number of partitions for the topic",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Update topic partition successful."
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden/Unauthorized"
                    },
                    "404": {
                        "description": "Topic does not exist"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "422": {
                        "description": "The number of partitions should be more than 0 and less than or equal to maxNumPartitionsPerPartitionedTopic and number of new partitions must be greater than existing number of partitions"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Increment partitions of an existing partitioned topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "put": {
                "description": "It needs to be called before creating a producer on a partitioned topic.",
                "operationId": "NonPersistentTopics_createPartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The number of partitions for the topic",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "createLocalTopicOnly",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to manage resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "The tenant/namespace does not exist"
                    },
                    "406": {
                        "description": "The number of partitions should be more than 0 and less than or equal to maxNumPartitionsPerPartitionedTopic"
                    },
                    "409": {
                        "description": "Partitioned topic already exists"
                    },
                    "412": {
                        "description": "Failed Reason : Name is invalid or Namespace does not have any clusters configured"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Create a partitioned topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/permissions": {
            "get": {
                "description": "Retrieve the effective permissions for a topic. These permissions are defined by the permissions set at thenamespace level combined (union) with any eventual specific permission set on the topic.",
                "operationId": "PersistentTopics_getPermissionsOnTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get permissions on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/permissions/{role}": {
            "delete": {
                "description": "Revoke permissions to a role on a single topic. If the permission was not set at the topiclevel, but rather at the namespace level, this operation will return an error (HTTP status code 412).",
                "operationId": "PersistentTopics_revokePermissionsOnTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Client role to which grant permissions",
                        "in": "path",
                        "name": "role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "412": {
                        "description": "Permissions are not set at the topic level"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Revoke permissions on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_grantPermissionsOnTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Client role to which grant permissions",
                        "in": "path",
                        "name": "role",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Actions to be granted (produce,functions,consume)",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "items": {
                                "enum": [
                                    "produce",
                                    "consume",
                                    "functions",
                                    "sources",
                                    "sinks",
                                    "packages"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Grant a new permission to a role on a single topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/persistence": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removePersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove configuration of persistence policies for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PersistencePolicies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get configuration of persistence policies for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setPersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Bookkeeper persistence policies for specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersistencePolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid persistence policies"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set configuration of persistence policies for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/properties": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Partitioned topic does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Remove the key in properties on the given topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get topic properties.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_updateProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Key value pair properties for the topic metadata",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Update the properties on the given topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/publishRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removePublishRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove message publish rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPublishRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PublishRate"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get publish rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setPublishRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PublishRate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set message publish rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/replication": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeReplicationClusters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "destination_storage",
                            "message_age"
                        ],
                        "in": "query",
                        "name": "backlogQuotaType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove the replication clusters from a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getReplicationClusters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    }
                },
                "summary": "Get the replication clusters for a topic",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setReplicationClusters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "List of replication clusters",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Topic is not global or invalid cluster ids"
                    }
                },
                "summary": "Set the replication clusters for a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/replicatorDispatchRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove replicatorDispatchRate config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DispatchRate"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get replicatorDispatchRate config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Replicator dispatch rate of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of replicatorDispatchRate"
                    }
                },
                "summary": "Set replicatorDispatchRate config for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/retention": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Retention Quota must exceed backlog quota"
                    }
                },
                "summary": "Remove retention configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RetentionPolicies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get retention configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Retention policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RetentionPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Retention Quota must exceed backlog quota"
                    }
                },
                "summary": "Set retention configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/schemaCompatibilityStrategy": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSchemaCompatibilityStrategy",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Strategy used to check the compatibility of new schema",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Operation not allowed on persistent topic"
                    }
                },
                "summary": "Remove schema compatibility strategy on a topic",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSchemaCompatibilityStrategy",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the cluster",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "enum": [
                                "UNDEFINED",
                                "ALWAYS_INCOMPATIBLE",
                                "ALWAYS_COMPATIBLE",
                                "BACKWARD",
                                "FORWARD",
                                "FULL",
                                "BACKWARD_TRANSITIVE",
                                "FORWARD_TRANSITIVE",
                                "FULL_TRANSITIVE"
                            ],
                            "type": "string"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Operation not allowed on persistent topic"
                    }
                },
                "summary": "Get schema compatibility strategy on a topic",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_setSchemaCompatibilityStrategy",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Strategy used to check the compatibility of new schema",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Operation not allowed on persistent topic"
                    }
                },
                "summary": "Set schema compatibility strategy on a topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/schemaValidationEnforced": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSchemaValidationEnforced",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenants or Namespace doesn't exist"
                    }
                },
                "summary": "Get schema validation enforced flag for topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSchemaValidationEnforced",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or Namespace doesn't exist"
                    },
                    "412": {
                        "description": "schemaValidationEnforced value is not valid"
                    }
                },
                "summary": "Set schema validation enforced flag on topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/shadowTopics": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteShadowTopics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Delete shadow topics for a topic",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getShadowTopics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    }
                },
                "summary": "Get the shadow topic list for a topic",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_setShadowTopics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "List of shadow topics",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set shadow topic list for a topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/stats": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getStats",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return precise backlog or imprecise backlog",
                        "in": "query",
                        "name": "getPreciseBacklog",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": true,
                        "description": "If return backlog size for each subscription, require locking on ledger so be careful not to use when there's heavy traffic.",
                        "in": "query",
                        "name": "subscriptionBacklogSize",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return time of the earliest message in backlog",
                        "in": "query",
                        "name": "getEarliestTimeInBacklog",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PersistentTopicStats"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the stats for the topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscribeRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Subscribe rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscribeRate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove subscribe rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscribeRate"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get subscribe rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Subscribe rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscribeRate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set subscribe rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}": {
            "delete": {
                "description": "The subscription cannot be deleted if delete is not forcefully and there are any active consumers attached to it. Force delete ignores connected consumers and deletes subscription by explicitly closing them.",
                "operationId": "PersistentTopics_deleteSubscription",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to be deleted",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Disconnect and close all consumers and delete subscription forcefully",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "412": {
                        "description": "Subscription has active consumers"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Delete a subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/analyzeBacklog": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_analyzeSubscriptionBacklog",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "messageId to start the analysis",
                        "in": "body",
                        "name": "position",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResetCursorData"
                        }
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Analyse a subscription, by scanning all the unprocessed messages",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/expireMessages": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_expireTopicMessages",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to be Expiry messages on",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "messageId to reset back to (ledgerId:entryId)",
                        "in": "body",
                        "name": "messageId",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResetCursorData"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Expiry messages on a non-persistent topic is not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Expiry messages on a topic subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/expireMessages/{expireTimeInSeconds}": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_expireTopicMessages",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to be Expiry messages on",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "Expires beyond the specified number of seconds",
                        "format": "int32",
                        "in": "path",
                        "name": "expireTimeInSeconds",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Expiry messages on a non-persistent topic is not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Expiry messages on a topic subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/position/{messagePosition}": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_peekNthMessage",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscribed message expired",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "The number of messages (default 1)",
                        "format": "int32",
                        "in": "path",
                        "name": "messagePosition",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic, subscription or the message position does not exist"
                    },
                    "405": {
                        "description": "Skipping messages on a non-persistent topic is not allowed"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Peek nth message on a topic subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/properties": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptionProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Return all the properties on the given subscription",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_updateSubscriptionProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to update",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The new properties",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Replace all the properties on the given subscription",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/replicatedSubscriptionStatus": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getReplicatedSubscriptionStatus",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "type": "boolean"
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "412": {
                        "description": "Can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get replicated subscription status on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setReplicatedSubscriptionStatus",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Whether to enable replicated subscription",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant or subscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Operation not allowed on this topic"
                    },
                    "412": {
                        "description": "Can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Enable or disable a replicated subscription on a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/resetcursor": {
            "post": {
                "description": "It fence cursor and disconnects all active consumers before resetting cursor.",
                "operationId": "PersistentTopics_resetCursorOnPosition",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to reset position on",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "messageId to reset back to (ledgerId:entryId)",
                        "in": "body",
                        "name": "messageId",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResetCursorData"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Not supported for partitioned topics"
                    },
                    "412": {
                        "description": "Unable to find position for position specified"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Reset subscription to message position closest to given position.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/resetcursor/{timestamp}": {
            "post": {
                "description": "It fence cursor and disconnects all active consumers before resetting cursor.",
                "operationId": "PersistentTopics_resetCursor",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to reset position on",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "the timestamp to reset back",
                        "format": "int64",
                        "in": "path",
                        "name": "timestamp",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "412": {
                        "description": "Failed to reset cursor on subscription or Unable to find position for timestamp specified"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Reset subscription to message position closest to absolute timestamp (in ms).",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/skip/{numMessages}": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_skipMessages",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "The number of messages to skip",
                        "format": "int32",
                        "in": "path",
                        "name": "numMessages",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Skipping messages on a partitioned topic is not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Skipping messages on a topic subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/skip_all": {
            "post": {
                "description": "Completely clears the backlog on the subscription.",
                "operationId": "PersistentTopics_skipAllMessages",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Operation not allowed on non-persistent topic"
                    },
                    "412": {
                        "description": "Can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Skip all messages on a topic subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscription/{subscriptionName}": {
            "put": {
                "description": "Creates a subscription on the topic at the specified message id",
                "operationId": "PersistentTopics_createSubscription",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to create position on",
                        "in": "path",
                        "name": "subscriptionName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "messageId where to create the subscription. It can be 'latest', 'earliest' or (ledgerId:entryId)",
                        "in": "body",
                        "name": "messageId",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResetCursorData"
                        }
                    },
                    {
                        "description": "Is replicated required to perform this operation",
                        "in": "query",
                        "name": "replicated",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "400": {
                        "description": "Create subscription on non persistent topic is not supported"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Not supported for partitioned topics"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Create a subscription on the topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscriptionDispatchRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove subscription message dispatch rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DispatchRate"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get subscription message dispatch rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Subscription message dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set subscription message dispatch rate configuration for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscriptionTypesEnabled": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove subscription types enabled for specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "enum": [
                                    "Exclusive",
                                    "Shared",
                                    "Failover",
                                    "Key_Shared"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get is enable sub type fors specified topic.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Enable sub types for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "items": {
                                "enum": [
                                    "Exclusive",
                                    "Shared",
                                    "Failover",
                                    "Key_Shared"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set is enable sub types for specified topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/subscriptions": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptions",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the list of persistent subscriptions for a given topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/terminate": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_terminate",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Termination of a partitioned topic is not allowed"
                    },
                    "406": {
                        "description": "Need to provide a persistent topic name"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Terminate a topic. A topic that is terminated will not accept any more messages to be published and will let consumer to drain existing messages in backlog",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/terminate/partitions": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_terminatePartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Termination of a non-partitioned topic is not allowed"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Terminate all partitioned topic. A topic that is terminated will not accept any more messages to be published and will let consumer to drain existing messages in backlog",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/trim": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_trimTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": " Trim a topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/truncate": {
            "delete": {
                "description": "NonPersistentTopic does not support truncate.",
                "operationId": "NonPersistentTopics_truncateTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "412": {
                        "description": "NonPersistentTopic does not support truncate."
                    }
                },
                "summary": "Truncate a topic.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/unload": {
            "put": {
                "description": "",
                "operationId": "NonPersistentTopics_unloadTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "This operation requires super-user access"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "The tenant/namespace/topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Unload a topic",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/non-persistent/{tenant}/{namespace}/{topic}/{subName}/dispatchRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSubscriptionLevelDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove message dispatch rate configuration for specified subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptionLevelDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get message dispatch rate configuration for specified subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSubscriptionLevelDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Subscription message dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set message dispatch rate configuration for specified subscription.",
                "tags": [
                    "non-persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getList",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the bundle name",
                        "in": "query",
                        "name": "bundle",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Include system topic",
                        "in": "query",
                        "name": "includeSystemTopic",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "412": {
                        "description": "Namespace name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get the list of topics under a namespace.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/partitioned": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPartitionedTopicList",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Include system topic",
                        "in": "query",
                        "name": "includeSystemTopic",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin or operate permission on the namespace"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "412": {
                        "description": "Namespace name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get the list of partitioned topics under a namespace.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}": {
            "delete": {
                "description": "The topic cannot be deleted if delete is not forcefully and there's any active subscription or producer connected to the it. Force delete ignores connected clients and deletes topic by explicitly closing them.",
                "operationId": "PersistentTopics_deleteTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Stop all producer/consumer/replicator and delete topic forcefully",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic has active producers/subscriptions"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "put": {
                "description": "This is the only REST endpoint from which non-partitioned topics could be created.",
                "operationId": "PersistentTopics_createNonPartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Key value pair properties for the topic metadata",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    },
                    "409": {
                        "description": "Partitioned topic already exist"
                    },
                    "412": {
                        "description": "Failed Reason : Name is invalid or Namespace does not have any clusters configured"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Create a non-partitioned topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/all_subscription/expireMessages/{expireTimeInSeconds}": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_expireMessagesForAllSubscriptions",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "Expires beyond the specified number of seconds",
                        "format": "int32",
                        "in": "path",
                        "name": "expireTimeInSeconds",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Expiry messages on a non-persistent topic is not allowed"
                    },
                    "412": {
                        "description": "Can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Expiry messages on all subscriptions of topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/autoSubscriptionCreation": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic does not exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove autoSubscriptionCreation ina a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic does not exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get autoSubscriptionCreation info in a topic",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setAutoSubscriptionCreation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Settings for automatic subscription creation",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AutoSubscriptionCreationOverrideImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Override namespace's allowAutoSubscriptionCreation setting for a topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/backlog": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getBacklog",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PersistentOfflineTopicStats"
                        }
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get estimated backlog for offline topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/backlogQuota": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeBacklogQuota",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "destination_storage",
                            "message_age"
                        ],
                        "in": "query",
                        "name": "backlogQuotaType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove a backlog quota policy from a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setBacklogQuota",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "destination_storage",
                            "message_age"
                        ],
                        "in": "query",
                        "name": "backlogQuotaType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "backlog quota policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BacklogQuotaImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Specified backlog quota exceeds retention quota. Increase retention quota and retry request"
                    }
                },
                "summary": "Set a backlog quota for a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/backlogQuotaMap": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getBacklogQuotaMap",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/BacklogQuota"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic policy or namespace does not exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    }
                },
                "summary": "Get backlog quota map on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/backlogSize": {
            "put": {
                "description": "",
                "operationId": "PersistentTopics_getBacklogSizeByMessageId",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Calculate backlog size by a message ID (in bytes).",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/compaction": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_compactionStatus",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist, or compaction hasn't run"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the status of a compaction operation for a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_compact",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "409": {
                        "description": "Compaction already running"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Trigger a compaction operation on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/compactionThreshold": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove compaction threshold configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get compaction threshold configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setCompactionThreshold",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set compaction threshold configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/createMissedPartitions": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_createMissedPartitions",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant does not exist"
                    },
                    "409": {
                        "description": "Partitioned topic does not exist"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Create missed partitions of an existing partitioned topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/deduplicationEnabled": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove deduplication configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    }
                },
                "summary": "Get deduplication configuration of a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setDeduplication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "DeduplicationEnabled policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    }
                },
                "summary": "Set deduplication enabled on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/deduplicationSnapshotInterval": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteDeduplicationSnapshotInterval",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete deduplicationSnapshotInterval config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getDeduplicationSnapshotInterval",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get deduplicationSnapshotInterval config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setDeduplicationSnapshotInterval",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Interval to take deduplication snapshot for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set deduplicationSnapshotInterval config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/delayedDelivery": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set delayed delivery messages config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DelayedDeliveryPolicies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get delayed delivery messages config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setDelayedDeliveryPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Delayed delivery policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DelayedDeliveryPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set delayed delivery messages config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/dispatchRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove message dispatch rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get dispatch rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set message dispatch rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/entryFilters": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeEntryFilters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected thiscall to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove entry filters for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getEntryFilters",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenants or Namespace doesn't exist"
                    }
                },
                "summary": "Get entry filters for a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setEntryFilters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected thiscall to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Entry filters for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntryFilters"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set entry filters for specified topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/examinemessage": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_examineMessage",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": "latest",
                        "description": "Relative start position to examine message.It can be 'latest' or 'earliest'",
                        "enum": [
                            "latest",
                            "earliest"
                        ],
                        "in": "query",
                        "name": "initialPosition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "The position of messages (default 1)",
                        "format": "int64",
                        "in": "query",
                        "name": "messagePosition",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic, the message position does not exist"
                    },
                    "405": {
                        "description": "If given partitioned topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Examine a specific message on a topic by position relative to the earliest or the latest message.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/inactiveTopicPolicies": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete inactive topic policies on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/InactiveTopicPolicies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get inactive topic policies on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setInactiveTopicPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "inactive topic policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InactiveTopicPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set inactive topic policies on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/internal-info": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getManagedLedgerInfo",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PartitionedManagedLedgerInfo"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the stored topic metadata.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/internalStats": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getInternalStats",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "metadata",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PersistentTopicInternalStats"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the internal stats for the topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/lastMessageId": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getLastMessageId",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Return the last commit message id of topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/ledger/{ledgerId}/entry/{entryId}": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMessageById",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The ledger id",
                        "format": "int64",
                        "in": "path",
                        "name": "ledgerId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The entry id",
                        "format": "int64",
                        "in": "path",
                        "name": "entryId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic, subscription or the message position does not exist"
                    },
                    "405": {
                        "description": "Skipping messages on a non-persistent topic is not allowed"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get message by its messageId.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/maxConsumers": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxConsumers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxConsumers config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxConsumers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get maxConsumers config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxConsumers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The max consumers of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of maxConsumers"
                    }
                },
                "summary": "Set maxConsumers config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/maxConsumersPerSubscription": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove max consumers per subscription configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get max consumers per subscription configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxConsumersPerSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set max consumers per subscription configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/maxMessageSize": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxMessageSize",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxMessageSize config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxMessageSize",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get maxMessageSize config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxMessageSize",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The max message size of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of maxConsumers"
                    }
                },
                "summary": "Set maxMessageSize config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/maxProducers": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxProducers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxProducers config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxProducers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get maxProducers config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxProducers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The max producers of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of maxProducers"
                    }
                },
                "summary": "Set maxProducers config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/maxSubscriptionsPerTopic": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove maxSubscriptionsPerTopic config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get maxSubscriptionsPerTopic config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxSubscriptionsPerTopic",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The max subscriptions of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of maxSubscriptionsPerTopic"
                    }
                },
                "summary": "Set maxSubscriptionsPerTopic config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/maxUnackedMessagesOnConsumer": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteMaxUnackedMessagesOnConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete max unacked messages per consumer config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxUnackedMessagesOnConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get max unacked messages per consumer config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxUnackedMessagesOnConsumer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Max unacked messages on consumer policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set max unacked messages per consumer config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/maxUnackedMessagesOnSubscription": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteMaxUnackedMessagesOnSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete max unacked messages per subscription config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMaxUnackedMessagesOnSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get max unacked messages per subscription config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMaxUnackedMessagesOnSubscription",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Max unacked messages on subscription policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set max unacked messages per subscription config on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/messageTTL": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Not authenticate to perform the request or policy is read only"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "412": {
                        "description": "Invalid message TTL value"
                    }
                },
                "summary": "Remove message TTL in seconds for a topic",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    }
                },
                "summary": "Get message TTL in seconds for a topic",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setMessageTTL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "TTL in seconds for the specified topic",
                        "format": "int32",
                        "in": "query",
                        "name": "messageTTL",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Not authenticate to perform the request or policy is read only"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "412": {
                        "description": "Invalid message TTL value"
                    }
                },
                "summary": "Set message TTL in seconds for a topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/messageid/{timestamp}": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getMessageIdByTimestamp",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the timestamp",
                        "format": "int64",
                        "in": "path",
                        "name": "timestamp",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Topic is not non-partitioned and persistent"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get message ID published at or just after this absolute timestamp (in ms).",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/offload": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_offloadStatus",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Offload a prefix of a topic to long term storage",
                "tags": [
                    "persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_triggerOffload",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "400": {
                        "description": "Message ID is null"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "409": {
                        "description": "Offload already running"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Offload a prefix of a topic to long term storage",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/offloadPolicies": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Delete offload policies on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get offload policies on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setOffloadPolicies",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Offload policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OffloadPoliciesImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or cluster or namespace or topic doesn't exist"
                    }
                },
                "summary": "Set offload policies on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/partitioned-internalStats": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPartitionedStatsInternal",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PartitionedTopicInternalStats"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the stats-internal for the partitioned topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/partitioned-stats": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPartitionedStats",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": true,
                        "description": "Get per partition stats",
                        "in": "query",
                        "name": "perPartition",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return precise backlog or imprecise backlog",
                        "in": "query",
                        "name": "getPreciseBacklog",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": true,
                        "description": "If return backlog size for each subscription, require locking on ledger so be careful not to use when there's heavy traffic.",
                        "in": "query",
                        "name": "subscriptionBacklogSize",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return the earliest time in backlog",
                        "in": "query",
                        "name": "getEarliestTimeInBacklog",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PartitionedTopicStatsImpl"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the stats for the partitioned topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/partitions": {
            "delete": {
                "description": "It will also delete all the partitions of the topic if it exists.",
                "operationId": "PersistentTopics_deletePartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Stop all producer/consumer/replicator and delete topic forcefully",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Partitioned topic does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Delete a partitioned topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPartitionedMetadata",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Is check configuration required to automatically create topic",
                        "in": "query",
                        "name": "checkAllowAutoCreation",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PartitionedTopicMetadata"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Partitioned topic does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get partitioned topic metadata.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "It increments partitions of existing partitioned-topic",
                "operationId": "PersistentTopics_updatePartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "updateLocalTopicOnly",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "The number of partitions for the topic",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "204": {
                        "description": "Update topic partition successful."
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden/Unauthorized"
                    },
                    "404": {
                        "description": "Topic does not exist"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "422": {
                        "description": "The number of partitions should be more than 0 and less than or equal to maxNumPartitionsPerPartitionedTopic and number of new partitions must be greater than existing number of partitions"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Increment partitions of an existing partitioned topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "put": {
                "description": "It needs to be called before creating a producer on a partitioned topic.",
                "operationId": "PersistentTopics_createPartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The number of partitions for the topic",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "default": 0,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "createLocalTopicOnly",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or namespace doesn't exist"
                    },
                    "406": {
                        "description": "The number of partitions should be more than 0 and less than or equal to maxNumPartitionsPerPartitionedTopic"
                    },
                    "409": {
                        "description": "Partitioned topic already exist"
                    },
                    "412": {
                        "description": "Failed Reason : Name is invalid or Namespace does not have any clusters configured"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Create a partitioned topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/permissions": {
            "get": {
                "description": "Retrieve the effective permissions for a topic. These permissions are defined by the permissions set at thenamespace level combined (union) with any eventual specific permission set on the topic.",
                "operationId": "PersistentTopics_getPermissionsOnTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get permissions on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/permissions/{role}": {
            "delete": {
                "description": "Revoke permissions to a role on a single topic. If the permission was not set at the topiclevel, but rather at the namespace level, this operation will return an error (HTTP status code 412).",
                "operationId": "PersistentTopics_revokePermissionsOnTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Client role to which grant permissions",
                        "in": "path",
                        "name": "role",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "412": {
                        "description": "Permissions are not set at the topic level"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Revoke permissions on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_grantPermissionsOnTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Client role to which grant permissions",
                        "in": "path",
                        "name": "role",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Actions to be granted (produce,functions,consume)",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "items": {
                                "enum": [
                                    "produce",
                                    "consume",
                                    "functions",
                                    "sources",
                                    "sinks",
                                    "packages"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "tenant/namespace/topic doesn't exit"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Grant a new permission to a role on a single topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/persistence": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removePersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove configuration of persistence policies for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PersistencePolicies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get configuration of persistence policies for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setPersistence",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Bookkeeper persistence policies for specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PersistencePolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid persistence policies"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set configuration of persistence policies for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/properties": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "key",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Partitioned topic does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Partitioned topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Remove the key in properties on the given topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Topic name is invalid"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get topic properties.",
                "tags": [
                    "persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_updateProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Key value pair properties for the topic metadata",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Update the properties on the given topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/publishRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removePublishRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove message publish rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getPublishRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PublishRate"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get publish rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setPublishRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PublishRate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set message publish rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/replication": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeReplicationClusters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "destination_storage",
                            "message_age"
                        ],
                        "in": "query",
                        "name": "backlogQuotaType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove the replication clusters from a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getReplicationClusters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    }
                },
                "summary": "Get the replication clusters for a topic",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setReplicationClusters",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "List of replication clusters",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Topic is not global or invalid cluster ids"
                    }
                },
                "summary": "Set the replication clusters for a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/replicatorDispatchRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove replicatorDispatchRate config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DispatchRate"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get replicatorDispatchRate config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setReplicatorDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Replicator dispatch rate of the topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Invalid value of replicatorDispatchRate"
                    }
                },
                "summary": "Set replicatorDispatchRate config for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/retention": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Retention Quota must exceed backlog quota"
                    }
                },
                "summary": "Remove retention configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/RetentionPolicies"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get retention configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setRetention",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Retention policies for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RetentionPolicies"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Retention Quota must exceed backlog quota"
                    }
                },
                "summary": "Set retention configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/schemaCompatibilityStrategy": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSchemaCompatibilityStrategy",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Strategy used to check the compatibility of new schema",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Operation not allowed on persistent topic"
                    }
                },
                "summary": "Remove schema compatibility strategy on a topic",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSchemaCompatibilityStrategy",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the cluster",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "enum": [
                                "UNDEFINED",
                                "ALWAYS_INCOMPATIBLE",
                                "ALWAYS_COMPATIBLE",
                                "BACKWARD",
                                "FORWARD",
                                "FULL",
                                "BACKWARD_TRANSITIVE",
                                "FORWARD_TRANSITIVE",
                                "FULL_TRANSITIVE"
                            ],
                            "type": "string"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Operation not allowed on persistent topic"
                    }
                },
                "summary": "Get schema compatibility strategy on a topic",
                "tags": [
                    "persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_setSchemaCompatibilityStrategy",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Strategy used to check the compatibility of new schema",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Operation not allowed on persistent topic"
                    }
                },
                "summary": "Set schema compatibility strategy on a topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/schemaValidationEnforced": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSchemaValidationEnforced",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenants or Namespace doesn't exist"
                    }
                },
                "summary": "Get schema validation enforced flag for topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSchemaValidationEnforced",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Tenant or Namespace doesn't exist"
                    },
                    "412": {
                        "description": "schemaValidationEnforced value is not valid"
                    }
                },
                "summary": "Set schema validation enforced flag on topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/shadowTopics": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_deleteShadowTopics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Delete shadow topics for a topic",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getShadowTopics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    }
                },
                "summary": "Get the shadow topic list for a topic",
                "tags": [
                    "persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_setShadowTopics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "List of shadow topics",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set shadow topic list for a topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/stats": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getStats",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return precise backlog or imprecise backlog",
                        "in": "query",
                        "name": "getPreciseBacklog",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": true,
                        "description": "If return backlog size for each subscription, require locking on ledger so be careful not to use when there's heavy traffic.",
                        "in": "query",
                        "name": "subscriptionBacklogSize",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "If return time of the earliest message in backlog",
                        "in": "query",
                        "name": "getEarliestTimeInBacklog",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PersistentTopicStats"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the stats for the topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscribeRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Subscribe rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscribeRate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove subscribe rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubscribeRate"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get subscribe rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSubscribeRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Subscribe rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SubscribeRate"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set subscribe rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}": {
            "delete": {
                "description": "The subscription cannot be deleted if delete is not forcefully and there are any active consumers attached to it. Force delete ignores connected consumers and deletes subscription by explicitly closing them.",
                "operationId": "PersistentTopics_deleteSubscription",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to be deleted",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Disconnect and close all consumers and delete subscription forcefully",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "412": {
                        "description": "Subscription has active consumers"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Delete a subscription.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/analyzeBacklog": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_analyzeSubscriptionBacklog",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "messageId to start the analysis",
                        "in": "body",
                        "name": "position",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResetCursorData"
                        }
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Analyse a subscription, by scanning all the unprocessed messages",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/expireMessages": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_expireTopicMessages",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to be Expiry messages on",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "messageId to reset back to (ledgerId:entryId)",
                        "in": "body",
                        "name": "messageId",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResetCursorData"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Expiry messages on a non-persistent topic is not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Expiry messages on a topic subscription.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/expireMessages/{expireTimeInSeconds}": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_expireTopicMessages",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to be Expiry messages on",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "Expires beyond the specified number of seconds",
                        "format": "int32",
                        "in": "path",
                        "name": "expireTimeInSeconds",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Expiry messages on a non-persistent topic is not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Expiry messages on a topic subscription.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/position/{messagePosition}": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_peekNthMessage",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscribed message expired",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 1,
                        "description": "The number of messages (default 1)",
                        "format": "int32",
                        "in": "path",
                        "name": "messagePosition",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic, subscription or the message position does not exist"
                    },
                    "405": {
                        "description": "Skipping messages on a non-persistent topic is not allowed"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Peek nth message on a topic subscription.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/properties": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptionProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Return all the properties on the given subscription",
                "tags": [
                    "persistent topic"
                ]
            },
            "put": {
                "description": "",
                "operationId": "PersistentTopics_updateSubscriptionProperties",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to update",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The new properties",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Replace all the properties on the given subscription",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/replicatedSubscriptionStatus": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getReplicatedSubscriptionStatus",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "type": "boolean"
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "412": {
                        "description": "Can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Get replicated subscription status on a topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setReplicatedSubscriptionStatus",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Whether to enable replicated subscription",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant or subscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Operation not allowed on this topic"
                    },
                    "412": {
                        "description": "Can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Enable or disable a replicated subscription on a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/resetcursor": {
            "post": {
                "description": "It fence cursor and disconnects all active consumers before resetting cursor.",
                "operationId": "PersistentTopics_resetCursorOnPosition",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to reset position on",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "messageId to reset back to (ledgerId:entryId)",
                        "in": "body",
                        "name": "messageId",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResetCursorData"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Not supported for partitioned topics"
                    },
                    "412": {
                        "description": "Unable to find position for position specified"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Reset subscription to message position closest to given position.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/resetcursor/{timestamp}": {
            "post": {
                "description": "It fence cursor and disconnects all active consumers before resetting cursor.",
                "operationId": "PersistentTopics_resetCursor",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to reset position on",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "the timestamp to reset back",
                        "format": "int64",
                        "in": "path",
                        "name": "timestamp",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "412": {
                        "description": "Failed to reset cursor on subscription or Unable to find position for timestamp specified"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Reset subscription to message position closest to absolute timestamp (in ms).",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/skip/{numMessages}": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_skipMessages",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": 0,
                        "description": "The number of messages to skip",
                        "format": "int32",
                        "in": "path",
                        "name": "numMessages",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Skipping messages on a partitioned topic is not allowed"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Skipping messages on a topic subscription.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subName}/skip_all": {
            "post": {
                "description": "Completely clears the backlog on the subscription.",
                "operationId": "PersistentTopics_skipAllMessages",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of subscription",
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Operation not allowed on non-persistent topic"
                    },
                    "412": {
                        "description": "Can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Skip all messages on a topic subscription.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscription/{subscriptionName}": {
            "put": {
                "description": "Creates a subscription on the topic at the specified message id",
                "operationId": "PersistentTopics_createSubscription",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Subscription to create position on",
                        "in": "path",
                        "name": "subscriptionName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "messageId where to create the subscription. It can be 'latest', 'earliest' or (ledgerId:entryId)",
                        "in": "body",
                        "name": "messageId",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResetCursorData"
                        }
                    },
                    {
                        "description": "Is replicated required to perform this operation",
                        "in": "query",
                        "name": "replicated",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "400": {
                        "description": "Create subscription on non persistent topic is not supported"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic or subscription does not exist"
                    },
                    "405": {
                        "description": "Not supported for partitioned topics"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Create a subscription on the topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscriptionDispatchRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove subscription message dispatch rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DispatchRate"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get subscription message dispatch rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSubscriptionDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Subscription message dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set subscription message dispatch rate configuration for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscriptionTypesEnabled": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, to enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove subscription types enabled for specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "enum": [
                                    "Exclusive",
                                    "Shared",
                                    "Failover",
                                    "Key_Shared"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get is enable sub type fors specified topic.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSubscriptionTypesEnabled",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Enable sub types for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "items": {
                                "enum": [
                                    "Exclusive",
                                    "Shared",
                                    "Failover",
                                    "Key_Shared"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set is enable sub types for specified topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/subscriptions": {
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptions",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Get the list of persistent subscriptions for a given topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/terminate": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_terminate",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Termination of a partitioned topic is not allowed"
                    },
                    "406": {
                        "description": "Need to provide a persistent topic name"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Terminate a topic. A topic that is terminated will not accept any more messages to be published and will let consumer to drain existing messages in backlog",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/terminate/partitions": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_terminatePartitionedTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Termination of a non-partitioned topic is not allowed"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Terminate all partitioned topic. A topic that is terminated will not accept any more messages to be published and will let consumer to drain existing messages in backlog",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/trim": {
            "post": {
                "description": "",
                "operationId": "PersistentTopics_trimTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant orsubscriber is not authorized to access this operation"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "405": {
                        "description": "Operation is not allowed on the persistent topic"
                    },
                    "412": {
                        "description": "Topic name is not valid"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": " Trim a topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/truncate": {
            "delete": {
                "description": "The truncate operation will move all cursors to the end of the topic and delete all inactive ledgers.",
                "operationId": "PersistentTopics_truncateTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "summary": "Truncate a topic.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/unload": {
            "put": {
                "description": "",
                "operationId": "PersistentTopics_unloadTopic",
                "parameters": [
                    {
                        "description": "Specify the tenant",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify the namespace",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Specify topic name",
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "Don't have permission to administrate resources on this tenant"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic does not exist"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    },
                    "412": {
                        "description": "Topic name is not valid or can't find owner for topic"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Failed to validate global cluster configuration"
                    }
                },
                "summary": "Unload a topic",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/persistent/{tenant}/{namespace}/{topic}/{subName}/dispatchRate": {
            "delete": {
                "description": "",
                "operationId": "PersistentTopics_removeSubscriptionLevelDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove message dispatch rate configuration for specified subscription.",
                "tags": [
                    "persistent topic"
                ]
            },
            "get": {
                "description": "",
                "operationId": "PersistentTopics_getSubscriptionLevelDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "applied",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Get message dispatch rate configuration for specified subscription.",
                "tags": [
                    "persistent topic"
                ]
            },
            "post": {
                "description": "",
                "operationId": "PersistentTopics_setSubscriptionLevelDispatchRate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "subName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "description": "Whether leader broker redirected this call to this broker. For internal use.",
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "isGlobal",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Subscription message dispatch rate for the specified topic",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DispatchRateImpl"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace or topic doesn't exist"
                    },
                    "405": {
                        "description": "Topic level policy is disabled, please enable the topic level policy and retry"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set message dispatch rate configuration for specified subscription.",
                "tags": [
                    "persistent topic"
                ]
            }
        },
        "/resource-quotas": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceQuotas_getDefaultResourceQuota",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get the default quota",
                "tags": [
                    "resource-quotas"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceQuotas_setDefaultResourceQuota",
                "parameters": [
                    {
                        "description": "Default resource quota",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResourceQuota"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Set the default quota",
                "tags": [
                    "resource-quotas"
                ]
            }
        },
        "/resource-quotas/{tenant}/{namespace}/{bundle}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceQuotas_removeNamespaceBundleResourceQuota",
                "parameters": [
                    {
                        "description": "Tenant name",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Namespace name within the specified tenant",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Namespace bundle range",
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Remove resource quota for a namespace.",
                "tags": [
                    "resource-quotas"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceQuotas_getNamespaceBundleResourceQuota",
                "parameters": [
                    {
                        "description": "Tenant name",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Namespace name within the specified tenant",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Namespace bundle range",
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "Namespace does not exist"
                    }
                },
                "summary": "Get resource quota of a namespace bundle.",
                "tags": [
                    "resource-quotas"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceQuotas_setNamespaceBundleResourceQuota",
                "parameters": [
                    {
                        "description": "Tenant name",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Namespace name within the specified tenant",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Namespace bundle range",
                        "in": "path",
                        "name": "bundle",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resource quota for the specified namespace",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResourceQuota"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace"
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "409": {
                        "description": "Concurrent modification"
                    }
                },
                "summary": "Set resource quota on a namespace.",
                "tags": [
                    "resource-quotas"
                ]
            }
        },
        "/resourcegroups": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceGroups_getResourceGroups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "uniqueItems": true
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    }
                },
                "summary": "Get the list of all the resourcegroups.",
                "tags": [
                    "resourcegroups"
                ]
            }
        },
        "/resourcegroups/{resourcegroup}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceGroups_deleteResourceGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourcegroup",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "ResourceGroup doesn't exist"
                    },
                    "409": {
                        "description": "ResourceGroup is in use"
                    }
                },
                "summary": "Delete a resourcegroup.",
                "tags": [
                    "resourcegroups"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceGroups_getResourceGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourcegroup",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResourceGroup"
                        }
                    },
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "ResourceGroup doesn't exist"
                    }
                },
                "summary": "Get the rate limiters specified for a resourcegroup.",
                "tags": [
                    "resourcegroups"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "ResourceGroups_createOrUpdateResourceGroup",
                "parameters": [
                    {
                        "in": "path",
                        "name": "resourcegroup",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Rate limiters for the resourcegroup",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ResourceGroup"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "Don't have admin permission"
                    },
                    "404": {
                        "description": "cluster doesn't exist"
                    }
                },
                "summary": "Creates a new resourcegroup with the specified rate limiters",
                "tags": [
                    "resourcegroups"
                ]
            }
        },
        "/schemas/{tenant}/{namespace}/{topic}/compatibility": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SchemasResource_testCompatibility",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A JSON value presenting a schema payload. An example of the expected schema can be found down here.",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PostSchemaPayload"
                        },
                        "x-examples": {
                            "application/json": "{\"type\": \"STRING\", \"schema\": \"\", \"properties\": { \"key1\" : \"value1\" + } }"
                        }
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/IsCompatibilityResponse"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Client is not authorized or Don't have admin permission"
                    },
                    "403": {
                        "description": "Client is not authenticated"
                    },
                    "404": {
                        "description": "Tenant or Namespace or Topic doesn't exist"
                    },
                    "412": {
                        "description": "Failed to find the ownership for the topic"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "test the schema compatibility",
                "tags": [
                    "schemas"
                ]
            }
        },
        "/schemas/{tenant}/{namespace}/{topic}/schema": {
            "delete": {
                "description": "",
                "operationId": "SchemasResource_deleteSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteSchemaResponse"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Client is not authorized or Don't have admin permission"
                    },
                    "403": {
                        "description": "Client is not authenticated"
                    },
                    "404": {
                        "description": "Tenant or Namespace or Topic doesn't exist"
                    },
                    "412": {
                        "description": "Failed to find the ownership for the topic"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Delete all versions schema of a topic",
                "tags": [
                    "schemas"
                ]
            },
            "get": {
                "description": "",
                "operationId": "SchemasResource_getSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetSchemaResponse"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Client is not authorized or Don't have admin permission"
                    },
                    "403": {
                        "description": "Client is not authenticated"
                    },
                    "404": {
                        "description": "Tenant or Namespace or Topic doesn't exist; or Schema is not found for this topic"
                    },
                    "412": {
                        "description": "Failed to find the ownership for the topic"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the schema of a topic",
                "tags": [
                    "schemas"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SchemasResource_postSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A JSON value presenting a schema payload. An example of the expected schema can be found down here.",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PostSchemaPayload"
                        },
                        "x-examples": {
                            "application/json": "{\"type\": \"STRING\", \"schema\": \"\", \"properties\": { \"key1\" : \"value1\" + } }"
                        }
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PostSchemaResponse"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Client is not authorized or Don't have admin permission"
                    },
                    "403": {
                        "description": "Client is not authenticated"
                    },
                    "404": {
                        "description": "Tenant or Namespace or Topic doesn't exist"
                    },
                    "409": {
                        "description": "Incompatible schema"
                    },
                    "412": {
                        "description": "Failed to find the ownership for the topic"
                    },
                    "422": {
                        "description": "Invalid schema data"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update the schema of a topic",
                "tags": [
                    "schemas"
                ]
            }
        },
        "/schemas/{tenant}/{namespace}/{topic}/schema/{version}": {
            "get": {
                "description": "",
                "operationId": "SchemasResource_getSchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetSchemaResponse"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Client is not authorized or Don't have admin permission"
                    },
                    "403": {
                        "description": "Client is not authenticated"
                    },
                    "404": {
                        "description": "Tenant or Namespace or Topic doesn't exist; or Schema is not found for this topic"
                    },
                    "412": {
                        "description": "Failed to find the ownership for the topic"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the schema of a topic at a given version",
                "tags": [
                    "schemas"
                ]
            }
        },
        "/schemas/{tenant}/{namespace}/{topic}/schemas": {
            "get": {
                "description": "",
                "operationId": "SchemasResource_getAllSchemas",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetAllVersionsSchemaResponse"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Client is not authorized or Don't have admin permission"
                    },
                    "403": {
                        "description": "Client is not authenticated"
                    },
                    "404": {
                        "description": "Tenant or Namespace or Topic doesn't exist; or Schema is not found for this topic"
                    },
                    "412": {
                        "description": "Failed to find the ownership for the topic"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get the all schemas of a topic",
                "tags": [
                    "schemas"
                ]
            }
        },
        "/schemas/{tenant}/{namespace}/{topic}/version": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SchemasResource_getVersionBySchema",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "topic",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A JSON value presenting a schema payload. An example of the expected schema can be found down here.",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PostSchemaPayload"
                        },
                        "x-examples": {
                            "application/json": "{\"type\": \"STRING\", \"schema\": \"\", \"properties\": { \"key1\" : \"value1\" + } }"
                        }
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "authoritative",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LongSchemaVersion"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this topic"
                    },
                    "401": {
                        "description": "Client is not authorized or Don't have admin permission"
                    },
                    "403": {
                        "description": "Client is not authenticated"
                    },
                    "404": {
                        "description": "Tenant or Namespace or Topic doesn't exist"
                    },
                    "412": {
                        "description": "Failed to find the ownership for the topic"
                    },
                    "422": {
                        "description": "Invalid schema data"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "get the version of the schema",
                "tags": [
                    "schemas"
                ]
            }
        },
        "/tenants": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "TenantsBase_getTenants",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "404": {
                        "description": "Tenant doesn't exist"
                    }
                },
                "summary": "Get the list of existing tenants.",
                "tags": [
                    "tenants"
                ]
            }
        },
        "/tenants/{tenant}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "TenantsBase_deleteTenant",
                "parameters": [
                    {
                        "description": "The tenant name",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "default": false,
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "404": {
                        "description": "Tenant does not exist"
                    },
                    "405": {
                        "description": "Broker doesn't allow forced deletion of tenants"
                    },
                    "409": {
                        "description": "The tenant still has active namespaces"
                    }
                },
                "summary": "Delete a tenant and all namespaces and topics under it.",
                "tags": [
                    "tenants"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "TenantsBase_getTenantAdmin",
                "parameters": [
                    {
                        "description": "The tenant name",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TenantInfo"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "404": {
                        "description": "Tenant does not exist"
                    }
                },
                "summary": "Get the admin configuration for a given tenant.",
                "tags": [
                    "tenants"
                ]
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "This operation requires Pulsar super-user privileges.",
                "operationId": "TenantsBase_updateTenant",
                "parameters": [
                    {
                        "description": "The tenant name",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "TenantInfo",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TenantInfo"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "404": {
                        "description": "Tenant does not exist"
                    },
                    "409": {
                        "description": "Tenant already exists"
                    },
                    "412": {
                        "description": "Clusters do not exist"
                    }
                },
                "summary": "Update the admins for a tenant.",
                "tags": [
                    "tenants"
                ]
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "This operation requires Pulsar super-user privileges.",
                "operationId": "TenantsBase_createTenant",
                "parameters": [
                    {
                        "description": "The tenant name",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "TenantInfo",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TenantInfo"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "409": {
                        "description": "Tenant already exists"
                    },
                    "412": {
                        "description": "Clusters do not exist"
                    }
                },
                "summary": "Create a new tenant.",
                "tags": [
                    "tenants"
                ]
            }
        },
        "/worker-stats/functionsmetrics": {
            "get": {
                "description": "Requested should be executed by Monitoring agent on each worker to fetch the metrics",
                "operationId": "WorkerStats_getStats",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/WorkerFunctionInstanceStats"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Don't have admin permission"
                    },
                    "503": {
                        "description": "Worker service is not running"
                    }
                },
                "summary": "Get metrics for all functions owned by worker"
            }
        },
        "/worker-stats/metrics": {
            "get": {
                "description": "Request should be executed by Monitoring agent on each worker to fetch the worker-metrics",
                "operationId": "WorkerStats_getMetrics",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Metrics"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Don't have admin permission"
                    },
                    "503": {
                        "description": "Worker service is not running"
                    }
                },
                "summary": "Gets the metrics for Monitoring"
            }
        },
        "/worker/assignments": {
            "get": {
                "description": "",
                "operationId": "Worker_getAssignments",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "503": {
                        "description": "Worker service is not running"
                    }
                },
                "summary": "Fetches information about which Pulsar Functions are assigned to which Pulsar clusters"
            }
        },
        "/worker/cluster": {
            "get": {
                "description": "",
                "operationId": "Worker_getCluster",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/WorkerInfo"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "503": {
                        "description": "Worker service is not running"
                    }
                },
                "summary": "Fetches information about the Pulsar cluster running Pulsar Functions"
            }
        },
        "/worker/cluster/leader": {
            "get": {
                "description": "",
                "operationId": "Worker_getClusterLeader",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/WorkerInfo"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "503": {
                        "description": "Worker service is not running"
                    }
                },
                "summary": "Fetches info about the leader node of the Pulsar cluster running Pulsar Functions"
            }
        },
        "/worker/cluster/leader/ready": {
            "get": {
                "description": "",
                "operationId": "Worker_isLeaderReady",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "503": {
                        "description": "Worker service is not running"
                    }
                },
                "summary": "Checks if this node is the leader and is ready to service requests"
            }
        },
        "/worker/connectors": {
            "get": {
                "description": "",
                "operationId": "Worker_getConnectorsList",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "408": {
                        "description": "Request timeout"
                    }
                },
                "summary": "Fetches a list of supported Pulsar IO connectors currently running in cluster mode"
            }
        },
        "/worker/drain": {
            "get": {
                "description": "",
                "operationId": "Worker_getDrainStatus",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LongRunningProcessStatus"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "503": {
                        "description": "Worker service is not ready"
                    }
                },
                "summary": "Get the status of any ongoing drain operation at this worker"
            },
            "put": {
                "description": "",
                "operationId": "Worker_drain",
                "responses": {
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "408": {
                        "description": "Request timeout"
                    },
                    "409": {
                        "description": "Drain already in progress"
                    },
                    "503": {
                        "description": "Worker service is not ready"
                    }
                },
                "summary": "Drains this worker, i.e., moves its work-assignments to other workers"
            }
        },
        "/worker/leader/drain": {
            "get": {
                "description": "",
                "operationId": "Worker_getDrainStatusFromLeader",
                "parameters": [
                    {
                        "in": "query",
                        "name": "workerId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LongRunningProcessStatus"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "503": {
                        "description": "Worker service is not ready"
                    }
                },
                "summary": "Get the status of any ongoing drain operation at the specified worker"
            },
            "put": {
                "description": "",
                "operationId": "Worker_drainAtLeader",
                "parameters": [
                    {
                        "in": "query",
                        "name": "workerId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "408": {
                        "description": "Request timeout"
                    },
                    "409": {
                        "description": "Drain already in progress"
                    },
                    "503": {
                        "description": "Worker service is not ready"
                    }
                },
                "summary": "Drains the specified worker, i.e., moves its work-assignments to other workers"
            }
        },
        "/worker/rebalance": {
            "put": {
                "description": "",
                "operationId": "Worker_rebalance",
                "responses": {
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "408": {
                        "description": "Request timeout"
                    }
                },
                "summary": "Triggers a rebalance of functions to workers"
            }
        }
    },
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "tags": [
        {
            "name": "bookies"
        },
        {
            "name": "broker-stats"
        },
        {
            "name": "brokers"
        },
        {
            "name": "clusters"
        },
        {
            "name": "namespaces"
        },
        {
            "name": "non-persistent topic"
        },
        {
            "name": "persistent topic"
        },
        {
            "name": "resource-quotas"
        },
        {
            "name": "resourcegroups"
        },
        {
            "name": "schemas"
        },
        {
            "name": "tenants"
        }
    ]
}

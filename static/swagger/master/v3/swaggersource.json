{
    "basePath": "/admin/v3",
    "definitions": {
        "AuthenticationDataSource": {
            "properties": {
                "commandData": {
                    "type": "string"
                },
                "httpAuthType": {
                    "type": "string"
                },
                "peerAddress": {
                    "$ref": "#/definitions/SocketAddress"
                },
                "subscription": {
                    "type": "string"
                },
                "tlsCertificates": {
                    "items": {
                        "$ref": "#/definitions/Certificate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthenticationParameters": {
            "properties": {
                "clientAuthenticationDataSource": {
                    "$ref": "#/definitions/AuthenticationDataSource"
                },
                "clientRole": {
                    "type": "string"
                },
                "originalPrincipal": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "BatchSourceConfig": {
            "properties": {
                "discoveryTriggererClassName": {
                    "type": "string"
                },
                "discoveryTriggererConfig": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Certificate": {
            "properties": {
                "encoded": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "publicKey": {
                    "$ref": "#/definitions/PublicKey"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompletableFuture": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureClusterData": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureVoid": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ConfigFieldDefinition": {
            "properties": {
                "attributes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "fieldName": {
                    "type": "string"
                },
                "typeName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConnectorDefinition": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sinkClass": {
                    "type": "string"
                },
                "sinkConfigClass": {
                    "type": "string"
                },
                "sourceClass": {
                    "type": "string"
                },
                "sourceConfigClass": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CryptoConfig": {
            "properties": {
                "consumerCryptoFailureAction": {
                    "enum": [
                        "FAIL",
                        "DISCARD",
                        "CONSUME"
                    ],
                    "type": "string"
                },
                "cryptoKeyReaderClassName": {
                    "type": "string"
                },
                "cryptoKeyReaderConfig": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "encryptionKeys": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "producerCryptoFailureAction": {
                    "enum": [
                        "FAIL",
                        "SEND"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExceptionInformation": {
            "properties": {
                "exceptionString": {
                    "type": "string"
                },
                "timestampMs": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ProducerConfig": {
            "properties": {
                "batchBuilder": {
                    "type": "string"
                },
                "compressionType": {
                    "enum": [
                        "NONE",
                        "LZ4",
                        "ZLIB",
                        "ZSTD",
                        "SNAPPY"
                    ],
                    "type": "string"
                },
                "cryptoConfig": {
                    "$ref": "#/definitions/CryptoConfig"
                },
                "maxPendingMessages": {
                    "format": "int32",
                    "type": "integer"
                },
                "maxPendingMessagesAcrossPartitions": {
                    "format": "int32",
                    "type": "integer"
                },
                "useThreadLocalProducers": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PublicKey": {
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "encoded": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "format": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Resources": {
            "properties": {
                "cpu": {
                    "format": "double",
                    "type": "number"
                },
                "disk": {
                    "format": "int64",
                    "type": "integer"
                },
                "ram": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SocketAddress": {
            "type": "object"
        },
        "SourceConfig": {
            "properties": {
                "archive": {
                    "type": "string"
                },
                "batchBuilder": {
                    "type": "string"
                },
                "batchSourceConfig": {
                    "$ref": "#/definitions/BatchSourceConfig"
                },
                "className": {
                    "type": "string"
                },
                "configs": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "customRuntimeOptions": {
                    "type": "string"
                },
                "logTopic": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "parallelism": {
                    "format": "int32",
                    "type": "integer"
                },
                "processingGuarantees": {
                    "enum": [
                        "ATLEAST_ONCE",
                        "ATMOST_ONCE",
                        "EFFECTIVELY_ONCE",
                        "MANUAL"
                    ],
                    "type": "string"
                },
                "producerConfig": {
                    "$ref": "#/definitions/ProducerConfig"
                },
                "resources": {
                    "$ref": "#/definitions/Resources"
                },
                "runtimeFlags": {
                    "type": "string"
                },
                "schemaType": {
                    "type": "string"
                },
                "secrets": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "serdeClassName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                },
                "topicName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SourceInstanceStatus": {
            "properties": {
                "instanceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/SourceInstanceStatusData"
                }
            },
            "type": "object"
        },
        "SourceInstanceStatusData": {
            "properties": {
                "error": {
                    "type": "string"
                },
                "lastReceivedTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "latestSourceExceptions": {
                    "items": {
                        "$ref": "#/definitions/ExceptionInformation"
                    },
                    "type": "array"
                },
                "latestSystemExceptions": {
                    "items": {
                        "$ref": "#/definitions/ExceptionInformation"
                    },
                    "type": "array"
                },
                "numReceivedFromSource": {
                    "format": "int64",
                    "type": "integer"
                },
                "numRestarts": {
                    "format": "int64",
                    "type": "integer"
                },
                "numSourceExceptions": {
                    "format": "int64",
                    "type": "integer"
                },
                "numSystemExceptions": {
                    "format": "int64",
                    "type": "integer"
                },
                "numWritten": {
                    "format": "int64",
                    "type": "integer"
                },
                "running": {
                    "type": "boolean"
                },
                "workerId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SourceStatus": {
            "properties": {
                "instances": {
                    "items": {
                        "$ref": "#/definitions/SourceInstanceStatus"
                    },
                    "type": "array"
                },
                "numInstances": {
                    "format": "int32",
                    "type": "integer"
                },
                "numRunning": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "UpdateOptions": {
            "description": "Options while updating the sink",
            "properties": {
                "update-auth-data": {
                    "description": "Whether or not to update the auth data",
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    },
    "info": {
        "description": "This provides the REST API for Pulsar Source operations",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "Pulsar Source REST API",
        "version": "v3"
    },
    "paths": {
        "/sources/builtinsources": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_getSourceList",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ConnectorDefinition"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "408": {
                        "description": "Request timeout"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Fetches the list of built-in Pulsar IO sources",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/builtinsources/{name}/configdefinition": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_getSourceConfigDefinition",
                "parameters": [
                    {
                        "description": "The name of the builtin source",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ConfigFieldDefinition"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "404": {
                        "description": "builtin source does not exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Fetches information about config fields associated with the specified builtin source",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/reloadBuiltInSources": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_reloadSources",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "This operation requires super-user access"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Reload the built-in connectors, including Sources and Sinks",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_listSources",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Lists all Pulsar Sources currently deployed in a given namespace",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_deregisterSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The function was successfully deleted"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "408": {
                        "description": "Request timeout"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Deletes a Pulsar Source currently running in cluster mode",
                "tags": [
                    "sources"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_getSourceInfo",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SourceConfig"
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Fetches information about a Pulsar Source currently running in cluster mode",
                "tags": [
                    "sources"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "SourcesBase_registerSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "You can submit a source (in any languages that you are familiar with) to a Pulsar cluster. Follow the steps below.\n1. Create a JSON object using some of the following parameters.\nA JSON value presenting configuration payload of a Pulsar Source. An example of the expected functions can be found here.\n- **classname**\n  The class name of a Pulsar Source if archive is file-url-path (file://).\n- **topicName**\n  The Pulsar topic to which data is sent.\n- **serdeClassName**\n  The SerDe classname for the Pulsar Source.\n- **schemaType**\n  The schema type (either a builtin schema like 'avro', 'json', etc.. or    custom Schema class name to be used to encode messages emitted from the Pulsar Source\n- **configs**\n  Source config key/values\n- **secrets**\n  This is a map of secretName(that is how the secret is going to be accessed in the function via context) to an object that  encapsulates how the secret is fetched by the underlying secrets provider. The type of an value here can be found by the  SecretProviderConfigurator.getSecretObjectType() method. \n- **parallelism**\n  The parallelism factor of a Pulsar Source (i.e. the number of a Pulsar Source instances to run).\n- **processingGuarantees**\n  The processing guarantees (aka delivery semantics) applied to the Pulsar Source.    Possible Values: [ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE]\n- **resources**\n  The size of the system resources allowed by the Pulsar Source runtime. The resources include: cpu, ram, disk.\n- **archive**\n  The path to the NAR archive for the Pulsar Source. It also supports url-path   [http/https/file (file protocol assumes that file already exists on worker host)]   from which worker can download the package.\n- **runtimeFlags**\n  Any flags that you want to pass to the runtime.\n2. Encapsulate the JSON object to a multipart object.",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SourceConfig"
                        },
                        "x-examples": {
                            "text/plain": "Example\n1. Create a JSON object.\n{\n \"tenant\": \"public\",\n \"namespace\": \"default\",\n \"name\": \"pulsar-io-mysql\",\n \"className\": \"TestSourceMysql\",\n \"topicName\": \"pulsar-io-mysql\",\n \"parallelism\": \"1\",\n \"archive\": \"/connectors/pulsar-io-mysql-0.0.1.nar\",\n \"schemaType\": \"avro\"\n}\n2. Encapsulate the JSON object to a multipart object (in Python).\nfrom requests_toolbelt.multipart.encoder import MultipartEncoder\nmp_encoder = MultipartEncoder([('sourceConfig', (None, json.dumps(config), 'application/json'))])"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Pulsar Function successfully created"
                    },
                    "400": {
                        "description": "Invalid request (Function already exists or Tenant, Namespace or Name is not provided, etc.)"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Creates a new Pulsar Source in cluster mode",
                "tags": [
                    "sources"
                ]
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "SourcesBase_updateSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A JSON value presenting configuration payload of a Pulsar Source. An example of the expected functions can be found here.\n- **classname**\n  The class name of a Pulsar Source if archive is file-url-path (file://).\n- **topicName**\n  The Pulsar topic to which data is sent.\n- **serdeClassName**\n  The SerDe classname for the Pulsar Source.\n- **schemaType**\n  The schema type (either a builtin schema like 'avro', 'json', etc.. or    custom Schema class name to be used to encode messages emitted from the Pulsar Source\n- **configs**\n  Pulsar Source config key/values\n- **secrets**\n  This is a map of secretName(that is how the secret is going to be accessed in the function via context) to an object that  encapsulates how the secret is fetched by the underlying secrets provider. The type of an value here can be found by the  SecretProviderConfigurator.getSecretObjectType() method.\n- **parallelism**\n  The parallelism factor of a Pulsar Source (i.e. the number of a Pulsar Source instances to run).\n- **processingGuarantees**\n  The processing guarantees (aka delivery semantics) applied to the Pulsar Source.    Possible Values: [ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE]\n- **resources**\n  The size of the system resources allowed by the Pulsar Source runtime. The resources include: cpu, ram, disk.\n- **archive**\n  The path to the NAR archive for the Pulsar Source. It also supports url-path   [http/https/file (file protocol assumes that file already exists on worker host)]   from which worker can download the package.\n- **runtimeFlags**\n  Any flags that you want to pass to the runtime.\n",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SourceConfig"
                        },
                        "x-examples": {
                            "application/json": "{\n  \"tenant\": \"public\",\n  \"namespace\": \"default\",\n  \"name\": \"pulsar-io-mysql\",\n  \"className\": \"TestSourceMysql\",\n  \"topicName\": \"pulsar-io-mysql\",\n  \"parallelism\": 1,\n  \"archive\": \"/connectors/pulsar-io-mysql-0.0.1.nar\",\n  \"schemaType\": \"avro\"\n}"
                        }
                    },
                    {
                        "description": "Update options for Pulsar Source",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Pulsar Function successfully updated"
                    },
                    "400": {
                        "description": "Invalid request (Function already exists or Tenant, Namespace or Name is not provided, etc.)"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Updates a Pulsar Source currently running in cluster mode",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}/restart": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_restartSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Restart all instances of a Pulsar Source",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}/start": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_startSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Start all instances of a Pulsar Source",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}/status": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_getSourceStatus",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SourceStatus"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this source"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Displays the status of a Pulsar Source running in cluster mode",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}/stop": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_stopSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Stop all instances of a Pulsar Source",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}/{instanceId}/restart": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_restartSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instanceId of a Pulsar Source (if instance-id is not provided, the stats of all instances is returned).",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this source"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Restart an instance of a Pulsar Source",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}/{instanceId}/start": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_startSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instanceId of a Pulsar Source (if instance-id is not provided, the stats of all instances is returned).",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Start an instance of a Pulsar Source",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}/{instanceId}/status": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_getSourceInstanceStatus",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instanceId of a Pulsar Source (if instance-id is not provided, the stats of all instances is returned).",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SourceInstanceStatusData"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this source"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Displays the status of a Pulsar Source instance",
                "tags": [
                    "sources"
                ]
            }
        },
        "/sources/{tenant}/{namespace}/{sourceName}/{instanceId}/stop": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SourcesBase_stopSource",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Source",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Source",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Source",
                        "in": "path",
                        "name": "sourceName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instanceId of a Pulsar Source (if instance-id is not provided, the stats of all instances is returned).",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "Not Found(The Pulsar Source doesn't exist)"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Stop instance of a Pulsar Source",
                "tags": [
                    "sources"
                ]
            }
        }
    },
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "tags": [
        {
            "name": "sources"
        }
    ]
}

{
    "basePath": "/admin/v3",
    "definitions": {
        "AuthenticationDataSource": {
            "properties": {
                "commandData": {
                    "type": "string"
                },
                "httpAuthType": {
                    "type": "string"
                },
                "peerAddress": {
                    "$ref": "#/definitions/SocketAddress"
                },
                "subscription": {
                    "type": "string"
                },
                "tlsCertificates": {
                    "items": {
                        "$ref": "#/definitions/Certificate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "AuthenticationParameters": {
            "properties": {
                "clientAuthenticationDataSource": {
                    "$ref": "#/definitions/AuthenticationDataSource"
                },
                "clientRole": {
                    "type": "string"
                },
                "originalPrincipal": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Certificate": {
            "properties": {
                "encoded": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "publicKey": {
                    "$ref": "#/definitions/PublicKey"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CompletableFuture": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureClusterData": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "CompletableFutureVoid": {
            "properties": {
                "cancelled": {
                    "type": "boolean"
                },
                "completedExceptionally": {
                    "type": "boolean"
                },
                "done": {
                    "type": "boolean"
                },
                "numberOfDependents": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "ConfigFieldDefinition": {
            "properties": {
                "attributes": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "fieldName": {
                    "type": "string"
                },
                "typeName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConnectorDefinition": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sinkClass": {
                    "type": "string"
                },
                "sinkConfigClass": {
                    "type": "string"
                },
                "sourceClass": {
                    "type": "string"
                },
                "sourceConfigClass": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ConsumerConfig": {
            "properties": {
                "consumerProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "cryptoConfig": {
                    "$ref": "#/definitions/CryptoConfig"
                },
                "poolMessages": {
                    "type": "boolean"
                },
                "receiverQueueSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "regexPattern": {
                    "type": "boolean"
                },
                "schemaProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "schemaType": {
                    "type": "string"
                },
                "serdeClassName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CryptoConfig": {
            "properties": {
                "consumerCryptoFailureAction": {
                    "enum": [
                        "FAIL",
                        "DISCARD",
                        "CONSUME"
                    ],
                    "type": "string"
                },
                "cryptoKeyReaderClassName": {
                    "type": "string"
                },
                "cryptoKeyReaderConfig": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "encryptionKeys": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "producerCryptoFailureAction": {
                    "enum": [
                        "FAIL",
                        "SEND"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ExceptionInformation": {
            "properties": {
                "exceptionString": {
                    "type": "string"
                },
                "timestampMs": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "PublicKey": {
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "encoded": {
                    "items": {
                        "format": "byte",
                        "type": "string"
                    },
                    "type": "array"
                },
                "format": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Resources": {
            "properties": {
                "cpu": {
                    "format": "double",
                    "type": "number"
                },
                "disk": {
                    "format": "int64",
                    "type": "integer"
                },
                "ram": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SinkConfig": {
            "properties": {
                "archive": {
                    "type": "string"
                },
                "autoAck": {
                    "type": "boolean"
                },
                "className": {
                    "type": "string"
                },
                "cleanupSubscription": {
                    "type": "boolean"
                },
                "configs": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "customRuntimeOptions": {
                    "type": "string"
                },
                "deadLetterTopic": {
                    "type": "string"
                },
                "inputSpecs": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ConsumerConfig"
                    },
                    "type": "object"
                },
                "inputs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "maxMessageRetries": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "negativeAckRedeliveryDelayMs": {
                    "format": "int64",
                    "type": "integer"
                },
                "parallelism": {
                    "format": "int32",
                    "type": "integer"
                },
                "processingGuarantees": {
                    "enum": [
                        "ATLEAST_ONCE",
                        "ATMOST_ONCE",
                        "EFFECTIVELY_ONCE",
                        "MANUAL"
                    ],
                    "type": "string"
                },
                "resources": {
                    "$ref": "#/definitions/Resources"
                },
                "retainKeyOrdering": {
                    "type": "boolean"
                },
                "retainOrdering": {
                    "type": "boolean"
                },
                "runtimeFlags": {
                    "type": "string"
                },
                "secrets": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "sinkType": {
                    "type": "string"
                },
                "sourceSubscriptionName": {
                    "type": "string"
                },
                "sourceSubscriptionPosition": {
                    "enum": [
                        "Latest",
                        "Earliest"
                    ],
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                },
                "timeoutMs": {
                    "format": "int64",
                    "type": "integer"
                },
                "topicToSchemaProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "topicToSchemaType": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "topicToSerdeClassName": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "topicsPattern": {
                    "type": "string"
                },
                "transformFunction": {
                    "type": "string"
                },
                "transformFunctionClassName": {
                    "type": "string"
                },
                "transformFunctionConfig": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SinkInstanceStatus": {
            "properties": {
                "instanceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/SinkInstanceStatusData"
                }
            },
            "type": "object"
        },
        "SinkInstanceStatusData": {
            "properties": {
                "error": {
                    "type": "string"
                },
                "lastReceivedTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "latestSinkExceptions": {
                    "items": {
                        "$ref": "#/definitions/ExceptionInformation"
                    },
                    "type": "array"
                },
                "latestSystemExceptions": {
                    "items": {
                        "$ref": "#/definitions/ExceptionInformation"
                    },
                    "type": "array"
                },
                "numReadFromPulsar": {
                    "format": "int64",
                    "type": "integer"
                },
                "numRestarts": {
                    "format": "int64",
                    "type": "integer"
                },
                "numSinkExceptions": {
                    "format": "int64",
                    "type": "integer"
                },
                "numSystemExceptions": {
                    "format": "int64",
                    "type": "integer"
                },
                "numWrittenToSink": {
                    "format": "int64",
                    "type": "integer"
                },
                "running": {
                    "type": "boolean"
                },
                "workerId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "SinkStatus": {
            "properties": {
                "instances": {
                    "items": {
                        "$ref": "#/definitions/SinkInstanceStatus"
                    },
                    "type": "array"
                },
                "numInstances": {
                    "format": "int32",
                    "type": "integer"
                },
                "numRunning": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "SocketAddress": {
            "type": "object"
        },
        "UpdateOptions": {
            "description": "Options while updating the sink",
            "properties": {
                "update-auth-data": {
                    "description": "Whether or not to update the auth data",
                    "type": "boolean"
                }
            },
            "type": "object"
        }
    },
    "info": {
        "description": "This provides the REST API for Pulsar Sink operations",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "title": "Pulsar Sink REST API",
        "version": "v3"
    },
    "paths": {
        "/sinks/builtinsinks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_getSinkList",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Get builtin sinks successfully.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ConnectorDefinition"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Fetches the list of built-in Pulsar IO sinks",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/builtinsinks/{name}/configdefinition": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_getSinkConfigDefinition",
                "parameters": [
                    {
                        "description": "The name of the builtin sink",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ConfigFieldDefinition"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "The requester doesn't have admin permissions"
                    },
                    "404": {
                        "description": "builtin sink does not exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Fetches information about config fields associated with the specified builtin sink",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/reloadBuiltInSinks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_reloadSinks",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "401": {
                        "description": "This operation requires super-user access"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Reload the built-in connectors, including Sources and Sinks",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_listSinks",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid list request"
                    },
                    "401": {
                        "description": "The client is not authorized to perform this operation"
                    },
                    "500": {
                        "description": "Internal server error (failed to authorize, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Lists all Pulsar Sinks currently deployed in a given namespace",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_deregisterSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The Pulsar Sink was successfully deleted"
                    },
                    "400": {
                        "description": "Invalid deregister request"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "408": {
                        "description": "Got InterruptedException while deregistering the Pulsar Sink"
                    },
                    "500": {
                        "description": "Internal server error (failed to authorize, failed to deregister, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Deletes a Pulsar Sink currently running in cluster mode",
                "tags": [
                    "sinks"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_getSinkInfo",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SinkConfig"
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Fetches information about a Pulsar Sink currently running in cluster mode",
                "tags": [
                    "sinks"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "SinksBase_registerSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "You can submit a sink (in any languages that you are familiar with) to a Pulsar cluster. Follow the steps below.\n1. Create a JSON object using some of the following parameters.\nA JSON value presenting config payload of a Pulsar Sink. All available configuration options are:\n- **classname**\n   The class name of a Pulsar Sink if archive is file-url-path (file://)\n- **sourceSubscriptionName**\n   Pulsar source subscription name if user wants a specific\n   subscription-name for input-topic consumer\n- **inputs**\n   The input topic or topics of a Pulsar Sink (specified as a JSON array)\n- **topicsPattern**\n   TopicsPattern to consume from list of topics under a namespace that    match the pattern. [input] and [topicsPattern] are mutually    exclusive. Add SerDe class name for a pattern in customSerdeInputs    (supported for java fun only)- **topicToSerdeClassName**\n   The map of input topics to SerDe class names (specified as a JSON object)\n- **topicToSchemaType**\n   The map of input topics to Schema types or class names (specified as a JSON object)\n- **inputSpecs**\n   The map of input topics to its consumer configuration, each configuration has schema of    {\"schemaType\": \"type-x\", \"serdeClassName\": \"name-x\", \"isRegexPattern\": true, \"receiverQueueSize\": 5}\n- **configs**\n   The map of configs (specified as a JSON object)\n- **secrets**\n   a map of secretName(aka how the secret is going to be \n   accessed in the function via context) to an object that \n   encapsulates how the secret is fetched by the underlying \n   secrets provider. The type of an value here can be found by the \n   SecretProviderConfigurator.getSecretObjectType() method. (specified as a JSON object)\n- **parallelism**\n   The parallelism factor of a Pulsar Sink (i.e. the number of a Pulsar Sink instances to run \n- **processingGuarantees**\n   The processing guarantees (aka delivery semantics) applied to the Pulsar Sink. Possible Values: \"ATLEAST_ONCE\", \"ATMOST_ONCE\", \"EFFECTIVELY_ONCE\"\n- **retainOrdering**\n   Boolean denotes whether the Pulsar Sink consumes and processes messages in order\n- **resources**\n   {\"cpu\": 1, \"ram\": 2, \"disk\": 3} The CPU (in cores), RAM (in bytes) and disk (in bytes) that needs to be allocated per Pulsar Sink instance (applicable only to Docker runtime)\n- **autoAck**\n   Boolean denotes whether or not the framework will automatically acknowledge messages\n- **timeoutMs**\n   Long denotes the message timeout in milliseconds\n- **cleanupSubscription**\n   Boolean denotes whether the subscriptions the functions created/used should be deleted when the functions is deleted\n- **runtimeFlags**\n   Any flags that you want to pass to the runtime as a single string\n2. Encapsulate the JSON object to a multipart object.",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SinkConfig"
                        },
                        "x-examples": {
                            "text/plain": "Example\n1. Create a JSON object.\n {\n  \"classname\": \"org.example.MySinkTest\",\n  \"inputs\": [\"persistent://public/default/sink-input\"],\n  \"processingGuarantees\": \"EFFECTIVELY_ONCE\",\n  \"parallelism\": \"10\"\n }\n2. Encapsulate the JSON object to a multipart object (in Python).\nfrom requests_toolbelt.multipart.encoder import MultipartEncoder\nmp_encoder = MultipartEncoder( [('sinkConfig',(None, json.dumps(config), 'application/json'))])"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Pulsar Sink successfully created"
                    },
                    "400": {
                        "description": "Invalid request (The Pulsar Sink already exists, etc.)"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "500": {
                        "description": "Internal server error (failed to authorize, failed to get tenant data, failed to process package, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Creates a new Pulsar Sink in cluster mode",
                "tags": [
                    "sinks"
                ]
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "description": "",
                "operationId": "SinksBase_updateSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "A JSON value presenting config payload of a Pulsar Sink. All available configuration options are:\n- **classname**\n   The class name of a Pulsar Sink if archive is file-url-path (file://)\n- **sourceSubscriptionName**\n   Pulsar source subscription name if user wants a specific\n   subscription-name for input-topic consumer\n- **inputs**\n   The input topic or topics of a Pulsar Sink (specified as a JSON array)\n- **topicsPattern**\n   TopicsPattern to consume from list of topics under a namespace that    match the pattern. [input] and [topicsPattern] are mutually    exclusive. Add SerDe class name for a pattern in customSerdeInputs    (supported for java fun only)- **topicToSerdeClassName**\n   The map of input topics to SerDe class names (specified as a JSON object)\n- **topicToSchemaType**\n   The map of input topics to Schema types or class names (specified as a JSON object)\n- **inputSpecs**\n   The map of input topics to its consumer configuration, each configuration has schema of    {\"schemaType\": \"type-x\", \"serdeClassName\": \"name-x\", \"isRegexPattern\": true, \"receiverQueueSize\": 5}\n- **configs**\n   The map of configs (specified as a JSON object)\n- **secrets**\n   a map of secretName(aka how the secret is going to be \n   accessed in the function via context) to an object that \n   encapsulates how the secret is fetched by the underlying \n   secrets provider. The type of an value here can be found by the \n   SecretProviderConfigurator.getSecretObjectType() method. (specified as a JSON object)\n- **parallelism**\n   The parallelism factor of a Pulsar Sink (i.e. the number of a Pulsar Sink instances to run \n- **processingGuarantees**\n   The processing guarantees (aka delivery semantics) applied to the Pulsar Sink. Possible Values: \"ATLEAST_ONCE\", \"ATMOST_ONCE\", \"EFFECTIVELY_ONCE\"\n- **retainOrdering**\n   Boolean denotes whether the Pulsar Sink consumes and processes messages in order\n- **resources**\n   {\"cpu\": 1, \"ram\": 2, \"disk\": 3} The CPU (in cores), RAM (in bytes) and disk (in bytes) that needs to be allocated per Pulsar Sink instance (applicable only to Docker runtime)\n- **autoAck**\n   Boolean denotes whether or not the framework will automatically acknowledge messages\n- **timeoutMs**\n   Long denotes the message timeout in milliseconds\n- **cleanupSubscription**\n   Boolean denotes whether the subscriptions the functions created/used should be deleted when the functions is deleted\n- **runtimeFlags**\n   Any flags that you want to pass to the runtime as a single string\n",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SinkConfig"
                        },
                        "x-examples": {
                            "application/json": "{\n\"classname\": \"org.example.SinkStressTest\",\n\"inputs\": [\"persistent://public/default/sink-input\"],\n\"processingGuarantees\": \"EFFECTIVELY_ONCE\",\n\"parallelism\": 5\n}"
                        }
                    },
                    {
                        "description": "Update options for the Pulsar Sink",
                        "in": "body",
                        "name": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UpdateOptions"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Pulsar Sink successfully updated"
                    },
                    "400": {
                        "description": "Invalid request (The Pulsar Sink doesn't exist, update contains no change, etc.)"
                    },
                    "401": {
                        "description": "Client is not authorized to perform operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink doesn't exist"
                    },
                    "500": {
                        "description": "Internal server error (failed to authorize, failed to process package, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Updates a Pulsar Sink currently running in cluster mode",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}/restart": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_restartSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid restart request"
                    },
                    "401": {
                        "description": "The client is not authorized to perform this operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "500": {
                        "description": "Internal server error (failed to restart the Pulsar Sink, failed to authorize, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Restart all instances of a Pulsar Sink",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}/start": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_startSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid start request"
                    },
                    "401": {
                        "description": "The client is not authorized to perform this operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "500": {
                        "description": "Internal server error (failed to start the Pulsar Sink, failed to authorize, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Start all instances of a Pulsar Sink",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}/status": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_getSinkStatus",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SinkStatus"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this sink"
                    },
                    "400": {
                        "description": "Invalid get status request"
                    },
                    "401": {
                        "description": "The client is not authorized to perform this operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Displays the status of a Pulsar Sink running in cluster mode",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}/stop": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_stopSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid stop request"
                    },
                    "401": {
                        "description": "The client is not authorized to perform this operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "500": {
                        "description": "Internal server error (failed to stop the Pulsar Sink, failed to authorize, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Stop all instances of a Pulsar Sink",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}/{instanceId}/restart": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_restartSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instanceId of a Pulsar Sink",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this sink"
                    },
                    "400": {
                        "description": "Invalid restart request"
                    },
                    "401": {
                        "description": "The client is not authorized to perform this operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "500": {
                        "description": "Internal server error (failed to restart the instance of a Pulsar Sink, failed to authorize, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Restart an instance of a Pulsar Sink",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}/{instanceId}/start": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_startSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instanceId of a Pulsar Sink",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid start request"
                    },
                    "401": {
                        "description": "The client is not authorized to perform this operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "500": {
                        "description": "Internal server error (failed to start the Pulsar Sink, failed to authorize, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Start an instance of a Pulsar Sink",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}/{instanceId}/status": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_getSinkInstanceStatus",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instanceId of a Pulsar Sink",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SinkInstanceStatusData"
                        }
                    },
                    "307": {
                        "description": "Current broker doesn't serve the namespace of this sink"
                    },
                    "400": {
                        "description": "The Pulsar Sink instance does not exist"
                    },
                    "404": {
                        "description": "The Pulsar Sink does not exist"
                    },
                    "500": {
                        "description": "Internal Server Error (got exception while getting status, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Displays the status of a Pulsar Sink instance",
                "tags": [
                    "sinks"
                ]
            }
        },
        "/sinks/{tenant}/{namespace}/{sinkName}/{instanceId}/stop": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "",
                "operationId": "SinksBase_stopSink",
                "parameters": [
                    {
                        "description": "The tenant of a Pulsar Sink",
                        "in": "path",
                        "name": "tenant",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The namespace of a Pulsar Sink",
                        "in": "path",
                        "name": "namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The name of a Pulsar Sink",
                        "in": "path",
                        "name": "sinkName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The instanceId of a Pulsar Sink",
                        "in": "path",
                        "name": "instanceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid stop request"
                    },
                    "401": {
                        "description": "The client is not authorized to perform this operation"
                    },
                    "404": {
                        "description": "The Pulsar Sink instance does not exist"
                    },
                    "500": {
                        "description": "Internal server error (failed to stop the Pulsar Sink, failed to authorize, etc.)"
                    },
                    "503": {
                        "description": "Function worker service is now initializing. Please try again later."
                    }
                },
                "summary": "Stop an instance of a Pulsar Sink",
                "tags": [
                    "sinks"
                ]
            }
        }
    },
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "tags": [
        {
            "name": "sinks"
        }
    ]
}
